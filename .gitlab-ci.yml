image: ruby:3.3.1
include:
  - template: Code-Quality.gitlab-ci.yml
services:
  - postgres:9.5
  - docker:dind  

variables:
  REGISTRY_URL: registry.gitlab.com/fiuba-memo2/tp2/tandil-api  
  POSTGRES_DB: db_test
  POSTGRES_USER: webapi
  POSTGRES_PASSWORD: Passw0rd!
  TEST_DB_URL: postgres://webapi:Passw0rd!@postgres/db_test
  DB_HOST: postgres
  TEAM: tandil

stages:
  - build
  - package
  - deploy_test
  - acceptance_test
  - deploy_prod


code_quality:
  stage: build
  artifacts:
    paths: [gl-code-quality-report.json]

build_job:
  stage: build
  script:
    - gem install bundler --no-document
    - bundle install --without staging production
    - APP_MODE=test bundle exec rake ci
    - bundle exec rake version > VERSION.txt
  artifacts:
    when: always
    paths:
      - VERSION.txt
      - reports/
    reports:
      junit: reports/spec/rspec.xml

package_job:
  stage: package
  image: docker:stable
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - VERSION=$(cat VERSION.txt)
    - echo $VERSION
    - docker build -f Dockerfile.prod --build-arg GIT_COMMIT=$CI_COMMIT_SHORT_SHA -t $REGISTRY_URL/$CI_PROJECT_NAME:$VERSION .
    - docker tag $REGISTRY_URL/$CI_PROJECT_NAME:$VERSION $REGISTRY_URL/$CI_PROJECT_NAME:latest
    - docker push $REGISTRY_URL/$CI_PROJECT_NAME:$VERSION
    - docker push $REGISTRY_URL/$CI_PROJECT_NAME:latest
  only:
    - tags

deploy_test_job:
  stage: deploy_test
  image: nicopaez/kubectl:1.28.0
  environment: test
  before_script:
    - apk add --no-cache bash curl  # Instalar Bash y curl sin guardar archivos de caché
  script:
    - VERSION=$(cat VERSION.txt)
    - cp ${KUBECONFIG} $HOME/.kube/config
    - kubectl -n ${TEAM}-${CI_ENVIRONMENT_NAME} apply -f infra/${CI_ENVIRONMENT_NAME}.configmap.yaml
    - kubectl -n ${TEAM}-${CI_ENVIRONMENT_NAME} set image deployment/restapi restapi=$REGISTRY_URL/$CI_PROJECT_NAME:$VERSION
    - bash ./scripts/smoke_test.sh ${CI_ENVIRONMENT_NAME} $VERSION
  only:
    - tags

acceptance_test_job:
  stage: acceptance_test
  script:
    - NON_LOCAL_TEST=true bundle exec rake remote_acceptance_test

deploy_prod_job:
  stage: deploy_prod
  image: nicopaez/kubectl:1.28.0
  environment: prod
  before_script:
    - apk add --no-cache bash curl  # Instalar Bash y curl sin guardar archivos de caché
  script:
    - VERSION=$(cat VERSION.txt)
    - cp ${KUBECONFIG} $HOME/.kube/config
    - kubectl -n ${TEAM}-${CI_ENVIRONMENT_NAME} apply -f infra/${CI_ENVIRONMENT_NAME}.configmap.yaml
    - kubectl -n ${TEAM}-${CI_ENVIRONMENT_NAME} set image deployment/restapi restapi=$REGISTRY_URL/$CI_PROJECT_NAME:$VERSION
    - bash ./scripts/smoke_test.sh ${CI_ENVIRONMENT_NAME} $VERSION
  only:
    - tags
  when: manual