2024-06-10 22:18:32.309055 I [2012:53020] restapi -- (0.000198s) SELECT CAST(current_setting('server_version_num') AS integer) AS v
2024-06-10 22:18:32.309454 I [2012:53020] restapi -- (0.000284s) SELECT NULL AS "nil" FROM "schema_migrations" LIMIT 1
2024-06-10 22:18:32.309592 I [2012:53020] restapi -- (0.000077s) SELECT * FROM "schema_migrations" LIMIT 0
2024-06-10 22:18:32.309889 I [2012:53020] restapi -- (0.000193s) SELECT "filename" FROM "schema_migrations" ORDER BY "filename"
# language: es
Caracter√≠stica: ABM de usuarios

  @remote
  Escenario: Alta de usuario    # features/abm_usuarios.feature:5
2024-06-10 22:18:32.353355 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"juan@test.com", "id_telegram"=>123456789}
2024-06-10 22:18:32.390083 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":390,"email":"juan@test.com","id_telegram":123456789}
    Cuando creo un usuario      # features/step_definitions/usuarios_steps.rb:3
    Entonces se le asigna un id # features/step_definitions/usuarios_steps.rb:9
2024-06-10 22:18:32.396086 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  @remote
  Escenario: Consulta de usuarios   # features/abm_usuarios.feature:10
2024-06-10 22:18:32.398571 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":390,"email":"juan@test.com","id_telegram":123456789}
    Dado que no existen usuario     # features/step_definitions/usuarios_steps.rb:15
2024-06-10 22:18:32.400040 I [2012:53020] restapi -- [GET] /usuarios - Consultando los usuarios registrados
    Cuando consulto los usuarios    # features/step_definitions/usuarios_steps.rb:19
2024-06-10 22:18:32.400297 I [2012:53020] restapi -- [Status] : 200 - [Response] : []
    Entonces tengo un listado vacio # features/step_definitions/usuarios_steps.rb:23
2024-06-10 22:18:32.401016 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Aniadir contenido a favoritos
2024-06-10 22:18:32.401302 I [2012:53020] restapi -- [Status] : 200 - [Response] : []

  Antecedentes:                                  # features/aniadir_favoritos.feature:4
2024-06-10 22:18:32.402191 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"pepito@gmail.com", "id_telegram"=>123456789}
    Dado un usuario "pepito@gmail.com" 123456789 # features/step_definitions/marcar_contenido_visto_steps.rb:4
2024-06-10 22:18:32.403311 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":391,"email":"pepito@gmail.com","id_telegram":123456789}

  Escenario: US08 - 01 Como cinefilo quiero aniadir un contenido a favoritos        # features/aniadir_favoritos.feature:7
2024-06-10 22:18:32.404080 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Siempre Risas", "anio"=>2010, "genero"=>"comedia"}
    Dado que el contenido "Siempre Risas" 2010 "comedia" existe en la base de datos # features/step_definitions/aniadir_favoritos_step.rb:4
2024-06-10 22:18:32.405471 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":706,"titulo":"Siempre Risas","anio":2010,"genero":"comedia"}
    Cuando el usuario aniade un contenido "Siempre Risas" a favoritos               # features/step_definitions/aniadir_favoritos_step.rb:17
2024-06-10 22:18:32.408059 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":29,"id_telegram":123456789,"id_contenido":706}
    Entonces ve un mensaje de exito al aniadir la pelicula a favoritos              # features/step_definitions/aniadir_favoritos_step.rb:32
2024-06-10 22:18:32.409140 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Buscar contenido por t√≠tulo
2024-06-10 22:18:32.410276 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":391,"email":"pepito@gmail.com","id_telegram":123456789}

  Antecedentes:                                                          # features/busqueda_por_titulo.feature:4
2024-06-10 22:18:32.411227 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"pepito@gmail.com", "id_telegram"=>123456789}
    Dado un usuario "pepito@gmail.com" 123456789                         # features/step_definitions/marcar_contenido_visto_steps.rb:4
2024-06-10 22:18:32.412215 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":392,"email":"pepito@gmail.com","id_telegram":123456789}
2024-06-10 22:18:32.412859 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Titanic", "anio"=>1997, "genero"=>"drama"}
    Y que el contenido "Titanic" 1997 "drama" existe en la base de datos # features/step_definitions/aniadir_favoritos_step.rb:4
2024-06-10 22:18:32.413863 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":707,"titulo":"Titanic","anio":1997,"genero":"drama"}

  Escenario: US08 - 01 Como cinefilo quiero buscar una pelicula por su nombre completo # features/busqueda_por_titulo.feature:8
[23, 32] in /app/persistencia/repositorio_peliculas.rb
  [2m  23|[0m     load_object(row) [32munless[0m row.nil?
  [2m  24|[0m   [32mend[0m
  [2m  25|[0m 
  [2m  26|[0m   [32mdef[0m [34m[1mfind_by_title[0m(titulo)
  [2m  27|[0m     require [31m[1m'[0m[31mdebug[0m[31m[1m'[0m
=>[2m  28|[0m     debugger
  [2m  29|[0m     load_collection dataset.where([34m[1m[4mSequel[0m.like([33m:[0m[33mtitulo[0m, [31m[1m"[0m[31m%[0m[31m#{[0mtitulo[31m}[0m[31m%[0m[31m[1m"[0m, [35mcase_insensitive:[0m [36m[1mtrue[0m))
  [2m  30|[0m   [32mend[0m
  [2m  31|[0m 
  [2m  32|[0m   protected
=>#0	[34m[1mRepositorioPeliculas#find_by_title[0m([36m[1mtitulo[0m="Titanic") at [32m/app/persistencia/repositorio_peliculas.rb:28[0m
  #1	[34m[1mblock[0m in [34m[1m<top (required)>[0m at [32m/app/app.rb:102[0m
  # and 113 frames (use `bt' command for all frames)
(rdbg) [0m(rdbg) [36m[4m[36m[4mc[0m[2m[36m[4m[0m[2m [36m[4m[0m[2m [36m[4m[0m[2m [36m[4m[0m[2m [36m[4m[0m[2m#[36m[4m[0m[2m [36m[4m[0m[2mc[36m[4m[0m[2mo[36m[4m[0m[2mn[36m[4m[0m[2mt[36m[4m[0m[2mi[36m[4m[0m[2mn[36m[4m[0m[2mu[36m[4m[0m[2me[36m[4m[0m[2m [36m[4m[0m[2mc[36m[4m[0m[2mo[36m[4m[0m[2mm[36m[4m[0m[2mm[36m[4m[0m[2ma[36m[4m[0m[2mn[36m[4m[0m[2md[0m[0m[36m[4m[0m[2m [0m[36m[4m[0m[2m     Cuando el usuario busca la pelicula "Titanic"                                      # features/step_definitions/busqueda_por_titulo_step.rb:7
    Entonces deber√≠a ver la pel√≠cula "Titanic" listada entre las existentes            # features/step_definitions/busqueda_por_titulo_step.rb:14
      unexpected token at '<!DOCTYPE html>
      <html>
      <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
        <title>NoMethodError at &#x2F;contenido</title>
      
        <script type="text/javascript">
        //<!--
        function toggle(id) {
          var pre  = document.getElementById("pre-" + id);
          var post = document.getElementById("post-" + id);
          var context = document.getElementById("context-" + id);
      
          if (pre.style.display == 'block') {
            pre.style.display = 'none';
            post.style.display = 'none';
            context.style.background = "none";
          } else {
            pre.style.display = 'block';
            post.style.display = 'block';
            context.style.background = "#fffed9";
          }
        }
      
        function toggleBacktrace(){
          var bt = document.getElementById("backtrace");
          var toggler = document.getElementById("expando");
      
          if (bt.className == 'condensed') {
            bt.className = 'expanded';
            toggler.innerHTML = "(condense)";
          } else {
            bt.className = 'condensed';
            toggler.innerHTML = "(expand)";
          }
        }
        //-->
        </script>
      
      <style type="text/css" media="screen">
        *                   {margin: 0; padding: 0; border: 0; outline: 0;}
        div.clear           {clear: both;}
        body                {background: #EEEEEE; margin: 0; padding: 0;
                             font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                             'Garuda';}
        code                {font-family: 'Lucida Console', monospace;
                             font-size: 12px;}
        li                  {height: 18px;}
        ul                  {list-style: none; margin: 0; padding: 0;}
        ol:hover            {cursor: pointer;}
        ol li               {white-space: pre;}
        #explanation        {font-size: 12px; color: #666666;
                             margin: 20px 0 0 100px;}
      /* WRAP */
        #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                             padding: 30px 50px 20px 50px;
                             border-left: 1px solid #DDDDDD;
                             border-right: 1px solid #DDDDDD;}
      /* HEADER */
        #header             {margin: 0 auto 25px auto;}
        #header img         {float: left;}
        #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                             font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
        h1                  {margin: 0; font-size: 36px; color: #981919;}
        h2                  {margin: 0; font-size: 22px; color: #333333;}
        #header ul          {margin: 0; font-size: 12px; color: #666666;}
        #header ul li strong{color: #444444;}
        #header ul li       {display: inline; padding: 0 10px;}
        #header ul li.first {padding-left: 0;}
        #header ul li.last  {border: 0; padding-right: 0;}
      /* BODY */
        #backtrace,
        #get,
        #post,
        #cookies,
        #rack               {width: 980px; margin: 0 auto 10px auto;}
        p#nav               {float: right; font-size: 14px;}
      /* BACKTRACE */
        a#expando           {float: left; padding-left: 5px; color: #666666;
                            font-size: 14px; text-decoration: none; cursor: pointer;}
        a#expando:hover     {text-decoration: underline;}
        h3                  {float: left; width: 100px; margin-bottom: 10px;
                             color: #981919; font-size: 14px; font-weight: bold;}
        #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
        #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                                 font-size: 12px; color: #333333;}
        #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                             border-bottom: 0;}
        #backtrace ol       {width: 920px; margin-left: 50px;
                             font: 10px 'Lucida Console', monospace; color: #666666;}
        #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                             padding: 2px 0;}
        #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
        #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                             padding: 3px 0;}
        #backtrace-ul .code {padding: 6px 0 4px 0;}
        #backtrace.condensed .system,
        #backtrace.condensed .framework {display:none;}
      /* REQUEST DATA */
        p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
        table.req           {width: 980px; text-align: left; font-size: 12px;
                             color: #666666; padding: 0; border-spacing: 0;
                             border: 1px solid #EEEEEE; border-bottom: 0;
                             border-left: 0;
                             clear:both}
        table.req tr th     {padding: 2px 10px; font-weight: bold;
                             background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                             border-left: 1px solid #EEEEEE;}
        table.req tr td     {padding: 2px 20px 2px 10px;
                             border-bottom: 1px solid #EEEEEE;
                             border-left: 1px solid #EEEEEE;}
      /* HIDE PRE/POST CODE AT START */
        .pre-context,
        .post-context       {display: none;}
      
        table td.code       {width:750px}
        table td.code div   {width:750px;overflow:hidden}
      </style>
      </head>
      <body>
        <div id="wrap">
          <div id="header">
            <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
            <div id="summary">
              <h1><strong>NoMethodError</strong> at <strong>&#x2F;contenido
                </strong></h1>
              <h2>undefined method `id&#x27; for an instance of Array</h2>
              <ul>
                <li class="first"><strong>file:</strong> <code>
                  app.rb</code></li>
                <li><strong>location:</strong> <code>block in &lt;top (required)&gt;
                  </code></li>
                <li class="last"><strong>line:
                  </strong> 104</li>
              </ul>
            </div>
            <div class="clear"></div>
          </div>
      
          <div id="backtrace" class='condensed'>
            <h3>BACKTRACE</h3>
            <p><a href="#" id="expando"
                  onclick="toggleBacktrace(); return false">(expand)</a></p>
            <p id="nav"><strong>JUMP TO:</strong>
               
                  <a href="#get-info">GET</a>
                  <a href="#post-info">POST</a>
               
               <a href="#cookie-info">COOKIES</a>
               <a href="#env-info">ENV</a>
            </p>
            <div class="clear"></div>
      
            <ul id="backtrace-ul">
      
            
            
                
      
                  <li class="frame-info app">
                    <code>&#x2F;app&#x2F;app.rb</code> in
                      <code><strong>block in &lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code app">
                    
                    <ol start="97"
                        class="pre-context" id="pre-1"
                        onclick="toggle(1);">
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>get &#x27;&#x2F;contenido&#x27; do
      </code></li>
                      
                      <li class="pre-context-line"><code>  titulo = params[&#x27;titulo&#x27;]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  pelicula = RepositorioPeliculas.new.find_by_title(titulo)
      </code></li>
                      
                      <li class="pre-context-line"><code>  status 200
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="104" class="context" id="1"
                        onclick="toggle(1);">
                      <li class="context-line" id="context-1"><code>  [{ id: pelicula.id, titulo: pelicula.titulo, anio: pelicula.anio, genero: pelicula.genero }].to_json</code></li>
                    </ol>
      
                    
                    <ol start="105" class="post-context"
                        id="post-1" onclick="toggle(1);">
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>post &#x27;&#x2F;visualizacion&#x27; do
      </code></li>
                      
                      <li class="post-context-line"><code>  @body ||= request.body.read
      </code></li>
                      
                      <li class="post-context-line"><code>  parametros_visualizacion = JSON.parse(@body)
      </code></li>
                      
                      <li class="post-context-line"><code>  email = parametros_visualizacion[&#x27;email&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>  id_pelicula = parametros_visualizacion[&#x27;id_pelicula&#x27;]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1699"
                        class="pre-context" id="pre-2"
                        onclick="toggle(2);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        pattern                 = compile(path, route_mustermann_opts)
      </code></li>
                      
                      <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        conditions = @conditions
      </code></li>
                      
                      <li class="pre-context-line"><code>        @conditions = []
      </code></li>
                      
                      <li class="pre-context-line"><code>        wrapper = block.arity.zero? ?
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1706" class="context" id="2"
                        onclick="toggle(2);">
                      <li class="context-line" id="context-2"><code>          proc { |a, _p| unbound_method.bind(a).call } :</code></li>
                    </ol>
      
                    
                    <ol start="1707" class="post-context"
                        id="post-2" onclick="toggle(2);">
                      
                      <li class="post-context-line"><code>          proc { |a, p| unbound_method.bind(a).call(*p) }
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        [pattern, conditions, wrapper]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def compile(path, route_mustermann_opts = {})
      </code></li>
                      
                      <li class="post-context-line"><code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in compile!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1699"
                        class="pre-context" id="pre-3"
                        onclick="toggle(3);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        pattern                 = compile(path, route_mustermann_opts)
      </code></li>
                      
                      <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        conditions = @conditions
      </code></li>
                      
                      <li class="pre-context-line"><code>        @conditions = []
      </code></li>
                      
                      <li class="pre-context-line"><code>        wrapper = block.arity.zero? ?
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1706" class="context" id="3"
                        onclick="toggle(3);">
                      <li class="context-line" id="context-3"><code>          proc { |a, _p| unbound_method.bind(a).call } :</code></li>
                    </ol>
      
                    
                    <ol start="1707" class="post-context"
                        id="post-3" onclick="toggle(3);">
                      
                      <li class="post-context-line"><code>          proc { |a, p| unbound_method.bind(a).call(*p) }
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        [pattern, conditions, wrapper]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def compile(path, route_mustermann_opts = {})
      </code></li>
                      
                      <li class="post-context-line"><code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block (3 levels) in route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1012"
                        class="pre-context" id="pre-4"
                        onclick="toggle(4);">
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes&amp;.each do |pattern, conditions, block|
      </code></li>
                      
                      <li class="pre-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1019" class="context" id="4"
                        onclick="toggle(4);">
                      <li class="context-line" id="context-4"><code>          route_eval { block[*args] }</code></li>
                    </ol>
      
                    
                    <ol start="1020" class="post-context"
                        id="post-4" onclick="toggle(4);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        # don&#x27;t wipe out pass_block in superclass
      </code></li>
                      
                      <li class="post-context-line"><code>        pass_block = returned_pass_block if returned_pass_block
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Run routes defined in superclass.
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>route_eval</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1030"
                        class="pre-context" id="pre-5"
                        onclick="toggle(5);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
      </code></li>
                      
                      <li class="pre-context-line"><code>      route_missing
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route_eval
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1037" class="context" id="5"
                        onclick="toggle(5);">
                      <li class="context-line" id="context-5"><code>      throw :halt, yield</code></li>
                    </ol>
      
                    
                    <ol start="1038" class="post-context"
                        id="post-5" onclick="toggle(5);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
      </code></li>
                      
                      <li class="post-context-line"><code>    # with keys and call the given block.
      </code></li>
                      
                      <li class="post-context-line"><code>    # Revert params afterwards.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                      <li class="post-context-line"><code>    # Returns pass block.
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block (2 levels) in route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1012"
                        class="pre-context" id="pre-6"
                        onclick="toggle(6);">
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes&amp;.each do |pattern, conditions, block|
      </code></li>
                      
                      <li class="pre-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1019" class="context" id="6"
                        onclick="toggle(6);">
                      <li class="context-line" id="context-6"><code>          route_eval { block[*args] }</code></li>
                    </ol>
      
                    
                    <ol start="1020" class="post-context"
                        id="post-6" onclick="toggle(6);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        # don&#x27;t wipe out pass_block in superclass
      </code></li>
                      
                      <li class="post-context-line"><code>        pass_block = returned_pass_block if returned_pass_block
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Run routes defined in superclass.
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in process_route</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1061"
                        class="pre-context" id="pre-7"
                        onclick="toggle(7);">
                      
                      <li class="pre-context-line"><code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?
      </code></li>
                      
                      <li class="pre-context-line"><code>      else
      </code></li>
                      
                      <li class="pre-context-line"><code>        values += params.values.flatten
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      catch(:pass) do
      </code></li>
                      
                      <li class="pre-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1068" class="context" id="7"
                        onclick="toggle(7);">
                      <li class="context-line" id="context-7"><code>        block ? block[self, values] : yield(self, values)</code></li>
                    </ol>
      
                    
                    <ol start="1069" class="post-context"
                        id="post-7" onclick="toggle(7);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue StandardError
      </code></li>
                      
                      <li class="post-context-line"><code>      @env[&#x27;sinatra.error.params&#x27;] = @params
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                      <li class="post-context-line"><code>      params ||= {}
      </code></li>
                      
                      <li class="post-context-line"><code>      params.each { |k, _| @params.delete(k) } unless @env[&#x27;sinatra.error.params&#x27;]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>catch</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1059"
                        class="pre-context" id="pre-8"
                        onclick="toggle(8);">
                      
                      <li class="pre-context-line"><code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }
      </code></li>
                      
                      <li class="pre-context-line"><code>        values            += captures
      </code></li>
                      
                      <li class="pre-context-line"><code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?
      </code></li>
                      
                      <li class="pre-context-line"><code>      else
      </code></li>
                      
                      <li class="pre-context-line"><code>        values += params.values.flatten
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1066" class="context" id="8"
                        onclick="toggle(8);">
                      <li class="context-line" id="context-8"><code>      catch(:pass) do</code></li>
                    </ol>
      
                    
                    <ol start="1067" class="post-context"
                        id="post-8" onclick="toggle(8);">
                      
                      <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
      </code></li>
                      
                      <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue StandardError
      </code></li>
                      
                      <li class="post-context-line"><code>      @env[&#x27;sinatra.error.params&#x27;] = @params
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>process_route</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1059"
                        class="pre-context" id="pre-9"
                        onclick="toggle(9);">
                      
                      <li class="pre-context-line"><code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }
      </code></li>
                      
                      <li class="pre-context-line"><code>        values            += captures
      </code></li>
                      
                      <li class="pre-context-line"><code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?
      </code></li>
                      
                      <li class="pre-context-line"><code>      else
      </code></li>
                      
                      <li class="pre-context-line"><code>        values += params.values.flatten
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1066" class="context" id="9"
                        onclick="toggle(9);">
                      <li class="context-line" id="context-9"><code>      catch(:pass) do</code></li>
                    </ol>
      
                    
                    <ol start="1067" class="post-context"
                        id="post-9" onclick="toggle(9);">
                      
                      <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
      </code></li>
                      
                      <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue StandardError
      </code></li>
                      
                      <li class="post-context-line"><code>      @env[&#x27;sinatra.error.params&#x27;] = @params
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1010"
                        class="pre-context" id="pre-10"
                        onclick="toggle(10);">
                      
                      <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes&amp;.each do |pattern, conditions, block|
      </code></li>
                      
                      <li class="pre-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1017" class="context" id="10"
                        onclick="toggle(10);">
                      <li class="context-line" id="context-10"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|</code></li>
                    </ol>
      
                    
                    <ol start="1018" class="post-context"
                        id="post-10" onclick="toggle(10);">
                      
                      <li class="post-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>          route_eval { block[*args] }
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        # don&#x27;t wipe out pass_block in superclass
      </code></li>
                      
                      <li class="post-context-line"><code>        pass_block = returned_pass_block if returned_pass_block
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>each</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1007"
                        class="pre-context" id="pre-11"
                        onclick="toggle(11);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1014" class="context" id="11"
                        onclick="toggle(11);">
                      <li class="context-line" id="context-11"><code>      routes&amp;.each do |pattern, conditions, block|</code></li>
                    </ol>
      
                    
                    <ol start="1015" class="post-context"
                        id="post-11" onclick="toggle(11);">
                      
                      <li class="post-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="post-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>          route_eval { block[*args] }
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1007"
                        class="pre-context" id="pre-12"
                        onclick="toggle(12);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1014" class="context" id="12"
                        onclick="toggle(12);">
                      <li class="context-line" id="context-12"><code>      routes&amp;.each do |pattern, conditions, block|</code></li>
                    </ol>
      
                    
                    <ol start="1015" class="post-context"
                        id="post-12" onclick="toggle(12);">
                      
                      <li class="post-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="post-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>          route_eval { block[*args] }
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in dispatch!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1131"
                        class="pre-context" id="pre-13"
                        onclick="toggle(13);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      invoke do
      </code></li>
                      
                      <li class="pre-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
      </code></li>
                      
                      <li class="pre-context-line"><code>        filter! :before do
      </code></li>
                      
                      <li class="pre-context-line"><code>          @pinned_response = !response[&#x27;Content-Type&#x27;].nil?
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1138" class="context" id="13"
                        onclick="toggle(13);">
                      <li class="context-line" id="context-13"><code>        route!</code></li>
                    </ol>
      
                    
                    <ol start="1139" class="post-context"
                        id="post-13" onclick="toggle(13);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue ::Exception =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>      invoke { handle_exception!(e) }
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                      <li class="post-context-line"><code>      begin
      </code></li>
                      
                      <li class="post-context-line"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>      rescue ::Exception =&gt; e
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>catch</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-14"
                        onclick="toggle(14);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="14"
                        onclick="toggle(14);">
                      <li class="context-line" id="context-14"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-14" onclick="toggle(14);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-15"
                        onclick="toggle(15);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="15"
                        onclick="toggle(15);">
                      <li class="context-line" id="context-15"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-15" onclick="toggle(15);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>dispatch!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1126"
                        class="pre-context" id="pre-16"
                        onclick="toggle(16);">
                      
                      <li class="pre-context-line"><code>      @params.merge!(@request.params).each do |key, val|
      </code></li>
                      
                      <li class="pre-context-line"><code>        next unless val.respond_to?(:force_encoding)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        val = val.dup if val.frozen?
      </code></li>
                      
                      <li class="pre-context-line"><code>        @params[key] = force_encoding(val)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1133" class="context" id="16"
                        onclick="toggle(16);">
                      <li class="context-line" id="context-16"><code>      invoke do</code></li>
                    </ol>
      
                    
                    <ol start="1134" class="post-context"
                        id="post-16" onclick="toggle(16);">
                      
                      <li class="post-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
      </code></li>
                      
                      <li class="post-context-line"><code>        filter! :before do
      </code></li>
                      
                      <li class="post-context-line"><code>          @pinned_response = !response[&#x27;Content-Type&#x27;].nil?
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        route!
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue ::Exception =&gt; e
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in call!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="942"
                        class="pre-context" id="pre-17"
                        onclick="toggle(17);">
                      
                      <li class="pre-context-line"><code>      @env      = env
      </code></li>
                      
                      <li class="pre-context-line"><code>      @params   = IndifferentHash.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @request  = Request.new(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @response = Response.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @pinned_response = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="949" class="context" id="17"
                        onclick="toggle(17);">
                      <li class="context-line" id="context-17"><code>      invoke { dispatch! }</code></li>
                    </ol>
      
                    
                    <ol start="950" class="post-context"
                        id="post-17" onclick="toggle(17);">
                      
                      <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type body[0].content_type
      </code></li>
                      
                      <li class="post-context-line"><code>        elsif (default = settings.default_content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type default
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>catch</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-18"
                        onclick="toggle(18);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="18"
                        onclick="toggle(18);">
                      <li class="context-line" id="context-18"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-18" onclick="toggle(18);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-19"
                        onclick="toggle(19);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="19"
                        onclick="toggle(19);">
                      <li class="context-line" id="context-19"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-19" onclick="toggle(19);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="942"
                        class="pre-context" id="pre-20"
                        onclick="toggle(20);">
                      
                      <li class="pre-context-line"><code>      @env      = env
      </code></li>
                      
                      <li class="pre-context-line"><code>      @params   = IndifferentHash.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @request  = Request.new(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @response = Response.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @pinned_response = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="949" class="context" id="20"
                        onclick="toggle(20);">
                      <li class="context-line" id="context-20"><code>      invoke { dispatch! }</code></li>
                    </ol>
      
                    
                    <ol start="950" class="post-context"
                        id="post-20" onclick="toggle(20);">
                      
                      <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type body[0].content_type
      </code></li>
                      
                      <li class="post-context-line"><code>        elsif (default = settings.default_content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type default
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="931"
                        class="pre-context" id="pre-21"
                        onclick="toggle(21);">
                      
                      <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @pinned_response = nil # whether a before! filter pinned the content-type
      </code></li>
                      
                      <li class="pre-context-line"><code>      yield self if block_given?
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Rack call interface.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="938" class="context" id="21"
                        onclick="toggle(21);">
                      <li class="context-line" id="context-21"><code>      dup.call!(env)</code></li>
                    </ol>
      
                    
                    <ol start="939" class="post-context"
                        id="post-21" onclick="toggle(21);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def call!(env) # :nodoc:
      </code></li>
                      
                      <li class="post-context-line"><code>      @env      = env
      </code></li>
                      
                      <li class="post-context-line"><code>      @params   = IndifferentHash.new
      </code></li>
                      
                      <li class="post-context-line"><code>      @request  = Request.new(env)
      </code></li>
                      
                      <li class="post-context-line"><code>      @response = Response.new
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-22"
                        onclick="toggle(22);">
                      
                      <li class="pre-context-line"><code>    #
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Options:
      </code></li>
                      
                      <li class="pre-context-line"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)
      </code></li>
                      
                      <li class="pre-context-line"><code>    class XSSHeader &lt; Base
      </code></li>
                      
                      <li class="pre-context-line"><code>      default_options xss_mode: :block, nosniff: true
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="22"
                        onclick="toggle(22);">
                      <li class="context-line" id="context-22"><code>        status, headers, body = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-22" onclick="toggle(22);">
                      
                      <li class="post-context-line"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers
      </code></li>
                      
                      <li class="post-context-line"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]
      </code></li>
                      
                      <li class="post-context-line"><code>        [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="11"
                        class="pre-context" id="pre-23"
                        onclick="toggle(23);">
                      
                      <li class="pre-context-line"><code>    #
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
      </code></li>
                      
                      <li class="pre-context-line"><code>    class PathTraversal &lt; Base
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        path_was         = env[&#x27;PATH_INFO&#x27;]
      </code></li>
                      
                      <li class="pre-context-line"><code>        env[&#x27;PATH_INFO&#x27;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="18" class="context" id="23"
                        onclick="toggle(23);">
                      <li class="context-line" id="context-23"><code>        app.call env</code></li>
                    </ol>
      
                    
                    <ol start="19" class="post-context"
                        id="post-23" onclick="toggle(23);">
                      
                      <li class="post-context-line"><code>      ensure
      </code></li>
                      
                      <li class="post-context-line"><code>        env[&#x27;PATH_INFO&#x27;] = path_was
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def cleanup(path)
      </code></li>
                      
                      <li class="post-context-line"><code>        encoding = path.encoding
      </code></li>
                      
                      <li class="post-context-line"><code>        dot   = &#x27;.&#x27;.encode(encoding)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-24"
                        onclick="toggle(24);">
                      
                      <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
      </code></li>
                      
                      <li class="pre-context-line"><code>      default_options allow_if: nil
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      alias react deny
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        request               = Request.new(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="24"
                        onclick="toggle(24);">
                      <li class="context-line" id="context-24"><code>        status, headers, body = app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-24" onclick="toggle(24);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        if has_vector?(request, headers)
      </code></li>
                      
                      <li class="post-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          react_and_close(env, body) or [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>        else
      </code></li>
                      
                      <li class="post-context-line"><code>          [status, headers, body]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-25"
                        onclick="toggle(25);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        unless accepts? env
      </code></li>
                      
                      <li class="pre-context-line"><code>          instrument env
      </code></li>
                      
                      <li class="pre-context-line"><code>          result = react env
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="25"
                        onclick="toggle(25);">
                      <li class="context-line" id="context-25"><code>        result or app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-25" onclick="toggle(25);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def react(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result = send(options[:reaction], env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result if (Array === result) &amp;&amp; (result.size == 3)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-26"
                        onclick="toggle(26);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        unless accepts? env
      </code></li>
                      
                      <li class="pre-context-line"><code>          instrument env
      </code></li>
                      
                      <li class="pre-context-line"><code>          result = react env
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="26"
                        onclick="toggle(26);">
                      <li class="context-line" id="context-26"><code>        result or app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-26" onclick="toggle(26);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def react(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result = send(options[:reaction], env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result if (Array === result) &amp;&amp; (result.size == 3)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="26"
                        class="pre-context" id="pre-27"
                        onclick="toggle(27);">
                      
                      <li class="pre-context-line"><code>          frame_options = options[:frame_options]
      </code></li>
                      
                      <li class="pre-context-line"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str
      </code></li>
                      
                      <li class="pre-context-line"><code>          frame_options.to_str
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="33" class="context" id="27"
                        onclick="toggle(27);">
                      <li class="context-line" id="context-27"><code>        status, headers, body        = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="34" class="post-context"
                        id="post-27" onclick="toggle(27);">
                      
                      <li class="post-context-line"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers
      </code></li>
                      
                      <li class="post-context-line"><code>        [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;logger.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="10"
                        class="pre-context" id="pre-28"
                        onclick="toggle(28);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      logger = ::Logger.new(env[RACK_ERRORS])
      </code></li>
                      
                      <li class="pre-context-line"><code>      logger.level = @level
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      env[RACK_LOGGER] = logger
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="17" class="context" id="28"
                        onclick="toggle(28);">
                      <li class="context-line" id="context-28"><code>      @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="18" class="post-context"
                        id="post-28" onclick="toggle(28);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;common_logger.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="31"
                        class="pre-context" id="pre-29"
                        onclick="toggle(29);">
                      
                      <li class="pre-context-line"><code>    # will not be logged, so if exception handling middleware are used,
      </code></li>
                      
                      <li class="pre-context-line"><code>    # they should be loaded after this middleware.  Additionally, because
      </code></li>
                      
                      <li class="pre-context-line"><code>    # the logging happens after the request body has been fully sent, any
      </code></li>
                      
                      <li class="pre-context-line"><code>    # exceptions raised during the sending of the response body will
      </code></li>
                      
                      <li class="pre-context-line"><code>    # cause the request not to be logged.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      began_at = Utils.clock_time
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="38" class="context" id="29"
                        onclick="toggle(29);">
                      <li class="context-line" id="context-29"><code>      status, headers, body = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="39" class="post-context"
                        id="post-29" onclick="toggle(29);">
                      
                      <li class="post-context-line"><code>      headers = Utils::HeaderHash[headers]
      </code></li>
                      
                      <li class="post-context-line"><code>      body = BodyProxy.new(body) { log(env, status, headers, began_at) }
      </code></li>
                      
                      <li class="post-context-line"><code>      [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="254"
                        class="pre-context" id="pre-30"
                        onclick="toggle(30);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    superclass.class_eval do
      </code></li>
                      
                      <li class="pre-context-line"><code>      alias_method :call_without_check, :call unless method_defined? :call_without_check
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="261" class="context" id="30"
                        onclick="toggle(30);">
                      <li class="context-line" id="context-30"><code>        call_without_check(env)</code></li>
                    </ol>
      
                    
                    <ol start="262" class="post-context"
                        id="post-30" onclick="toggle(30);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>  class Error &lt; StandardError # :nodoc:
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="247"
                        class="pre-context" id="pre-31"
                        onclick="toggle(31);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  # Behaves exactly like Rack::CommonLogger with the notable exception that it does nothing,
      </code></li>
                      
                      <li class="pre-context-line"><code>  # if another CommonLogger is already in the middleware chain.
      </code></li>
                      
                      <li class="pre-context-line"><code>  class CommonLogger &lt; Rack::CommonLogger
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="254" class="context" id="31"
                        onclick="toggle(31);">
                      <li class="context-line" id="context-31"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super</code></li>
                    </ol>
      
                    
                    <ol start="255" class="post-context"
                        id="post-31" onclick="toggle(31);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    superclass.class_eval do
      </code></li>
                      
                      <li class="post-context-line"><code>      alias_method :call_without_check, :call unless method_defined? :call_without_check
      </code></li>
                      
                      <li class="post-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true
      </code></li>
                      
                      <li class="post-context-line"><code>        call_without_check(env)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="5"
                        class="pre-context" id="pre-32"
                        onclick="toggle(32);">
                      
                      <li class="pre-context-line"><code>  # all other requests unchanged.
      </code></li>
                      
                      <li class="pre-context-line"><code>  class Head
      </code></li>
                      
                      <li class="pre-context-line"><code>    def initialize(app)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @app = app
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="12" class="context" id="32"
                        onclick="toggle(32);">
                      <li class="context-line" id="context-32"><code>      status, headers, body = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="13" class="post-context"
                        id="post-32" onclick="toggle(32);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      if env[REQUEST_METHOD] == HEAD
      </code></li>
                      
                      <li class="post-context-line"><code>        [
      </code></li>
                      
                      <li class="post-context-line"><code>          status, headers, Rack::BodyProxy.new([]) do
      </code></li>
                      
                      <li class="post-context-line"><code>            body.close if body.respond_to? :close
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        ]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;method_override.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="17"
                        class="pre-context" id="pre-33"
                        onclick="toggle(33);">
                      
                      <li class="pre-context-line"><code>        method = method_override(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        if HTTP_METHODS.include?(method)
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[RACK_METHODOVERRIDE_ORIGINAL_METHOD] = env[REQUEST_METHOD]
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[REQUEST_METHOD] = method
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="24" class="context" id="33"
                        onclick="toggle(33);">
                      <li class="context-line" id="context-33"><code>      @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="25" class="post-context"
                        id="post-33" onclick="toggle(33);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def method_override(env)
      </code></li>
                      
                      <li class="post-context-line"><code>      req = Request.new(env)
      </code></li>
                      
                      <li class="post-context-line"><code>      method = method_override_param(req) ||
      </code></li>
                      
                      <li class="post-context-line"><code>        env[HTTP_METHOD_OVERRIDE_HEADER]
      </code></li>
                      
                      <li class="post-context-line"><code>      begin
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="16"
                        class="pre-context" id="pre-34"
                        onclick="toggle(34);">
                      
                      <li class="pre-context-line"><code>    def @@eats_errors.puts(*) end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def initialize(app)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @app = app
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="34"
                        onclick="toggle(34);">
                      <li class="context-line" id="context-34"><code>      @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-34" onclick="toggle(34);">
                      
                      <li class="post-context-line"><code>    rescue Exception =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>      errors = env[&#x27;rack.errors&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>      env[&#x27;rack.errors&#x27;] = @@eats_errors
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      if prefers_plain_text?(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        content_type = &#x27;text&#x2F;plain&#x27;
      </code></li>
                      
                      <li class="post-context-line"><code>        body = dump_exception(e)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="212"
                        class="pre-context" id="pre-35"
                        onclick="toggle(35);">
                      
                      <li class="pre-context-line"><code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,
      </code></li>
                      
                      <li class="pre-context-line"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.
      </code></li>
                      
                      <li class="pre-context-line"><code>  # This middleware will detect an extended body object and will make sure it reaches the
      </code></li>
                      
                      <li class="pre-context-line"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will
      </code></li>
                      
                      <li class="pre-context-line"><code>  # still be able to run.
      </code></li>
                      
                      <li class="pre-context-line"><code>  class ExtendedRack &lt; Struct.new(:app)
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="219" class="context" id="35"
                        onclick="toggle(35);">
                      <li class="context-line" id="context-35"><code>      result = app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="220" class="post-context"
                        id="post-35" onclick="toggle(35);">
                      
                      <li class="post-context-line"><code>      callback = env[&#x27;async.callback&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>      return result unless callback &amp;&amp; async?(*result)
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      after_response { callback.call result }
      </code></li>
                      
                      <li class="post-context-line"><code>      setup_close(env, *result)
      </code></li>
                      
                      <li class="post-context-line"><code>      throw :async
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="2011"
                        class="pre-context" id="pre-36"
                        onclick="toggle(36);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def helpers
      </code></li>
                      
                      <li class="pre-context-line"><code>      @instance
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="2018" class="context" id="36"
                        onclick="toggle(36);">
                      <li class="context-line" id="context-36"><code>      @stack.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="2019" class="post-context"
                        id="post-36" onclick="toggle(36);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def inspect
      </code></li>
                      
                      <li class="post-context-line"><code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1569"
                        class="pre-context" id="pre-37"
                        onclick="toggle(37);">
                      
                      <li class="pre-context-line"><code>        setup_default_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        setup_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder.run app
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1576" class="context" id="37"
                        onclick="toggle(37);">
                      <li class="context-line" id="context-37"><code>        synchronize { prototype.call(env) }</code></li>
                    </ol>
      
                    
                    <ol start="1577" class="post-context"
                        id="post-37" onclick="toggle(37);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
      </code></li>
                      
                      <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
      </code></li>
                      
                      <li class="post-context-line"><code>      def caller_files
      </code></li>
                      
                      <li class="post-context-line"><code>        cleaned_caller(1).flatten
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>synchronize</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1785"
                        class="pre-context" id="pre-38"
                        onclick="toggle(38);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      @@mutex = Mutex.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      def synchronize(&amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        if lock?
      </code></li>
                      
                      <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        else
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1792" class="context" id="38"
                        onclick="toggle(38);">
                      <li class="context-line" id="context-38"><code>          yield</code></li>
                    </ol>
      
                    
                    <ol start="1793" class="post-context"
                        id="post-38" onclick="toggle(38);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # used for deprecation warnings
      </code></li>
                      
                      <li class="post-context-line"><code>      def warn_for_deprecation(message)
      </code></li>
                      
                      <li class="post-context-line"><code>        warn message + &quot;\n\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1569"
                        class="pre-context" id="pre-39"
                        onclick="toggle(39);">
                      
                      <li class="pre-context-line"><code>        setup_default_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        setup_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder.run app
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1576" class="context" id="39"
                        onclick="toggle(39);">
                      <li class="context-line" id="context-39"><code>        synchronize { prototype.call(env) }</code></li>
                    </ol>
      
                    
                    <ol start="1577" class="post-context"
                        id="post-39" onclick="toggle(39);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
      </code></li>
                      
                      <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
      </code></li>
                      
                      <li class="post-context-line"><code>      def caller_files
      </code></li>
                      
                      <li class="post-context-line"><code>        cleaned_caller(1).flatten
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-test-2.1.0&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                      <code><strong>process_request</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="353"
                        class="pre-context" id="pre-40"
                        onclick="toggle(40);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      # Submit the request with the given URI and rack environment to
      </code></li>
                      
                      <li class="pre-context-line"><code>      # the mock session.  Returns and potentially yields the last response.
      </code></li>
                      
                      <li class="pre-context-line"><code>      def process_request(uri, env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        env[&#x27;HTTP_COOKIE&#x27;] ||= cookie_jar.for(uri)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @last_request = Rack::Request.new(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="360" class="context" id="40"
                        onclick="toggle(40);">
                      <li class="context-line" id="context-40"><code>        status, headers, body = @app.call(env).to_a</code></li>
                    </ol>
      
                    
                    <ol start="361" class="post-context"
                        id="post-40" onclick="toggle(40);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        @last_response = MockResponse.new(status, headers, body, env[&#x27;rack.errors&#x27;].flush)
      </code></li>
                      
                      <li class="post-context-line"><code>        close_body(body)
      </code></li>
                      
                      <li class="post-context-line"><code>        cookie_jar.merge(last_response.headers[&#x27;set-cookie&#x27;], uri)
      </code></li>
                      
                      <li class="post-context-line"><code>        @after_request.each(&amp;:call)
      </code></li>
                      
                      <li class="post-context-line"><code>        @last_response.finish
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-test-2.1.0&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                      <code><strong>custom_request</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="156"
                        class="pre-context" id="pre-41"
                        onclick="toggle(41);">
                      
                      <li class="pre-context-line"><code>      # Issue a request using the given HTTP verb for the given URI, with optional
      </code></li>
                      
                      <li class="pre-context-line"><code>      # params and rack environment.  Example:
      </code></li>
                      
                      <li class="pre-context-line"><code>      #
      </code></li>
                      
                      <li class="pre-context-line"><code>      #   custom_request &quot;LINK&quot;, &quot;&#x2F;&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>      def custom_request(verb, uri, params = {}, env = {}, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        uri = parse_uri(uri, env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        env = env_for(uri, env.merge(method: verb.to_s.upcase, params: params))
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="163" class="context" id="41"
                        onclick="toggle(41);">
                      <li class="context-line" id="context-41"><code>        process_request(uri, env, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="164" class="post-context"
                        id="post-41" onclick="toggle(41);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Set a header to be included on all subsequent requests through the
      </code></li>
                      
                      <li class="post-context-line"><code>      # session. Use a value of nil to remove a previously configured header.
      </code></li>
                      
                      <li class="post-context-line"><code>      #
      </code></li>
                      
                      <li class="post-context-line"><code>      # In accordance with the Rack spec, headers will be included in the Rack
      </code></li>
                      
                      <li class="post-context-line"><code>      # environment hash in HTTP_USER_AGENT form.  Example:
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-test-2.1.0&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                      <code><strong>get</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="105"
                        class="pre-context" id="pre-42"
                        onclick="toggle(42);">
                      
                      <li class="pre-context-line"><code>        @last_response = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>        clear_cookies
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      %w[get post put patch delete options head].each do |method_name|
      </code></li>
                      
                      <li class="pre-context-line"><code>        class_eval(&lt;&lt;-END, __FILE__, __LINE__+1)
      </code></li>
                      
                      <li class="pre-context-line"><code>          def #{method_name}(uri, params = {}, env = {}, &amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="112" class="context" id="42"
                        onclick="toggle(42);">
                      <li class="context-line" id="context-42"><code>            custom_request(&#x27;#{method_name.upcase}&#x27;, uri, params, env, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="113" class="post-context"
                        id="post-42" onclick="toggle(42);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        END
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Run a block after the each request completes.
      </code></li>
                      
                      <li class="post-context-line"><code>      def after_request(&amp;block)
      </code></li>
                      
                      <li class="post-context-line"><code>        @after_request &lt;&lt; block
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info app">
                    <code>&#x2F;usr&#x2F;local&#x2F;lib&#x2F;ruby&#x2F;3.3.0&#x2F;forwardable.rb</code> in
                      <code><strong>get</strong></code>
                  </li>
      
                  <li class="code app">
                    
                    <ol start="233"
                        class="pre-context" id="pre-43"
                        onclick="toggle(43);">
                      
                      <li class="pre-context-line"><code>          begin
      </code></li>
                      
                      <li class="pre-context-line"><code>            #{accessor}
      </code></li>
                      
                      <li class="pre-context-line"><code>          end#{method_call}
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end;
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="240" class="context" id="43"
                        onclick="toggle(43);">
                      <li class="context-line" id="context-43"><code>end</code></li>
                    </ol>
      
                    
                    <ol start="241" class="post-context"
                        id="post-43" onclick="toggle(43);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code># SingleForwardable can be used to setup delegation at the object level as well.
      </code></li>
                      
                      <li class="post-context-line"><code>#
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer = String.new
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer.extend SingleForwardable        # prepare object for delegation
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer.def_delegator &quot;STDOUT&quot;, &quot;puts&quot;  # add delegation for STDOUT.puts()
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer.puts &quot;Howdy!&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info app">
                    <code>&#x2F;app&#x2F;features&#x2F;step_definitions&#x2F;busqueda_por_titulo_step.rb</code> in
                      <code><strong>block in &lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code app">
                    
                    <ol start="1"
                        class="pre-context" id="pre-44"
                        onclick="toggle(44);">
                      
                      <li class="pre-context-line"><code># Dado
      </code></li>
                      
                      <li class="pre-context-line"><code># =========================================================
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code># Cuando
      </code></li>
                      
                      <li class="pre-context-line"><code># =========================================================
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>Cuando(&#x27;el usuario busca la pelicula {string}&#x27;) do |titulo|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="8" class="context" id="44"
                        onclick="toggle(44);">
                      <li class="context-line" id="context-44"><code>  @response = Faraday.get(&#x27;&#x2F;contenido&#x27;, titulo:, &#x27;Content-Type&#x27; =&gt; &#x27;application&#x2F;json&#x27;)</code></li>
                    </ol>
      
                    
                    <ol start="9" class="post-context"
                        id="post-44" onclick="toggle(44);">
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code># Entonces
      </code></li>
                      
                      <li class="post-context-line"><code># =========================================================
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>Entonces(&#x27;deber√≠a ver la pel√≠cula {string} listada entre las existentes&#x27;) do |titulo|
      </code></li>
                      
                      <li class="post-context-line"><code>  @contenidos = JSON.parse(@response.body)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>instance_exec</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="30"
                        class="pre-context" id="pre-45"
                        onclick="toggle(45);">
                      
                      <li class="pre-context-line"><code>              ari = block.arity
      </code></li>
                      
                      <li class="pre-context-line"><code>              ari = ari &lt; 0 ? &quot;#{ari.abs - 1}+&quot; : ari
      </code></li>
                      
                      <li class="pre-context-line"><code>              s1 = ari == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              s2 = args.length == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              raise ArityMismatchError, &quot;Your block takes #{ari} argument#{s1}, but the Regexp matched #{args.length} argument#{s2}.&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>            end
      </code></li>
                      
                      <li class="pre-context-line"><code>          else
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="37" class="context" id="45"
                        onclick="toggle(45);">
                      <li class="context-line" id="context-45"><code>            world.instance_exec(*args, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="38" class="post-context"
                        id="post-45" onclick="toggle(45);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def self.cucumber_compatible_arity?(args, block)
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity == args.length
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity.negative? &amp;&amp; args.length &gt;= (block.arity.abs - 1)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>block in cucumber_instance_exec_in</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="30"
                        class="pre-context" id="pre-46"
                        onclick="toggle(46);">
                      
                      <li class="pre-context-line"><code>              ari = block.arity
      </code></li>
                      
                      <li class="pre-context-line"><code>              ari = ari &lt; 0 ? &quot;#{ari.abs - 1}+&quot; : ari
      </code></li>
                      
                      <li class="pre-context-line"><code>              s1 = ari == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              s2 = args.length == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              raise ArityMismatchError, &quot;Your block takes #{ari} argument#{s1}, but the Regexp matched #{args.length} argument#{s2}.&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>            end
      </code></li>
                      
                      <li class="pre-context-line"><code>          else
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="37" class="context" id="46"
                        onclick="toggle(46);">
                      <li class="context-line" id="context-46"><code>            world.instance_exec(*args, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="38" class="post-context"
                        id="post-46" onclick="toggle(46);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def self.cucumber_compatible_arity?(args, block)
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity == args.length
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity.negative? &amp;&amp; args.length &gt;= (block.arity.abs - 1)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>cucumber_run_with_backtrace_filtering</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="43"
                        class="pre-context" id="pre-47"
                        onclick="toggle(47);">
                      
                      <li class="pre-context-line"><code>        return true if block.arity == args.length
      </code></li>
                      
                      <li class="pre-context-line"><code>        return true if block.arity.negative? &amp;&amp; args.length &gt;= (block.arity.abs - 1)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        false
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def self.cucumber_run_with_backtrace_filtering(pseudo_method)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="50" class="context" id="47"
                        onclick="toggle(47);">
                      <li class="context-line" id="context-47"><code>        yield</code></li>
                    </ol>
      
                    
                    <ol start="51" class="post-context"
                        id="post-47" onclick="toggle(47);">
                      
                      <li class="post-context-line"><code>      rescue Exception =&gt; e # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>        instance_exec_invocation_line = &quot;#{__FILE__}:#{__LINE__ - 2}:in `cucumber_run_with_backtrace_filtering&#x27;&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>        replace_instance_exec_invocation_line!((e.backtrace || []), instance_exec_invocation_line, pseudo_method)
      </code></li>
                      
                      <li class="post-context-line"><code>        raise e
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      INSTANCE_EXEC_OFFSET = -3
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>cucumber_instance_exec_in</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="20"
                        class="pre-context" id="pre-48"
                        onclick="toggle(48);">
                      
                      <li class="pre-context-line"><code>        end_pos = depth &gt; 1 ? instance_exec_pos : -1
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        backtrace[replacement_line + 1..end_pos] = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>        backtrace.compact!
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def self.cucumber_instance_exec_in(world, check_arity, pseudo_method, *args, &amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="27" class="context" id="48"
                        onclick="toggle(48);">
                      <li class="context-line" id="context-48"><code>        cucumber_run_with_backtrace_filtering(pseudo_method) do</code></li>
                    </ol>
      
                    
                    <ol start="28" class="post-context"
                        id="post-48" onclick="toggle(48);">
                      
                      <li class="post-context-line"><code>          if check_arity &amp;&amp; !cucumber_compatible_arity?(args, block)
      </code></li>
                      
                      <li class="post-context-line"><code>            world.instance_exec do
      </code></li>
                      
                      <li class="post-context-line"><code>              ari = block.arity
      </code></li>
                      
                      <li class="post-context-line"><code>              ari = ari &lt; 0 ? &quot;#{ari.abs - 1}+&quot; : ari
      </code></li>
                      
                      <li class="post-context-line"><code>              s1 = ari == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="post-context-line"><code>              s2 = args.length == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="post-context-line"><code>              raise ArityMismatchError, &quot;Your block takes #{ari} argument#{s1}, but the Regexp matched #{args.length} argument#{s2}.&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;step_definition.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="129"
                        class="pre-context" id="pre-49"
                        onclick="toggle(49);">
                      
                      <li class="pre-context-line"><code>      def arguments_from(step_name)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @expression.match(step_name)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      # @api private
      </code></li>
                      
                      <li class="pre-context-line"><code>      # TODO: inline this and step definition just be a value object
      </code></li>
                      
                      <li class="pre-context-line"><code>      def invoke(args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="136" class="context" id="49"
                        onclick="toggle(49);">
                      <li class="context-line" id="context-49"><code>        InvokeInWorld.cucumber_instance_exec_in(@registry.current_world, true, @expression.to_s, *args, &amp;@proc)</code></li>
                    </ol>
      
                    
                    <ol start="137" class="post-context"
                        id="post-49" onclick="toggle(49);">
                      
                      <li class="post-context-line"><code>      rescue ArityMismatchError =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>        e.backtrace.unshift(backtrace_line)
      </code></li>
                      
                      <li class="post-context-line"><code>        raise e
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # @api private
      </code></li>
                      
                      <li class="post-context-line"><code>      def backtrace_line
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;step_match.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="27"
                        class="pre-context" id="pre-50"
                        onclick="toggle(50);">
                      
                      <li class="pre-context-line"><code>        invoke(MultilineArgument.from_core(test_step.multiline_arg))
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(multiline_arg)
      </code></li>
                      
                      <li class="pre-context-line"><code>      all_args = args
      </code></li>
                      
                      <li class="pre-context-line"><code>      multiline_arg.append_to(all_args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="34" class="context" id="50"
                        onclick="toggle(50);">
                      <li class="context-line" id="context-50"><code>      @step_definition.invoke(all_args)</code></li>
                    </ol>
      
                    
                    <ol start="35" class="post-context"
                        id="post-50" onclick="toggle(50);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # Formats the matched arguments of the associated Step. This method
      </code></li>
                      
                      <li class="post-context-line"><code>    # is usually called from visitors, which render output.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                      <li class="post-context-line"><code>    # The +format+ can either be a String or a Proc.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;step_match.rb</code> in
                      <code><strong>block in activate</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="20"
                        class="pre-context" id="pre-51"
                        onclick="toggle(51);">
                      
                      <li class="pre-context-line"><code>      @step_arguments.map do |arg|
      </code></li>
                      
                      <li class="pre-context-line"><code>        arg.value(current_world)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def activate(test_step)
      </code></li>
                      
                      <li class="pre-context-line"><code>      test_step.with_action(@step_definition.location) do
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="27" class="context" id="51"
                        onclick="toggle(51);">
                      <li class="context-line" id="context-51"><code>        invoke(MultilineArgument.from_core(test_step.multiline_arg))</code></li>
                    </ol>
      
                    
                    <ol start="28" class="post-context"
                        id="post-51" onclick="toggle(51);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def invoke(multiline_arg)
      </code></li>
                      
                      <li class="post-context-line"><code>      all_args = args
      </code></li>
                      
                      <li class="post-context-line"><code>      multiline_arg.append_to(all_args)
      </code></li>
                      
                      <li class="post-context-line"><code>      @step_definition.invoke(all_args)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;action.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-52"
                        onclick="toggle(52);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def skip(*)
      </code></li>
                      
                      <li class="pre-context-line"><code>          skipped
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def execute(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @timer.start
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="52"
                        onclick="toggle(52);">
                      <li class="context-line" id="context-52"><code>          @block.call(*args)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-52" onclick="toggle(52);">
                      
                      <li class="post-context-line"><code>          passed
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Result::Raisable =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          exception.with_duration(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Exception =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          failed(exception)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;step.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="28"
                        class="pre-context" id="pre-53"
                        onclick="toggle(53);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def skip(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @action.skip(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def execute(*args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="35" class="context" id="53"
                        onclick="toggle(53);">
                      <li class="context-line" id="context-53"><code>          @action.execute(*args)</code></li>
                    </ol>
      
                    
                    <ol start="36" class="post-context"
                        id="post-53" onclick="toggle(53);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def with_action(action_location = nil, &amp;block)
      </code></li>
                      
                      <li class="post-context-line"><code>          self.class.new(id, text, location, multiline_arg, Test::Action.new(action_location, &amp;block))
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def backtrace_line
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="99"
                        class="pre-context" id="pre-54"
                        onclick="toggle(54);">
                      
                      <li class="pre-context-line"><code>              private :step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def initialize(step_result)
      </code></li>
                      
                      <li class="pre-context-line"><code>                @step_result = step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>              end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def execute(test_step, monitor, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="106" class="context" id="54"
                        onclick="toggle(54);">
                      <li class="context-line" id="context-54"><code>                result = test_step.execute(monitor.result, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="107" class="post-context"
                        id="post-54" onclick="toggle(54);">
                      
                      <li class="post-context-line"><code>                result = result.with_message(%(Undefined step: &quot;#{test_step.text}&quot;)) if result.undefined?
      </code></li>
                      
                      <li class="post-context-line"><code>                result = result.with_appended_backtrace(test_step) unless test_step.hook?
      </code></li>
                      
                      <li class="post-context-line"><code>                result.describe_to(monitor, result)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>              def result
      </code></li>
                      
                      <li class="post-context-line"><code>                raise NoMethodError, &quot;Override me&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-55"
                        onclick="toggle(55);">
                      
                      <li class="pre-context-line"><code>        class RunningTestCase
      </code></li>
                      
                      <li class="pre-context-line"><code>          def initialize
      </code></li>
                      
                      <li class="pre-context-line"><code>            @timer = Timer.new.start
      </code></li>
                      
                      <li class="pre-context-line"><code>            @status = Status::Unknown.new(Result::Unknown.new)
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def execute(test_step, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="55"
                        onclick="toggle(55);">
                      <li class="context-line" id="context-55"><code>            status.execute(test_step, self, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-55" onclick="toggle(55);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def result
      </code></li>
                      
                      <li class="post-context-line"><code>            status.result(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def failed(step_result)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>test_step</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="22"
                        class="pre-context" id="pre-56"
                        onclick="toggle(56);">
                      
                      <li class="pre-context-line"><code>          event_bus.test_case_finished(test_case, result)
      </code></li>
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def test_step(test_step)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_step = test_step
      </code></li>
                      
                      <li class="pre-context-line"><code>          event_bus.test_step_started test_step
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="29" class="context" id="56"
                        onclick="toggle(56);">
                      <li class="context-line" id="context-56"><code>          step_result = running_test_case.execute(test_step)</code></li>
                    </ol>
      
                    
                    <ol start="30" class="post-context"
                        id="post-56" onclick="toggle(56);">
                      
                      <li class="post-context-line"><code>          event_bus.test_step_finished test_step, step_result
      </code></li>
                      
                      <li class="post-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def around_hook(hook, &amp;continue)
      </code></li>
                      
                      <li class="post-context-line"><code>          result = running_test_case.execute(hook, &amp;continue)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;step.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-57"
                        onclick="toggle(57);">
                      
                      <li class="pre-context-line"><code>          @text = text
      </code></li>
                      
                      <li class="pre-context-line"><code>          @location = location
      </code></li>
                      
                      <li class="pre-context-line"><code>          @multiline_arg = multiline_arg
      </code></li>
                      
                      <li class="pre-context-line"><code>          @action = action
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="57"
                        onclick="toggle(57);">
                      <li class="context-line" id="context-57"><code>          visitor.test_step(self, *args)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-57" onclick="toggle(57);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def hook?
      </code></li>
                      
                      <li class="post-context-line"><code>          false
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def skip(*args)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block (3 levels) in describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="24"
                        class="pre-context" id="pre-58"
                        onclick="toggle(58);">
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                      <li class="pre-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="pre-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="31" class="context" id="58"
                        onclick="toggle(58);">
                      <li class="context-line" id="context-58"><code>                test_step.describe_to(child_visitor, *args)</code></li>
                    </ol>
      
                    
                    <ol start="32" class="post-context"
                        id="post-58" onclick="toggle(58);">
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def with_steps(test_steps)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>each</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="23"
                        class="pre-context" id="pre-59"
                        onclick="toggle(59);">
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                      <li class="pre-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="30" class="context" id="59"
                        onclick="toggle(59);">
                      <li class="context-line" id="context-59"><code>              test_steps.each do |test_step|</code></li>
                    </ol>
      
                    
                    <ol start="31" class="post-context"
                        id="post-59" onclick="toggle(59);">
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block (2 levels) in describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="23"
                        class="pre-context" id="pre-60"
                        onclick="toggle(60);">
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                      <li class="pre-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="30" class="context" id="60"
                        onclick="toggle(60);">
                      <li class="context-line" id="context-60"><code>              test_steps.each do |test_step|</code></li>
                    </ol>
      
                    
                    <ol start="31" class="post-context"
                        id="post-60" onclick="toggle(60);">
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;prepare_world.rb</code> in
                      <code><strong>block in test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-61"
                        onclick="toggle(61);">
                      
                      <li class="pre-context-line"><code>          @runtime = runtime
      </code></li>
                      
                      <li class="pre-context-line"><code>          @original_test_case = original_test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>          init_scenario = Cucumber::Hooks.around_hook do |continue|
      </code></li>
                      
                      <li class="pre-context-line"><code>            @runtime.begin_scenario(scenario)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="61"
                        onclick="toggle(61);">
                      <li class="context-line" id="context-61"><code>            continue.call</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-61" onclick="toggle(61);">
                      
                      <li class="post-context-line"><code>            @runtime.end_scenario(scenario)
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          around_hooks = [init_scenario] + @original_test_case.around_hooks
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          @original_test_case.with_around_hooks(around_hooks).with_steps(@original_test_case.test_steps)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;around_hook.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="14"
                        class="pre-context" id="pre-62"
                        onclick="toggle(62);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def hook?
      </code></li>
                      
                      <li class="pre-context-line"><code>          true
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def execute(*args, &amp;continue)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @timer.start
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="21" class="context" id="62"
                        onclick="toggle(62);">
                      <li class="context-line" id="context-62"><code>          @block.call(continue)</code></li>
                    </ol>
      
                    
                    <ol start="22" class="post-context"
                        id="post-62" onclick="toggle(62);">
                      
                      <li class="post-context-line"><code>          Result::Unknown.new # Around hook does not know the result of the inner test steps
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Result::Raisable =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          exception.with_duration(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Exception =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          failed(exception)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="99"
                        class="pre-context" id="pre-63"
                        onclick="toggle(63);">
                      
                      <li class="pre-context-line"><code>              private :step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def initialize(step_result)
      </code></li>
                      
                      <li class="pre-context-line"><code>                @step_result = step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>              end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def execute(test_step, monitor, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="106" class="context" id="63"
                        onclick="toggle(63);">
                      <li class="context-line" id="context-63"><code>                result = test_step.execute(monitor.result, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="107" class="post-context"
                        id="post-63" onclick="toggle(63);">
                      
                      <li class="post-context-line"><code>                result = result.with_message(%(Undefined step: &quot;#{test_step.text}&quot;)) if result.undefined?
      </code></li>
                      
                      <li class="post-context-line"><code>                result = result.with_appended_backtrace(test_step) unless test_step.hook?
      </code></li>
                      
                      <li class="post-context-line"><code>                result.describe_to(monitor, result)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>              def result
      </code></li>
                      
                      <li class="post-context-line"><code>                raise NoMethodError, &quot;Override me&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-64"
                        onclick="toggle(64);">
                      
                      <li class="pre-context-line"><code>        class RunningTestCase
      </code></li>
                      
                      <li class="pre-context-line"><code>          def initialize
      </code></li>
                      
                      <li class="pre-context-line"><code>            @timer = Timer.new.start
      </code></li>
                      
                      <li class="pre-context-line"><code>            @status = Status::Unknown.new(Result::Unknown.new)
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def execute(test_step, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="64"
                        onclick="toggle(64);">
                      <li class="context-line" id="context-64"><code>            status.execute(test_step, self, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-64" onclick="toggle(64);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def result
      </code></li>
                      
                      <li class="post-context-line"><code>            status.result(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def failed(step_result)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>around_hook</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="29"
                        class="pre-context" id="pre-65"
                        onclick="toggle(65);">
                      
                      <li class="pre-context-line"><code>          step_result = running_test_case.execute(test_step)
      </code></li>
                      
                      <li class="pre-context-line"><code>          event_bus.test_step_finished test_step, step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def around_hook(hook, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="36" class="context" id="65"
                        onclick="toggle(65);">
                      <li class="context-line" id="context-65"><code>          result = running_test_case.execute(hook, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="37" class="post-context"
                        id="post-65" onclick="toggle(65);">
                      
                      <li class="post-context-line"><code>          event_bus.test_step_finished running_test_step, result if running_test_step
      </code></li>
                      
                      <li class="post-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def done
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;around_hook.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="5"
                        class="pre-context" id="pre-66"
                        onclick="toggle(66);">
                      
                      <li class="pre-context-line"><code>      class AroundHook
      </code></li>
                      
                      <li class="pre-context-line"><code>        def initialize(&amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @block = block
      </code></li>
                      
                      <li class="pre-context-line"><code>          @timer = Timer.new
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="12" class="context" id="66"
                        onclick="toggle(66);">
                      <li class="context-line" id="context-66"><code>          visitor.around_hook(self, *args, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="13" class="post-context"
                        id="post-66" onclick="toggle(66);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def hook?
      </code></li>
                      
                      <li class="post-context-line"><code>          true
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def execute(*args, &amp;continue)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block (2 levels) in compose_around_hooks</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="73"
                        class="pre-context" id="pre-67"
                        onclick="toggle(67);">
                      
                      <li class="pre-context-line"><code>          eql?(other)
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        private
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def compose_around_hooks(visitor, *args, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>          around_hooks.reverse.reduce(block) do |continue, hook|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="80" class="context" id="67"
                        onclick="toggle(67);">
                      <li class="context-line" id="context-67"><code>            -&gt; { hook.describe_to(visitor, *args, &amp;continue) }</code></li>
                    </ol>
      
                    
                    <ol start="81" class="post-context"
                        id="post-67" onclick="toggle(67);">
                      
                      <li class="post-context-line"><code>          end.call
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def match_single_tag_expression?(expression)
      </code></li>
                      
                      <li class="post-context-line"><code>          Cucumber::TagExpressions::Parser.new.parse(expression).evaluate(tags.map(&amp;:name))
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>compose_around_hooks</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="74"
                        class="pre-context" id="pre-68"
                        onclick="toggle(68);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        private
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def compose_around_hooks(visitor, *args, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>          around_hooks.reverse.reduce(block) do |continue, hook|
      </code></li>
                      
                      <li class="pre-context-line"><code>            -&gt; { hook.describe_to(visitor, *args, &amp;continue) }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="81" class="context" id="68"
                        onclick="toggle(68);">
                      <li class="context-line" id="context-68"><code>          end.call</code></li>
                    </ol>
      
                    
                    <ol start="82" class="post-context"
                        id="post-68" onclick="toggle(68);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def match_single_tag_expression?(expression)
      </code></li>
                      
                      <li class="post-context-line"><code>          Cucumber::TagExpressions::Parser.new.parse(expression).evaluate(tags.map(&amp;:name))
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block in describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="22"
                        class="pre-context" id="pre-69"
                        onclick="toggle(69);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="29" class="context" id="69"
                        onclick="toggle(69);">
                      <li class="context-line" id="context-69"><code>            compose_around_hooks(child_visitor, *args) do</code></li>
                    </ol>
      
                    
                    <ol start="30" class="post-context"
                        id="post-69" onclick="toggle(69);">
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="12"
                        class="pre-context" id="pre-70"
                        onclick="toggle(70);">
                      
                      <li class="pre-context-line"><code>          @event_bus = event_bus
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def test_case(test_case, &amp;descend)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_case = RunningTestCase.new
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>          event_bus.test_case_started(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="19" class="context" id="70"
                        onclick="toggle(70);">
                      <li class="context-line" id="context-70"><code>          descend.call(self)</code></li>
                    </ol>
      
                    
                    <ol start="20" class="post-context"
                        id="post-70" onclick="toggle(70);">
                      
                      <li class="post-context-line"><code>          result = running_test_case.result
      </code></li>
                      
                      <li class="post-context-line"><code>          result = Result::Undefined.new(&#x27;The test case has no steps&#x27;, Result::UnknownDuration.new, [&quot;#{test_case.location}:in `#{test_case.name}&#x27;&quot;]) if result.unknown?
      </code></li>
                      
                      <li class="post-context-line"><code>          event_bus.test_case_finished(test_case, result)
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def test_step(test_step)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-71"
                        onclick="toggle(71);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="71"
                        onclick="toggle(71);">
                      <li class="context-line" id="context-71"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-71" onclick="toggle(71);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;prepare_world.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="4"
                        class="pre-context" id="pre-72"
                        onclick="toggle(72);">
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;core&#x2F;test&#x2F;location&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;running_test_case&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>module Cucumber
      </code></li>
                      
                      <li class="pre-context-line"><code>  module Filters
      </code></li>
                      
                      <li class="pre-context-line"><code>    class PrepareWorld &lt; Core::Filter.new(:runtime)
      </code></li>
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="11" class="context" id="72"
                        onclick="toggle(72);">
                      <li class="context-line" id="context-72"><code>        CaseFilter.new(runtime, test_case).test_case.describe_to receiver</code></li>
                    </ol>
      
                    
                    <ol start="12" class="post-context"
                        id="post-72" onclick="toggle(72);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      class CaseFilter
      </code></li>
                      
                      <li class="post-context-line"><code>        def initialize(runtime, original_test_case)
      </code></li>
                      
                      <li class="post-context-line"><code>          @runtime = runtime
      </code></li>
                      
                      <li class="post-context-line"><code>          @original_test_case = original_test_case
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-73"
                        onclick="toggle(73);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="73"
                        onclick="toggle(73);">
                      <li class="context-line" id="context-73"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-73" onclick="toggle(73);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="50"
                        class="pre-context" id="pre-74"
                        onclick="toggle(74);">
                      
                      <li class="pre-context-line"><code>          define_method(:initialize) do |*args|
      </code></li>
                      
                      <li class="pre-context-line"><code>            attributes.zip(args) do |name, value|
      </code></li>
                      
                      <li class="pre-context-line"><code>              instance_variable_set(&quot;@#{name}&quot;.to_sym, value)
      </code></li>
                      
                      <li class="pre-context-line"><code>            end
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="57" class="context" id="74"
                        onclick="toggle(74);">
                      <li class="context-line" id="context-74"><code>            test_case.describe_to receiver</code></li>
                    </ol>
      
                    
                    <ol start="58" class="post-context"
                        id="post-74" onclick="toggle(74);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def done
      </code></li>
                      
                      <li class="post-context-line"><code>            receiver.done
      </code></li>
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;retry.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="11"
                        class="pre-context" id="pre-75"
                        onclick="toggle(75);">
                      
                      <li class="pre-context-line"><code>        configuration.on_event(:test_case_finished) do |event|
      </code></li>
                      
                      <li class="pre-context-line"><code>          next unless retry_required?(test_case, event)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_case_counts[test_case] += 1
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_case.describe_to(receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="18" class="context" id="75"
                        onclick="toggle(75);">
                      <li class="context-line" id="context-75"><code>        super</code></li>
                    </ol>
      
                    
                    <ol start="19" class="post-context"
                        id="post-75" onclick="toggle(75);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def retry_required?(test_case, event)
      </code></li>
                      
                      <li class="post-context-line"><code>        event.test_case == test_case &amp;&amp; event.result.failed? &amp;&amp; test_case_counts[test_case] &lt; configuration.retry_attempts
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-76"
                        onclick="toggle(76);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="76"
                        onclick="toggle(76);">
                      <li class="context-line" id="context-76"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-76" onclick="toggle(76);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;quit.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="4"
                        class="pre-context" id="pre-77"
                        onclick="toggle(77);">
                      
                      <li class="pre-context-line"><code>  module Filters
      </code></li>
                      
                      <li class="pre-context-line"><code>    class Quit
      </code></li>
                      
                      <li class="pre-context-line"><code>      def initialize(receiver = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @receiver = receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="11" class="context" id="77"
                        onclick="toggle(77);">
                      <li class="context-line" id="context-77"><code>        test_case.describe_to @receiver unless Cucumber.wants_to_quit</code></li>
                    </ol>
      
                    
                    <ol start="12" class="post-context"
                        id="post-77" onclick="toggle(77);">
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def done
      </code></li>
                      
                      <li class="post-context-line"><code>        @receiver.done
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-78"
                        onclick="toggle(78);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="78"
                        onclick="toggle(78);">
                      <li class="context-line" id="context-78"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-78" onclick="toggle(78);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;broadcast_test_run_started_event.rb</code> in
                      <code><strong>block in done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="14"
                        class="pre-context" id="pre-79"
                        onclick="toggle(79);">
                      
                      <li class="pre-context-line"><code>        @test_cases &lt;&lt; test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        self
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                      <li class="pre-context-line"><code>        config.notify :test_run_started, @test_cases
      </code></li>
                      
                      <li class="pre-context-line"><code>        @test_cases.map do |test_case|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="21" class="context" id="79"
                        onclick="toggle(79);">
                      <li class="context-line" id="context-79"><code>          test_case.describe_to(@receiver)</code></li>
                    </ol>
      
                    
                    <ol start="22" class="post-context"
                        id="post-79" onclick="toggle(79);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        super
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;broadcast_test_run_started_event.rb</code> in
                      <code><strong>map</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-80"
                        onclick="toggle(80);">
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @test_cases &lt;&lt; test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        self
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                      <li class="pre-context-line"><code>        config.notify :test_run_started, @test_cases
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="80"
                        onclick="toggle(80);">
                      <li class="context-line" id="context-80"><code>        @test_cases.map do |test_case|</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-80" onclick="toggle(80);">
                      
                      <li class="post-context-line"><code>          test_case.describe_to(@receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        super
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;broadcast_test_run_started_event.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-81"
                        onclick="toggle(81);">
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @test_cases &lt;&lt; test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        self
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                      <li class="pre-context-line"><code>        config.notify :test_run_started, @test_cases
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="81"
                        onclick="toggle(81);">
                      <li class="context-line" id="context-81"><code>        @test_cases.map do |test_case|</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-81" onclick="toggle(81);">
                      
                      <li class="post-context-line"><code>          test_case.describe_to(@receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        super
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-82"
                        onclick="toggle(82);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="82"
                        onclick="toggle(82);">
                      <li class="context-line" id="context-82"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-82" onclick="toggle(82);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-83"
                        onclick="toggle(83);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="83"
                        onclick="toggle(83);">
                      <li class="context-line" id="context-83"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-83" onclick="toggle(83);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-84"
                        onclick="toggle(84);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="84"
                        onclick="toggle(84);">
                      <li class="context-line" id="context-84"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-84" onclick="toggle(84);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-85"
                        onclick="toggle(85);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="85"
                        onclick="toggle(85);">
                      <li class="context-line" id="context-85"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-85" onclick="toggle(85);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-86"
                        onclick="toggle(86);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="86"
                        onclick="toggle(86);">
                      <li class="context-line" id="context-86"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-86" onclick="toggle(86);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-87"
                        onclick="toggle(87);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="87"
                        onclick="toggle(87);">
                      <li class="context-line" id="context-87"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-87" onclick="toggle(87);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;filters&#x2F;locations_filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-88"
                        onclick="toggle(88);">
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def done
      </code></li>
                      
                      <li class="pre-context-line"><code>          sorted_test_cases.each do |test_case|
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="88"
                        onclick="toggle(88);">
                      <li class="context-line" id="context-88"><code>          receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-88" onclick="toggle(88);">
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def sorted_test_cases
      </code></li>
                      
                      <li class="post-context-line"><code>          filter_locations.map { |filter_location|
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-89"
                        onclick="toggle(89);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="89"
                        onclick="toggle(89);">
                      <li class="context-line" id="context-89"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-89" onclick="toggle(89);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;filters&#x2F;tag_filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="11"
                        class="pre-context" id="pre-90"
                        onclick="toggle(90);">
                      
                      <li class="pre-context-line"><code>          if test_case.match_tags?(filter_expressions)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to(receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="18" class="context" id="90"
                        onclick="toggle(90);">
                      <li class="context-line" id="context-90"><code>          receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="19" class="post-context"
                        id="post-90" onclick="toggle(90);">
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def test_cases
      </code></li>
                      
                      <li class="post-context-line"><code>          @test_cases ||= TestCases.new
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;compiler.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="24"
                        class="pre-context" id="pre-91"
                        onclick="toggle(91);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def pickle(pickle)
      </code></li>
                      
                      <li class="pre-context-line"><code>        test_case = create_test_case(pickle)
      </code></li>
                      
                      <li class="pre-context-line"><code>        test_case.describe_to(receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="31" class="context" id="91"
                        onclick="toggle(91);">
                      <li class="context-line" id="context-91"><code>        receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="32" class="post-context"
                        id="post-91" onclick="toggle(91);">
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def create_test_case(pickle)
      </code></li>
                      
                      <li class="post-context-line"><code>        uri = pickle.uri
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;gherkin&#x2F;parser.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="39"
                        class="pre-context" id="pre-92"
                        onclick="toggle(92);">
                      
                      <li class="pre-context-line"><code>            include_source: false,
      </code></li>
                      
                      <li class="pre-context-line"><code>            include_gherkin_document: true,
      </code></li>
                      
                      <li class="pre-context-line"><code>            include_pickles: true
      </code></li>
                      
                      <li class="pre-context-line"><code>          }
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="46" class="context" id="92"
                        onclick="toggle(92);">
                      <li class="context-line" id="context-92"><code>          receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="47" class="post-context"
                        id="post-92" onclick="toggle(92);">
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core.rb</code> in
                      <code><strong>parse</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="28"
                        class="pre-context" id="pre-93"
                        onclick="toggle(93);">
                      
                      <li class="pre-context-line"><code>    private
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def parse(gherkin_documents, compiler, event_bus, gherkin_query)
      </code></li>
                      
                      <li class="pre-context-line"><code>      parser = Core::Gherkin::Parser.new(compiler, event_bus, gherkin_query)
      </code></li>
                      
                      <li class="pre-context-line"><code>      gherkin_documents.each do |document|
      </code></li>
                      
                      <li class="pre-context-line"><code>        parser.document document
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="35" class="context" id="93"
                        onclick="toggle(93);">
                      <li class="context-line" id="context-93"><code>      parser.done</code></li>
                    </ol>
      
                    
                    <ol start="36" class="post-context"
                        id="post-93" onclick="toggle(93);">
                      
                      <li class="post-context-line"><code>      self
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def compose(filters, last_receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>      filters.reverse.reduce(last_receiver) do |receiver, filter|
      </code></li>
                      
                      <li class="post-context-line"><code>        filter.with_receiver(receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core.rb</code> in
                      <code><strong>compile</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="17"
                        class="pre-context" id="pre-94"
                        onclick="toggle(94);">
                      
                      <li class="pre-context-line"><code>      self
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def compile(gherkin_documents, last_receiver, filters = [], event_bus = EventBus.new)
      </code></li>
                      
                      <li class="pre-context-line"><code>      first_receiver = compose(filters, last_receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>      gherkin_query = ::Gherkin::Query.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      compiler = Compiler.new(first_receiver, gherkin_query, event_bus)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="24" class="context" id="94"
                        onclick="toggle(94);">
                      <li class="context-line" id="context-94"><code>      parse gherkin_documents, compiler, event_bus, gherkin_query</code></li>
                    </ol>
      
                    
                    <ol start="25" class="post-context"
                        id="post-94" onclick="toggle(94);">
                      
                      <li class="post-context-line"><code>      self
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def parse(gherkin_documents, compiler, event_bus, gherkin_query)
      </code></li>
                      
                      <li class="post-context-line"><code>      parser = Core::Gherkin::Parser.new(compiler, event_bus, gherkin_query)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;runtime.rb</code> in
                      <code><strong>run!</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="74"
                        class="pre-context" id="pre-95"
                        onclick="toggle(95);">
                      
                      <li class="pre-context-line"><code>      load_step_definitions
      </code></li>
                      
                      <li class="pre-context-line"><code>      fire_install_plugin_hook
      </code></li>
                      
                      <li class="pre-context-line"><code>      fire_before_all_hook unless dry_run?
      </code></li>
                      
                      <li class="pre-context-line"><code>      # TODO: can we remove this state?
      </code></li>
                      
                      <li class="pre-context-line"><code>      self.visitor = report
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      receiver = Test::Runner.new(@configuration.event_bus)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="81" class="context" id="95"
                        onclick="toggle(95);">
                      <li class="context-line" id="context-95"><code>      compile features, receiver, filters, @configuration.event_bus</code></li>
                    </ol>
      
                    
                    <ol start="82" class="post-context"
                        id="post-95" onclick="toggle(95);">
                      
                      <li class="post-context-line"><code>      @configuration.notify :test_run_finished, !failure?
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      fire_after_all_hook unless dry_run?
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def features_paths
      </code></li>
                      
                      <li class="post-context-line"><code>      @configuration.paths
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;cli&#x2F;main.rb</code> in
                      <code><strong>execute!</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="22"
                        class="pre-context" id="pre-96"
                        onclick="toggle(96);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def execute!(existing_runtime = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>        trap_interrupt
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        runtime = runtime(existing_runtime)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="29" class="context" id="96"
                        onclick="toggle(96);">
                      <li class="context-line" id="context-96"><code>        runtime.run!</code></li>
                    </ol>
      
                    
                    <ol start="30" class="post-context"
                        id="post-96" onclick="toggle(96);">
                      
                      <li class="post-context-line"><code>        if Cucumber.wants_to_quit
      </code></li>
                      
                      <li class="post-context-line"><code>          exit_unable_to_finish
      </code></li>
                      
                      <li class="post-context-line"><code>        elsif runtime.failure?
      </code></li>
                      
                      <li class="post-context-line"><code>          exit_tests_failed
      </code></li>
                      
                      <li class="post-context-line"><code>        else
      </code></li>
                      
                      <li class="post-context-line"><code>          exit_ok
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;bin&#x2F;cucumber</code> in
                      <code><strong>&lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="2"
                        class="pre-context" id="pre-97"
                        onclick="toggle(97);">
                      
                      <li class="pre-context-line"><code>file_name = File.dirname(__FILE__) + &#x27;&#x2F;..&#x2F;lib&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>$LOAD_PATH.unshift(file_name) unless $LOAD_PATH.include?(file_name)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;simplecov_setup&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;rspec&#x2F;disable_option_parser&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;cli&#x2F;main&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code># The dup is to keep ARGV intact, so that tools like ruby-debug can respawn.
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="9" class="context" id="97"
                        onclick="toggle(97);">
                      <li class="context-line" id="context-97"><code>Cucumber::Cli::Main.new(ARGV.dup).execute!</code></li>
                    </ol>
      
                    
                    <ol start="10" class="post-context"
                        id="post-97" onclick="toggle(97);">
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;cucumber</code> in
                      <code><strong>load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-98"
                        onclick="toggle(98);">
                      
                      <li class="pre-context-line"><code>  if str and Gem::Version.correct?(str)
      </code></li>
                      
                      <li class="pre-context-line"><code>    version = str
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="98"
                        onclick="toggle(98);">
                      <li class="context-line" id="context-98"><code>load Gem.activate_bin_path(&#x27;cucumber&#x27;, &#x27;cucumber&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-98" onclick="toggle(98);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;cucumber&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;cucumber&quot;, &quot;cucumber&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;cucumber</code> in
                      <code><strong>&lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-99"
                        onclick="toggle(99);">
                      
                      <li class="pre-context-line"><code>  if str and Gem::Version.correct?(str)
      </code></li>
                      
                      <li class="pre-context-line"><code>    version = str
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="99"
                        onclick="toggle(99);">
                      <li class="context-line" id="context-99"><code>load Gem.activate_bin_path(&#x27;cucumber&#x27;, &#x27;cucumber&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-99" onclick="toggle(99);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;cucumber&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;cucumber&quot;, &quot;cucumber&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli&#x2F;exec.rb</code> in
                      <code><strong>load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="51"
                        class="pre-context" id="pre-100"
                        onclick="toggle(100);">
                      
                      <li class="pre-context-line"><code>    def kernel_load(file, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      args.pop if args.last.is_a?(Hash)
      </code></li>
                      
                      <li class="pre-context-line"><code>      ARGV.replace(args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      $0 = file
      </code></li>
                      
                      <li class="pre-context-line"><code>      Process.setproctitle(process_title(file, args)) if Process.respond_to?(:setproctitle)
      </code></li>
                      
                      <li class="pre-context-line"><code>      require_relative &quot;..&#x2F;setup&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>      TRAPPED_SIGNALS.each {|s| trap(s, &quot;DEFAULT&quot;) }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="58" class="context" id="100"
                        onclick="toggle(100);">
                      <li class="context-line" id="context-100"><code>      Kernel.load(file)</code></li>
                    </ol>
      
                    
                    <ol start="59" class="post-context"
                        id="post-100" onclick="toggle(100);">
                      
                      <li class="post-context-line"><code>    rescue SystemExit, SignalException
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue Exception # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler.ui.error &quot;bundler: failed to load command: #{cmd} (#{file})&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler::FriendlyErrors.disable!
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli&#x2F;exec.rb</code> in
                      <code><strong>kernel_load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="51"
                        class="pre-context" id="pre-101"
                        onclick="toggle(101);">
                      
                      <li class="pre-context-line"><code>    def kernel_load(file, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      args.pop if args.last.is_a?(Hash)
      </code></li>
                      
                      <li class="pre-context-line"><code>      ARGV.replace(args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      $0 = file
      </code></li>
                      
                      <li class="pre-context-line"><code>      Process.setproctitle(process_title(file, args)) if Process.respond_to?(:setproctitle)
      </code></li>
                      
                      <li class="pre-context-line"><code>      require_relative &quot;..&#x2F;setup&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>      TRAPPED_SIGNALS.each {|s| trap(s, &quot;DEFAULT&quot;) }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="58" class="context" id="101"
                        onclick="toggle(101);">
                      <li class="context-line" id="context-101"><code>      Kernel.load(file)</code></li>
                    </ol>
      
                    
                    <ol start="59" class="post-context"
                        id="post-101" onclick="toggle(101);">
                      
                      <li class="post-context-line"><code>    rescue SystemExit, SignalException
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue Exception # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler.ui.error &quot;bundler: failed to load command: #{cmd} (#{file})&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler::FriendlyErrors.disable!
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli&#x2F;exec.rb</code> in
                      <code><strong>run</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-102"
                        onclick="toggle(102);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def run
      </code></li>
                      
                      <li class="pre-context-line"><code>      validate_cmd!
      </code></li>
                      
                      <li class="pre-context-line"><code>      SharedHelpers.set_bundle_environment
      </code></li>
                      
                      <li class="pre-context-line"><code>      if bin_path = Bundler.which(cmd)
      </code></li>
                      
                      <li class="pre-context-line"><code>        if !Bundler.settings[:disable_exec_load] &amp;&amp; ruby_shebang?(bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="102"
                        onclick="toggle(102);">
                      <li class="context-line" id="context-102"><code>          return kernel_load(bin_path, *args)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-102" onclick="toggle(102);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        kernel_exec(bin_path, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>      else
      </code></li>
                      
                      <li class="post-context-line"><code>        # exec using the given command
      </code></li>
                      
                      <li class="post-context-line"><code>        kernel_exec(cmd, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli.rb</code> in
                      <code><strong>exec</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="485"
                        class="pre-context" id="pre-103"
                        onclick="toggle(103);">
                      
                      <li class="pre-context-line"><code>    D
      </code></li>
                      
                      <li class="pre-context-line"><code>    def exec(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      if ARGV.include?(&quot;--no-keep-file-descriptors&quot;)
      </code></li>
                      
                      <li class="pre-context-line"><code>        SharedHelpers.major_deprecation(2, &quot;The `--no-keep-file-descriptors` has been deprecated. `bundle exec` no longer mess with your file descriptors. Close them in the exec&#x27;d script if you need to&quot;)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      require_relative &quot;cli&#x2F;exec&quot;
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="492" class="context" id="103"
                        onclick="toggle(103);">
                      <li class="context-line" id="context-103"><code>      Exec.new(options, args).run</code></li>
                    </ol>
      
                    
                    <ol start="493" class="post-context"
                        id="post-103" onclick="toggle(103);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    map aliases_for(&quot;exec&quot;)
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    desc &quot;config NAME [VALUE]&quot;, &quot;Retrieve or set a configuration value&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>    long_desc &lt;&lt;-D
      </code></li>
                      
                      <li class="post-context-line"><code>      Retrieves or sets a configuration value. If only one parameter is provided, retrieve the value. If two parameters are provided, replace the
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor&#x2F;command.rb</code> in
                      <code><strong>run</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="20"
                        class="pre-context" id="pre-104"
                        onclick="toggle(104);">
                      
                      <li class="pre-context-line"><code>    def run(instance, args = [])
      </code></li>
                      
                      <li class="pre-context-line"><code>      arity = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      if private_method?(instance)
      </code></li>
                      
                      <li class="pre-context-line"><code>        instance.class.handle_no_command_error(name)
      </code></li>
                      
                      <li class="pre-context-line"><code>      elsif public_method?(instance)
      </code></li>
                      
                      <li class="pre-context-line"><code>        arity = instance.method(name).arity
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="27" class="context" id="104"
                        onclick="toggle(104);">
                      <li class="context-line" id="context-104"><code>        instance.__send__(name, *args)</code></li>
                    </ol>
      
                    
                    <ol start="28" class="post-context"
                        id="post-104" onclick="toggle(104);">
                      
                      <li class="post-context-line"><code>      elsif local_method?(instance, :method_missing)
      </code></li>
                      
                      <li class="post-context-line"><code>        instance.__send__(:method_missing, name.to_sym, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>      else
      </code></li>
                      
                      <li class="post-context-line"><code>        instance.class.handle_no_command_error(name)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue ArgumentError =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>      handle_argument_error?(instance, e, caller) ? instance.class.handle_argument_error(self, e, args, arity) : (raise e)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor&#x2F;invocation.rb</code> in
                      <code><strong>invoke_command</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="120"
                        class="pre-context" id="pre-105"
                        onclick="toggle(105);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Invoke the given command if the given args.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke_command(command, *args) #:nodoc:
      </code></li>
                      
                      <li class="pre-context-line"><code>      current = @_invocations[self.class]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      unless current.include?(command.name)
      </code></li>
                      
                      <li class="pre-context-line"><code>        current &lt;&lt; command.name
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="127" class="context" id="105"
                        onclick="toggle(105);">
                      <li class="context-line" id="context-105"><code>        command.run(self, *args)</code></li>
                    </ol>
      
                    
                    <ol start="128" class="post-context"
                        id="post-105" onclick="toggle(105);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>    alias_method :invoke_task, :invoke_command
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # Invoke all commands for the current instance.
      </code></li>
                      
                      <li class="post-context-line"><code>    def invoke_all #:nodoc:
      </code></li>
                      
                      <li class="post-context-line"><code>      self.class.all_commands.map { |_, command| invoke_command(command) }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor.rb</code> in
                      <code><strong>dispatch</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="385"
                        class="pre-context" id="pre-106"
                        onclick="toggle(106);">
                      
                      <li class="pre-context-line"><code>      config[:current_command] = command
      </code></li>
                      
                      <li class="pre-context-line"><code>      config[:command_options] = command.options
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      instance = new(args, opts, config)
      </code></li>
                      
                      <li class="pre-context-line"><code>      yield instance if block_given?
      </code></li>
                      
                      <li class="pre-context-line"><code>      args = instance.args
      </code></li>
                      
                      <li class="pre-context-line"><code>      trailing = args[Range.new(arguments.size, -1)]
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="392" class="context" id="106"
                        onclick="toggle(106);">
                      <li class="context-line" id="context-106"><code>      instance.invoke_command(command, trailing || [])</code></li>
                    </ol>
      
                    
                    <ol start="393" class="post-context"
                        id="post-106" onclick="toggle(106);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # The banner for this class. You can customize it if you are invoking the
      </code></li>
                      
                      <li class="post-context-line"><code>    # thor class by another ways which is not the Bundler::Thor::Runner. It receives
      </code></li>
                      
                      <li class="post-context-line"><code>    # the command that is going to be invoked and a boolean which indicates if
      </code></li>
                      
                      <li class="post-context-line"><code>    # the namespace should be displayed as arguments.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli.rb</code> in
                      <code><strong>dispatch</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="27"
                        class="pre-context" id="pre-107"
                        onclick="toggle(107);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      super
      </code></li>
                      
                      <li class="pre-context-line"><code>    ensure
      </code></li>
                      
                      <li class="pre-context-line"><code>      Bundler::SharedHelpers.print_major_deprecations!
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def self.dispatch(*)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="34" class="context" id="107"
                        onclick="toggle(107);">
                      <li class="context-line" id="context-107"><code>      super do |i|</code></li>
                    </ol>
      
                    
                    <ol start="35" class="post-context"
                        id="post-107" onclick="toggle(107);">
                      
                      <li class="post-context-line"><code>        i.send(:print_command)
      </code></li>
                      
                      <li class="post-context-line"><code>        i.send(:warn_on_outdated_bundler)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def self.all_aliases
      </code></li>
                      
                      <li class="post-context-line"><code>      @all_aliases ||= begin
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor&#x2F;base.rb</code> in
                      <code><strong>start</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="478"
                        class="pre-context" id="pre-108"
                        onclick="toggle(108);">
                      
                      <li class="pre-context-line"><code>      # can simply initialize it:
      </code></li>
                      
                      <li class="pre-context-line"><code>      #
      </code></li>
                      
                      <li class="pre-context-line"><code>      #   script = MyScript.new(args, options, config)
      </code></li>
                      
                      <li class="pre-context-line"><code>      #   script.invoke(:command, first_arg, second_arg, third_arg)
      </code></li>
                      
                      <li class="pre-context-line"><code>      #
      </code></li>
                      
                      <li class="pre-context-line"><code>      def start(given_args = ARGV, config = {})
      </code></li>
                      
                      <li class="pre-context-line"><code>        config[:shell] ||= Bundler::Thor::Base.shell.new
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="485" class="context" id="108"
                        onclick="toggle(108);">
                      <li class="context-line" id="context-108"><code>        dispatch(nil, given_args.dup, nil, config)</code></li>
                    </ol>
      
                    
                    <ol start="486" class="post-context"
                        id="post-108" onclick="toggle(108);">
                      
                      <li class="post-context-line"><code>      rescue Bundler::Thor::Error =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>        config[:debug] || ENV[&quot;THOR_DEBUG&quot;] == &quot;1&quot; ? (raise e) : config[:shell].error(e.message)
      </code></li>
                      
                      <li class="post-context-line"><code>        exit(false) if exit_on_failure?
      </code></li>
                      
                      <li class="post-context-line"><code>      rescue Errno::EPIPE
      </code></li>
                      
                      <li class="post-context-line"><code>        # This happens if a thor command is piped to something like `head`,
      </code></li>
                      
                      <li class="post-context-line"><code>        # which closes the pipe when it&#x27;s done reading. This will also
      </code></li>
                      
                      <li class="post-context-line"><code>        # mean that if the pipe is closed, further unnecessary
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli.rb</code> in
                      <code><strong>start</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-109"
                        onclick="toggle(109);">
                      
                      <li class="pre-context-line"><code>      &quot;cache&quot; =&gt; [&quot;package&quot;, &quot;pack&quot;],
      </code></li>
                      
                      <li class="pre-context-line"><code>      &quot;version&quot; =&gt; [&quot;-v&quot;, &quot;--version&quot;],
      </code></li>
                      
                      <li class="pre-context-line"><code>    }.freeze
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def self.start(*)
      </code></li>
                      
                      <li class="pre-context-line"><code>      check_deprecated_ext_option(ARGV) if ARGV.include?(&quot;--ext&quot;)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="109"
                        onclick="toggle(109);">
                      <li class="context-line" id="context-109"><code>      super</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-109" onclick="toggle(109);">
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler::SharedHelpers.print_major_deprecations!
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def self.dispatch(*)
      </code></li>
                      
                      <li class="post-context-line"><code>      super do |i|
      </code></li>
                      
                      <li class="post-context-line"><code>        i.send(:print_command)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;exe&#x2F;bundle</code> in
                      <code><strong>block in &lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="38"
                        class="pre-context" id="pre-110"
                        onclick="toggle(110);">
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  # Allow any command to use --help flag to show help for that command
      </code></li>
                      
                      <li class="pre-context-line"><code>  help_flags = %w[--help -h]
      </code></li>
                      
                      <li class="pre-context-line"><code>  help_flag_used = ARGV.any? {|a| help_flags.include? a }
      </code></li>
                      
                      <li class="pre-context-line"><code>  args = help_flag_used ? Bundler::CLI.reformatted_help_args(ARGV) : ARGV
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="45" class="context" id="110"
                        onclick="toggle(110);">
                      <li class="context-line" id="context-110"><code>  Bundler::CLI.start(args, :debug =&gt; true)</code></li>
                    </ol>
      
                    
                    <ol start="46" class="post-context"
                        id="post-110" onclick="toggle(110);">
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;friendly_errors.rb</code> in
                      <code><strong>with_friendly_errors</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="110"
                        class="pre-context" id="pre-111"
                        onclick="toggle(111);">
                      
                      <li class="pre-context-line"><code>    def new_issue_url
      </code></li>
                      
                      <li class="pre-context-line"><code>      &quot;https:&#x2F;&#x2F;github.com&#x2F;rubygems&#x2F;rubygems&#x2F;issues&#x2F;new?labels=Bundler&amp;template=bundler-related-issue.md&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  def self.with_friendly_errors
      </code></li>
                      
                      <li class="pre-context-line"><code>    FriendlyErrors.enable!
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="117" class="context" id="111"
                        onclick="toggle(111);">
                      <li class="context-line" id="context-111"><code>    yield</code></li>
                    </ol>
      
                    
                    <ol start="118" class="post-context"
                        id="post-111" onclick="toggle(111);">
                      
                      <li class="post-context-line"><code>  rescue SignalException
      </code></li>
                      
                      <li class="post-context-line"><code>    raise
      </code></li>
                      
                      <li class="post-context-line"><code>  rescue Exception =&gt; e # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>    raise if FriendlyErrors.disabled?
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    FriendlyErrors.log_error(e)
      </code></li>
                      
                      <li class="post-context-line"><code>    exit FriendlyErrors.exit_status(e)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;exe&#x2F;bundle</code> in
                      <code><strong>&lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="26"
                        class="pre-context" id="pre-112"
                        onclick="toggle(112);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if File.exist?(base_path)
      </code></li>
                      
                      <li class="pre-context-line"><code>  require_relative &quot;..&#x2F;lib&#x2F;bundler&#x2F;friendly_errors&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>else
      </code></li>
                      
                      <li class="pre-context-line"><code>  require &quot;bundler&#x2F;friendly_errors&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="33" class="context" id="112"
                        onclick="toggle(112);">
                      <li class="context-line" id="context-112"><code>Bundler.with_friendly_errors do</code></li>
                    </ol>
      
                    
                    <ol start="34" class="post-context"
                        id="post-112" onclick="toggle(112);">
                      
                      <li class="post-context-line"><code>  if File.exist?(base_path)
      </code></li>
                      
                      <li class="post-context-line"><code>    require_relative &quot;..&#x2F;lib&#x2F;bundler&#x2F;cli&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>  else
      </code></li>
                      
                      <li class="post-context-line"><code>    require &quot;bundler&#x2F;cli&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>  # Allow any command to use --help flag to show help for that command
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;bundle</code> in
                      <code><strong>load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-113"
                        onclick="toggle(113);">
                      
                      <li class="pre-context-line"><code>    ENV[&#x27;BUNDLER_VERSION&#x27;] = str
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="113"
                        onclick="toggle(113);">
                      <li class="context-line" id="context-113"><code>load Gem.activate_bin_path(&#x27;bundler&#x27;, &#x27;bundle&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-113" onclick="toggle(113);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;bundler&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;bundler&quot;, &quot;bundle&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;bundle</code> in
                      <code><strong>&lt;main&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-114"
                        onclick="toggle(114);">
                      
                      <li class="pre-context-line"><code>    ENV[&#x27;BUNDLER_VERSION&#x27;] = str
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="114"
                        onclick="toggle(114);">
                      <li class="context-line" id="context-114"><code>load Gem.activate_bin_path(&#x27;bundler&#x27;, &#x27;bundle&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-114" onclick="toggle(114);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;bundler&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;bundler&quot;, &quot;bundle&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
      
            </ul>
          </div> <!-- /BACKTRACE -->
      
          
            <div id="get">
              <h3 id="get-info">GET</h3>
              
                <table class="req">
                  <tr>
                    <th>Variable</th>
                    <th>Value</th>
                  </tr>
                   
                  <tr>
                    <td>Content-Type</td>
                    <td class="code"><div>&quot;application&#x2F;json&quot;</div></td>
                  </tr>
                  
                  <tr>
                    <td>titulo</td>
                    <td class="code"><div>&quot;Titanic&quot;</div></td>
                  </tr>
                  
                </table>
              
              <div class="clear"></div>
            </div> <!-- /GET -->
      
            <div id="post">
              <h3 id="post-info">POST</h3>
              
                <p class="no-data">No POST data.</p>
              
              <div class="clear"></div>
            </div> <!-- /POST -->
          
      
          <div id="cookies">
            <h3 id="cookie-info">COOKIES</h3>
            
              <p class="no-data">No cookie data.</p>
            
            <div class="clear"></div>
          </div> <!-- /COOKIES -->
      
          <div id="rack">
            <h3 id="env-info">Rack ENV</h3>
            <table class="req">
              <tr>
                <th>Variable</th>
                <th>Value</th>
              </tr>
               
               <tr>
                 <td>CONTENT_LENGTH</td>
                 <td class="code"><div>0</div></td>
               </tr>
               
               <tr>
                 <td>HTTPS</td>
                 <td class="code"><div>off</div></td>
               </tr>
               
               <tr>
                 <td>HTTP_COOKIE</td>
                 <td class="code"><div></div></td>
               </tr>
               
               <tr>
                 <td>HTTP_HOST</td>
                 <td class="code"><div>example.org</div></td>
               </tr>
               
               <tr>
                 <td>HTTP_VERSION</td>
                 <td class="code"><div>HTTP&#x2F;1.0</div></td>
               </tr>
               
               <tr>
                 <td>PATH_INFO</td>
                 <td class="code"><div>&#x2F;contenido</div></td>
               </tr>
               
               <tr>
                 <td>QUERY_STRING</td>
                 <td class="code"><div>titulo=Titanic&amp;Content-Type=application%2Fjson</div></td>
               </tr>
               
               <tr>
                 <td>REMOTE_ADDR</td>
                 <td class="code"><div>127.0.0.1</div></td>
               </tr>
               
               <tr>
                 <td>REQUEST_METHOD</td>
                 <td class="code"><div>GET</div></td>
               </tr>
               
               <tr>
                 <td>SCRIPT_NAME</td>
                 <td class="code"><div></div></td>
               </tr>
               
               <tr>
                 <td>SERVER_NAME</td>
                 <td class="code"><div>example.org</div></td>
               </tr>
               
               <tr>
                 <td>SERVER_PORT</td>
                 <td class="code"><div>80</div></td>
               </tr>
               
               <tr>
                 <td>SERVER_PROTOCOL</td>
                 <td class="code"><div>HTTP&#x2F;1.0</div></td>
               </tr>
               
               <tr>
                 <td>rack.errors</td>
                 <td class="code"><div>#&lt;Object:0x00007f0866eaad88&gt;</div></td>
               </tr>
               
               <tr>
                 <td>rack.input</td>
                 <td class="code"><div>#&lt;StringIO:0x00007f08661bc400&gt;</div></td>
               </tr>
               
               <tr>
                 <td>rack.logger</td>
                 <td class="code"><div>#&lt;Logger:0x00007f0866440d20 @level=1, @progname=nil, @default_formatter=#&lt;Logger::Formatter:0x00007f08661bbed8 @datetime_format=nil&gt;, @formatter=nil, @logdev=#&lt;Logger::LogDevice:0x00007f0866440cd0 @shift_period_suffix=nil, @shift_size=nil, @shift_age=nil, @filename=nil, @dev=#&lt;StringIO:0x00007f08661bc4f0&gt;, @binmode=false, @mon_data=#&lt;Monitor:0x00007f08661bbd48&gt;, @mon_data_owner_object_id=53440&gt;, @level_override={}&gt;</div></td>
               </tr>
               
               <tr>
                 <td>rack.multiprocess</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>rack.multithread</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>rack.request.cookie_hash</td>
                 <td class="code"><div>{}</div></td>
               </tr>
               
               <tr>
                 <td>rack.request.cookie_string</td>
                 <td class="code"><div></div></td>
               </tr>
               
               <tr>
                 <td>rack.request.query_hash</td>
                 <td class="code"><div>{&quot;titulo&quot;=&gt;&quot;Titanic&quot;, &quot;Content-Type&quot;=&gt;&quot;application&#x2F;json&quot;}</div></td>
               </tr>
               
               <tr>
                 <td>rack.request.query_string</td>
                 <td class="code"><div>titulo=Titanic&amp;Content-Type=application%2Fjson</div></td>
               </tr>
               
               <tr>
                 <td>rack.run_once</td>
                 <td class="code"><div>false</div></td>
               </tr>
               
               <tr>
                 <td>rack.test</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>rack.url_scheme</td>
                 <td class="code"><div>http</div></td>
               </tr>
               
               <tr>
                 <td>rack.version</td>
                 <td class="code"><div>[1, 3]</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.accept</td>
                 <td class="code"><div>[#&lt;Sinatra::Request::AcceptEntry:0x00007f08661c11d0 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.commonlogger</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.error</td>
                 <td class="code"><div>#&lt;NoMethodError: undefined method `id&#x27; for an instance of Array&gt;</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.error.params</td>
                 <td class="code"><div>{&quot;titulo&quot;=&gt;&quot;Titanic&quot;, &quot;Content-Type&quot;=&gt;&quot;application&#x2F;json&quot;}</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.route</td>
                 <td class="code"><div>GET &#x2F;contenido</div></td>
               </tr>
               
            </table>
            <div class="clear"></div>
          </div> <!-- /RACK ENV -->
      
          <p id="explanation">You're seeing this error because you have
      enabled the <code>show_exceptions</code> setting.</p>
        </div> <!-- /WRAP -->
        </body>
      </html>
      ' (JSON::ParserError)
      ./features/step_definitions/busqueda_por_titulo_step.rb:15:in `"deber√≠a ver la pel√≠cula {string} listada entre las existentes"'
      features/busqueda_por_titulo.feature:10:in `deber√≠a ver la pel√≠cula "Titanic" listada entre las existentes'
2024-06-10 22:18:35.605718 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  @current
  Escenario: US08 - 02 Como cinefilo quiero buscar una pelicula por su nombre parcial     # features/busqueda_por_titulo.feature:13
2024-06-10 22:18:35.642305 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":392,"email":"pepito@gmail.com","id_telegram":123456789}
2024-06-10 22:18:35.645858 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"pepito@gmail.com", "id_telegram"=>123456789}
2024-06-10 22:18:35.648269 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":393,"email":"pepito@gmail.com","id_telegram":123456789}
2024-06-10 22:18:35.648724 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Titanic", "anio"=>1997, "genero"=>"drama"}
2024-06-10 22:18:35.649492 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":708,"titulo":"Titanic","anio":1997,"genero":"drama"}
2024-06-10 22:18:35.649813 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Catch me if you can", "anio"=>2002, "genero"=>"comedia"}
    Dado que el contenido "Catch me if you can" 2002 "comedia" existe en la base de datos # features/step_definitions/aniadir_favoritos_step.rb:4
2024-06-10 22:18:35.650748 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":709,"titulo":"Catch me if you can","anio":2002,"genero":"comedia"}
[23, 32] in /app/persistencia/repositorio_peliculas.rb
  [2m  23|[0m     load_object(row) [32munless[0m row.nil?
  [2m  24|[0m   [32mend[0m
  [2m  25|[0m 
  [2m  26|[0m   [32mdef[0m [34m[1mfind_by_title[0m(titulo)
  [2m  27|[0m     require [31m[1m'[0m[31mdebug[0m[31m[1m'[0m
=>[2m  28|[0m     debugger
  [2m  29|[0m     load_collection dataset.where([34m[1m[4mSequel[0m.like([33m:[0m[33mtitulo[0m, [31m[1m"[0m[31m%[0m[31m#{[0mtitulo[31m}[0m[31m%[0m[31m[1m"[0m, [35mcase_insensitive:[0m [36m[1mtrue[0m))
  [2m  30|[0m   [32mend[0m
  [2m  31|[0m 
  [2m  32|[0m   protected
=>#0	[34m[1mRepositorioPeliculas#find_by_title[0m([36m[1mtitulo[0m="Catch") at [32m/app/persistencia/repositorio_peliculas.rb:28[0m
  #1	[34m[1mblock[0m in [34m[1m<top (required)>[0m at [32m/app/app.rb:102[0m
  # and 113 frames (use `bt' command for all frames)
(rdbg) [0m(rdbg) [36m[4m[36m[4mc[0m[2m[36m[4m[0m[2m [36m[4m[0m[2m [36m[4m[0m[2m [36m[4m[0m[2m [36m[4m[0m[2m#[36m[4m[0m[2m [36m[4m[0m[2mc[36m[4m[0m[2mo[36m[4m[0m[2mn[36m[4m[0m[2mt[36m[4m[0m[2mi[36m[4m[0m[2mn[36m[4m[0m[2mu[36m[4m[0m[2me[36m[4m[0m[2m [36m[4m[0m[2mc[36m[4m[0m[2mo[36m[4m[0m[2mm[36m[4m[0m[2mm[36m[4m[0m[2ma[36m[4m[0m[2mn[36m[4m[0m[2md[0m[0m[36m[4m[0m[2m [0m[36m[4m[0m[2m     Cuando el usuario busca la pelicula "Catch"                                           # features/step_definitions/busqueda_por_titulo_step.rb:7
    Entonces deber√≠a ver la pel√≠cula "Catch me if you can" listada entre las existentes   # features/step_definitions/busqueda_por_titulo_step.rb:14
      unexpected token at '<!DOCTYPE html>
      <html>
      <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
        <title>NoMethodError at &#x2F;contenido</title>
      
        <script type="text/javascript">
        //<!--
        function toggle(id) {
          var pre  = document.getElementById("pre-" + id);
          var post = document.getElementById("post-" + id);
          var context = document.getElementById("context-" + id);
      
          if (pre.style.display == 'block') {
            pre.style.display = 'none';
            post.style.display = 'none';
            context.style.background = "none";
          } else {
            pre.style.display = 'block';
            post.style.display = 'block';
            context.style.background = "#fffed9";
          }
        }
      
        function toggleBacktrace(){
          var bt = document.getElementById("backtrace");
          var toggler = document.getElementById("expando");
      
          if (bt.className == 'condensed') {
            bt.className = 'expanded';
            toggler.innerHTML = "(condense)";
          } else {
            bt.className = 'condensed';
            toggler.innerHTML = "(expand)";
          }
        }
        //-->
        </script>
      
      <style type="text/css" media="screen">
        *                   {margin: 0; padding: 0; border: 0; outline: 0;}
        div.clear           {clear: both;}
        body                {background: #EEEEEE; margin: 0; padding: 0;
                             font-family: 'Lucida Grande', 'Lucida Sans Unicode',
                             'Garuda';}
        code                {font-family: 'Lucida Console', monospace;
                             font-size: 12px;}
        li                  {height: 18px;}
        ul                  {list-style: none; margin: 0; padding: 0;}
        ol:hover            {cursor: pointer;}
        ol li               {white-space: pre;}
        #explanation        {font-size: 12px; color: #666666;
                             margin: 20px 0 0 100px;}
      /* WRAP */
        #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;
                             padding: 30px 50px 20px 50px;
                             border-left: 1px solid #DDDDDD;
                             border-right: 1px solid #DDDDDD;}
      /* HEADER */
        #header             {margin: 0 auto 25px auto;}
        #header img         {float: left;}
        #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;
                             font-family: 'Lucida Grande', 'Lucida Sans Unicode';}
        h1                  {margin: 0; font-size: 36px; color: #981919;}
        h2                  {margin: 0; font-size: 22px; color: #333333;}
        #header ul          {margin: 0; font-size: 12px; color: #666666;}
        #header ul li strong{color: #444444;}
        #header ul li       {display: inline; padding: 0 10px;}
        #header ul li.first {padding-left: 0;}
        #header ul li.last  {border: 0; padding-right: 0;}
      /* BODY */
        #backtrace,
        #get,
        #post,
        #cookies,
        #rack               {width: 980px; margin: 0 auto 10px auto;}
        p#nav               {float: right; font-size: 14px;}
      /* BACKTRACE */
        a#expando           {float: left; padding-left: 5px; color: #666666;
                            font-size: 14px; text-decoration: none; cursor: pointer;}
        a#expando:hover     {text-decoration: underline;}
        h3                  {float: left; width: 100px; margin-bottom: 10px;
                             color: #981919; font-size: 14px; font-weight: bold;}
        #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}
        #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;
                                 font-size: 12px; color: #333333;}
        #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;
                             border-bottom: 0;}
        #backtrace ol       {width: 920px; margin-left: 50px;
                             font: 10px 'Lucida Console', monospace; color: #666666;}
        #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;
                             padding: 2px 0;}
        #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}
        #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;
                             padding: 3px 0;}
        #backtrace-ul .code {padding: 6px 0 4px 0;}
        #backtrace.condensed .system,
        #backtrace.condensed .framework {display:none;}
      /* REQUEST DATA */
        p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}
        table.req           {width: 980px; text-align: left; font-size: 12px;
                             color: #666666; padding: 0; border-spacing: 0;
                             border: 1px solid #EEEEEE; border-bottom: 0;
                             border-left: 0;
                             clear:both}
        table.req tr th     {padding: 2px 10px; font-weight: bold;
                             background: #F7F7F7; border-bottom: 1px solid #EEEEEE;
                             border-left: 1px solid #EEEEEE;}
        table.req tr td     {padding: 2px 20px 2px 10px;
                             border-bottom: 1px solid #EEEEEE;
                             border-left: 1px solid #EEEEEE;}
      /* HIDE PRE/POST CODE AT START */
        .pre-context,
        .post-context       {display: none;}
      
        table td.code       {width:750px}
        table td.code div   {width:750px;overflow:hidden}
      </style>
      </head>
      <body>
        <div id="wrap">
          <div id="header">
            <img src="/__sinatra__/500.png" alt="application error" height="161" width="313" />
            <div id="summary">
              <h1><strong>NoMethodError</strong> at <strong>&#x2F;contenido
                </strong></h1>
              <h2>undefined method `id&#x27; for an instance of Array</h2>
              <ul>
                <li class="first"><strong>file:</strong> <code>
                  app.rb</code></li>
                <li><strong>location:</strong> <code>block in &lt;top (required)&gt;
                  </code></li>
                <li class="last"><strong>line:
                  </strong> 104</li>
              </ul>
            </div>
            <div class="clear"></div>
          </div>
      
          <div id="backtrace" class='condensed'>
            <h3>BACKTRACE</h3>
            <p><a href="#" id="expando"
                  onclick="toggleBacktrace(); return false">(expand)</a></p>
            <p id="nav"><strong>JUMP TO:</strong>
               
                  <a href="#get-info">GET</a>
                  <a href="#post-info">POST</a>
               
               <a href="#cookie-info">COOKIES</a>
               <a href="#env-info">ENV</a>
            </p>
            <div class="clear"></div>
      
            <ul id="backtrace-ul">
      
            
            
                
      
                  <li class="frame-info app">
                    <code>&#x2F;app&#x2F;app.rb</code> in
                      <code><strong>block in &lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code app">
                    
                    <ol start="97"
                        class="pre-context" id="pre-1"
                        onclick="toggle(1);">
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>get &#x27;&#x2F;contenido&#x27; do
      </code></li>
                      
                      <li class="pre-context-line"><code>  titulo = params[&#x27;titulo&#x27;]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  pelicula = RepositorioPeliculas.new.find_by_title(titulo)
      </code></li>
                      
                      <li class="pre-context-line"><code>  status 200
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="104" class="context" id="1"
                        onclick="toggle(1);">
                      <li class="context-line" id="context-1"><code>  [{ id: pelicula.id, titulo: pelicula.titulo, anio: pelicula.anio, genero: pelicula.genero }].to_json</code></li>
                    </ol>
      
                    
                    <ol start="105" class="post-context"
                        id="post-1" onclick="toggle(1);">
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>post &#x27;&#x2F;visualizacion&#x27; do
      </code></li>
                      
                      <li class="post-context-line"><code>  @body ||= request.body.read
      </code></li>
                      
                      <li class="post-context-line"><code>  parametros_visualizacion = JSON.parse(@body)
      </code></li>
                      
                      <li class="post-context-line"><code>  email = parametros_visualizacion[&#x27;email&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>  id_pelicula = parametros_visualizacion[&#x27;id_pelicula&#x27;]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1699"
                        class="pre-context" id="pre-2"
                        onclick="toggle(2);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        pattern                 = compile(path, route_mustermann_opts)
      </code></li>
                      
                      <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        conditions = @conditions
      </code></li>
                      
                      <li class="pre-context-line"><code>        @conditions = []
      </code></li>
                      
                      <li class="pre-context-line"><code>        wrapper = block.arity.zero? ?
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1706" class="context" id="2"
                        onclick="toggle(2);">
                      <li class="context-line" id="context-2"><code>          proc { |a, _p| unbound_method.bind(a).call } :</code></li>
                    </ol>
      
                    
                    <ol start="1707" class="post-context"
                        id="post-2" onclick="toggle(2);">
                      
                      <li class="post-context-line"><code>          proc { |a, p| unbound_method.bind(a).call(*p) }
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        [pattern, conditions, wrapper]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def compile(path, route_mustermann_opts = {})
      </code></li>
                      
                      <li class="post-context-line"><code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in compile!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1699"
                        class="pre-context" id="pre-3"
                        onclick="toggle(3);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        pattern                 = compile(path, route_mustermann_opts)
      </code></li>
                      
                      <li class="pre-context-line"><code>        method_name             = &quot;#{verb} #{path}&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>        unbound_method          = generate_method(method_name, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        conditions = @conditions
      </code></li>
                      
                      <li class="pre-context-line"><code>        @conditions = []
      </code></li>
                      
                      <li class="pre-context-line"><code>        wrapper = block.arity.zero? ?
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1706" class="context" id="3"
                        onclick="toggle(3);">
                      <li class="context-line" id="context-3"><code>          proc { |a, _p| unbound_method.bind(a).call } :</code></li>
                    </ol>
      
                    
                    <ol start="1707" class="post-context"
                        id="post-3" onclick="toggle(3);">
                      
                      <li class="post-context-line"><code>          proc { |a, p| unbound_method.bind(a).call(*p) }
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        [pattern, conditions, wrapper]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def compile(path, route_mustermann_opts = {})
      </code></li>
                      
                      <li class="post-context-line"><code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block (3 levels) in route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1012"
                        class="pre-context" id="pre-4"
                        onclick="toggle(4);">
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes&amp;.each do |pattern, conditions, block|
      </code></li>
                      
                      <li class="pre-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1019" class="context" id="4"
                        onclick="toggle(4);">
                      <li class="context-line" id="context-4"><code>          route_eval { block[*args] }</code></li>
                    </ol>
      
                    
                    <ol start="1020" class="post-context"
                        id="post-4" onclick="toggle(4);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        # don&#x27;t wipe out pass_block in superclass
      </code></li>
                      
                      <li class="post-context-line"><code>        pass_block = returned_pass_block if returned_pass_block
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Run routes defined in superclass.
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>route_eval</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1030"
                        class="pre-context" id="pre-5"
                        onclick="toggle(5);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      route_eval(&amp;pass_block) if pass_block
      </code></li>
                      
                      <li class="pre-context-line"><code>      route_missing
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run a route block and throw :halt with the result.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route_eval
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1037" class="context" id="5"
                        onclick="toggle(5);">
                      <li class="context-line" id="context-5"><code>      throw :halt, yield</code></li>
                    </ol>
      
                    
                    <ol start="1038" class="post-context"
                        id="post-5" onclick="toggle(5);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # If the current request matches pattern and conditions, fill params
      </code></li>
                      
                      <li class="post-context-line"><code>    # with keys and call the given block.
      </code></li>
                      
                      <li class="post-context-line"><code>    # Revert params afterwards.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                      <li class="post-context-line"><code>    # Returns pass block.
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block (2 levels) in route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1012"
                        class="pre-context" id="pre-6"
                        onclick="toggle(6);">
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes&amp;.each do |pattern, conditions, block|
      </code></li>
                      
                      <li class="pre-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1019" class="context" id="6"
                        onclick="toggle(6);">
                      <li class="context-line" id="context-6"><code>          route_eval { block[*args] }</code></li>
                    </ol>
      
                    
                    <ol start="1020" class="post-context"
                        id="post-6" onclick="toggle(6);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        # don&#x27;t wipe out pass_block in superclass
      </code></li>
                      
                      <li class="post-context-line"><code>        pass_block = returned_pass_block if returned_pass_block
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Run routes defined in superclass.
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in process_route</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1061"
                        class="pre-context" id="pre-7"
                        onclick="toggle(7);">
                      
                      <li class="pre-context-line"><code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?
      </code></li>
                      
                      <li class="pre-context-line"><code>      else
      </code></li>
                      
                      <li class="pre-context-line"><code>        values += params.values.flatten
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      catch(:pass) do
      </code></li>
                      
                      <li class="pre-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1068" class="context" id="7"
                        onclick="toggle(7);">
                      <li class="context-line" id="context-7"><code>        block ? block[self, values] : yield(self, values)</code></li>
                    </ol>
      
                    
                    <ol start="1069" class="post-context"
                        id="post-7" onclick="toggle(7);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue StandardError
      </code></li>
                      
                      <li class="post-context-line"><code>      @env[&#x27;sinatra.error.params&#x27;] = @params
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                      <li class="post-context-line"><code>      params ||= {}
      </code></li>
                      
                      <li class="post-context-line"><code>      params.each { |k, _| @params.delete(k) } unless @env[&#x27;sinatra.error.params&#x27;]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>catch</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1059"
                        class="pre-context" id="pre-8"
                        onclick="toggle(8);">
                      
                      <li class="pre-context-line"><code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }
      </code></li>
                      
                      <li class="pre-context-line"><code>        values            += captures
      </code></li>
                      
                      <li class="pre-context-line"><code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?
      </code></li>
                      
                      <li class="pre-context-line"><code>      else
      </code></li>
                      
                      <li class="pre-context-line"><code>        values += params.values.flatten
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1066" class="context" id="8"
                        onclick="toggle(8);">
                      <li class="context-line" id="context-8"><code>      catch(:pass) do</code></li>
                    </ol>
      
                    
                    <ol start="1067" class="post-context"
                        id="post-8" onclick="toggle(8);">
                      
                      <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
      </code></li>
                      
                      <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue StandardError
      </code></li>
                      
                      <li class="post-context-line"><code>      @env[&#x27;sinatra.error.params&#x27;] = @params
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>process_route</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1059"
                        class="pre-context" id="pre-9"
                        onclick="toggle(9);">
                      
                      <li class="pre-context-line"><code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }
      </code></li>
                      
                      <li class="pre-context-line"><code>        values            += captures
      </code></li>
                      
                      <li class="pre-context-line"><code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?
      </code></li>
                      
                      <li class="pre-context-line"><code>      else
      </code></li>
                      
                      <li class="pre-context-line"><code>        values += params.values.flatten
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1066" class="context" id="9"
                        onclick="toggle(9);">
                      <li class="context-line" id="context-9"><code>      catch(:pass) do</code></li>
                    </ol>
      
                    
                    <ol start="1067" class="post-context"
                        id="post-9" onclick="toggle(9);">
                      
                      <li class="post-context-line"><code>        conditions.each { |c| throw :pass if c.bind(self).call == false }
      </code></li>
                      
                      <li class="post-context-line"><code>        block ? block[self, values] : yield(self, values)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue StandardError
      </code></li>
                      
                      <li class="post-context-line"><code>      @env[&#x27;sinatra.error.params&#x27;] = @params
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1010"
                        class="pre-context" id="pre-10"
                        onclick="toggle(10);">
                      
                      <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes&amp;.each do |pattern, conditions, block|
      </code></li>
                      
                      <li class="pre-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1017" class="context" id="10"
                        onclick="toggle(10);">
                      <li class="context-line" id="context-10"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|</code></li>
                    </ol>
      
                    
                    <ol start="1018" class="post-context"
                        id="post-10" onclick="toggle(10);">
                      
                      <li class="post-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>          route_eval { block[*args] }
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        # don&#x27;t wipe out pass_block in superclass
      </code></li>
                      
                      <li class="post-context-line"><code>        pass_block = returned_pass_block if returned_pass_block
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>each</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1007"
                        class="pre-context" id="pre-11"
                        onclick="toggle(11);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1014" class="context" id="11"
                        onclick="toggle(11);">
                      <li class="context-line" id="context-11"><code>      routes&amp;.each do |pattern, conditions, block|</code></li>
                    </ol>
      
                    
                    <ol start="1015" class="post-context"
                        id="post-11" onclick="toggle(11);">
                      
                      <li class="post-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="post-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>          route_eval { block[*args] }
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>route!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1007"
                        class="pre-context" id="pre-12"
                        onclick="toggle(12);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run routes defined on the class and all superclasses.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def route!(base = settings, pass_block = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>      routes = base.routes[@request.request_method]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1014" class="context" id="12"
                        onclick="toggle(12);">
                      <li class="context-line" id="context-12"><code>      routes&amp;.each do |pattern, conditions, block|</code></li>
                    </ol>
      
                    
                    <ol start="1015" class="post-context"
                        id="post-12" onclick="toggle(12);">
                      
                      <li class="post-context-line"><code>        response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        returned_pass_block = process_route(pattern, conditions) do |*args|
      </code></li>
                      
                      <li class="post-context-line"><code>          env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>          route_eval { block[*args] }
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in dispatch!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1131"
                        class="pre-context" id="pre-13"
                        onclick="toggle(13);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      invoke do
      </code></li>
                      
                      <li class="pre-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
      </code></li>
                      
                      <li class="pre-context-line"><code>        filter! :before do
      </code></li>
                      
                      <li class="pre-context-line"><code>          @pinned_response = !response[&#x27;Content-Type&#x27;].nil?
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1138" class="context" id="13"
                        onclick="toggle(13);">
                      <li class="context-line" id="context-13"><code>        route!</code></li>
                    </ol>
      
                    
                    <ol start="1139" class="post-context"
                        id="post-13" onclick="toggle(13);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue ::Exception =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>      invoke { handle_exception!(e) }
      </code></li>
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                      <li class="post-context-line"><code>      begin
      </code></li>
                      
                      <li class="post-context-line"><code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>      rescue ::Exception =&gt; e
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>catch</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-14"
                        onclick="toggle(14);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="14"
                        onclick="toggle(14);">
                      <li class="context-line" id="context-14"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-14" onclick="toggle(14);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-15"
                        onclick="toggle(15);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="15"
                        onclick="toggle(15);">
                      <li class="context-line" id="context-15"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-15" onclick="toggle(15);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>dispatch!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1126"
                        class="pre-context" id="pre-16"
                        onclick="toggle(16);">
                      
                      <li class="pre-context-line"><code>      @params.merge!(@request.params).each do |key, val|
      </code></li>
                      
                      <li class="pre-context-line"><code>        next unless val.respond_to?(:force_encoding)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        val = val.dup if val.frozen?
      </code></li>
                      
                      <li class="pre-context-line"><code>        @params[key] = force_encoding(val)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1133" class="context" id="16"
                        onclick="toggle(16);">
                      <li class="context-line" id="context-16"><code>      invoke do</code></li>
                    </ol>
      
                    
                    <ol start="1134" class="post-context"
                        id="post-16" onclick="toggle(16);">
                      
                      <li class="post-context-line"><code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)
      </code></li>
                      
                      <li class="post-context-line"><code>        filter! :before do
      </code></li>
                      
                      <li class="post-context-line"><code>          @pinned_response = !response[&#x27;Content-Type&#x27;].nil?
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        route!
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue ::Exception =&gt; e
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in call!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="942"
                        class="pre-context" id="pre-17"
                        onclick="toggle(17);">
                      
                      <li class="pre-context-line"><code>      @env      = env
      </code></li>
                      
                      <li class="pre-context-line"><code>      @params   = IndifferentHash.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @request  = Request.new(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @response = Response.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @pinned_response = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="949" class="context" id="17"
                        onclick="toggle(17);">
                      <li class="context-line" id="context-17"><code>      invoke { dispatch! }</code></li>
                    </ol>
      
                    
                    <ol start="950" class="post-context"
                        id="post-17" onclick="toggle(17);">
                      
                      <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type body[0].content_type
      </code></li>
                      
                      <li class="post-context-line"><code>        elsif (default = settings.default_content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type default
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>catch</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-18"
                        onclick="toggle(18);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="18"
                        onclick="toggle(18);">
                      <li class="context-line" id="context-18"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-18" onclick="toggle(18);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1102"
                        class="pre-context" id="pre-19"
                        onclick="toggle(19);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.static_file&#x27;] = path
      </code></li>
                      
                      <li class="pre-context-line"><code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?
      </code></li>
                      
                      <li class="pre-context-line"><code>      send_file path, options.merge(disposition: nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(&amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1109" class="context" id="19"
                        onclick="toggle(19);">
                      <li class="context-line" id="context-19"><code>      res = catch(:halt, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="1110" class="post-context"
                        id="post-19" onclick="toggle(19);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      res = [res] if (Integer === res) || (String === res)
      </code></li>
                      
                      <li class="post-context-line"><code>      if (Array === res) &amp;&amp; (Integer === res.first)
      </code></li>
                      
                      <li class="post-context-line"><code>        res = res.dup
      </code></li>
                      
                      <li class="post-context-line"><code>        status(res.shift)
      </code></li>
                      
                      <li class="post-context-line"><code>        body(res.pop)
      </code></li>
                      
                      <li class="post-context-line"><code>        headers(*res)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call!</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="942"
                        class="pre-context" id="pre-20"
                        onclick="toggle(20);">
                      
                      <li class="pre-context-line"><code>      @env      = env
      </code></li>
                      
                      <li class="pre-context-line"><code>      @params   = IndifferentHash.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @request  = Request.new(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @response = Response.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @pinned_response = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>      template_cache.clear if settings.reload_templates
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="949" class="context" id="20"
                        onclick="toggle(20);">
                      <li class="context-line" id="context-20"><code>      invoke { dispatch! }</code></li>
                    </ol>
      
                    
                    <ol start="950" class="post-context"
                        id="post-20" onclick="toggle(20);">
                      
                      <li class="post-context-line"><code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      unless @response[&#x27;Content-Type&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type body[0].content_type
      </code></li>
                      
                      <li class="post-context-line"><code>        elsif (default = settings.default_content_type)
      </code></li>
                      
                      <li class="post-context-line"><code>          content_type default
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="931"
                        class="pre-context" id="pre-21"
                        onclick="toggle(21);">
                      
                      <li class="pre-context-line"><code>      @template_cache = Tilt::Cache.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      @pinned_response = nil # whether a before! filter pinned the content-type
      </code></li>
                      
                      <li class="pre-context-line"><code>      yield self if block_given?
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Rack call interface.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="938" class="context" id="21"
                        onclick="toggle(21);">
                      <li class="context-line" id="context-21"><code>      dup.call!(env)</code></li>
                    </ol>
      
                    
                    <ol start="939" class="post-context"
                        id="post-21" onclick="toggle(21);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def call!(env) # :nodoc:
      </code></li>
                      
                      <li class="post-context-line"><code>      @env      = env
      </code></li>
                      
                      <li class="post-context-line"><code>      @params   = IndifferentHash.new
      </code></li>
                      
                      <li class="post-context-line"><code>      @request  = Request.new(env)
      </code></li>
                      
                      <li class="post-context-line"><code>      @response = Response.new
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-22"
                        onclick="toggle(22);">
                      
                      <li class="pre-context-line"><code>    #
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Options:
      </code></li>
                      
                      <li class="pre-context-line"><code>    # xss_mode:: How the browser should prevent the attack (default: :block)
      </code></li>
                      
                      <li class="pre-context-line"><code>    class XSSHeader &lt; Base
      </code></li>
                      
                      <li class="pre-context-line"><code>      default_options xss_mode: :block, nosniff: true
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="22"
                        onclick="toggle(22);">
                      <li class="context-line" id="context-22"><code>        status, headers, body = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-22" onclick="toggle(22);">
                      
                      <li class="post-context-line"><code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers
      </code></li>
                      
                      <li class="post-context-line"><code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]
      </code></li>
                      
                      <li class="post-context-line"><code>        [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="11"
                        class="pre-context" id="pre-23"
                        onclick="toggle(23);">
                      
                      <li class="pre-context-line"><code>    #
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.
      </code></li>
                      
                      <li class="pre-context-line"><code>    class PathTraversal &lt; Base
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        path_was         = env[&#x27;PATH_INFO&#x27;]
      </code></li>
                      
                      <li class="pre-context-line"><code>        env[&#x27;PATH_INFO&#x27;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="18" class="context" id="23"
                        onclick="toggle(23);">
                      <li class="context-line" id="context-23"><code>        app.call env</code></li>
                    </ol>
      
                    
                    <ol start="19" class="post-context"
                        id="post-23" onclick="toggle(23);">
                      
                      <li class="post-context-line"><code>      ensure
      </code></li>
                      
                      <li class="post-context-line"><code>        env[&#x27;PATH_INFO&#x27;] = path_was
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def cleanup(path)
      </code></li>
                      
                      <li class="post-context-line"><code>        encoding = path.encoding
      </code></li>
                      
                      <li class="post-context-line"><code>        dot   = &#x27;.&#x27;.encode(encoding)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-24"
                        onclick="toggle(24);">
                      
                      <li class="pre-context-line"><code>    class JsonCsrf &lt; Base
      </code></li>
                      
                      <li class="pre-context-line"><code>      default_options allow_if: nil
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      alias react deny
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        request               = Request.new(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="24"
                        onclick="toggle(24);">
                      <li class="context-line" id="context-24"><code>        status, headers, body = app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-24" onclick="toggle(24);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        if has_vector?(request, headers)
      </code></li>
                      
                      <li class="post-context-line"><code>          warn env, &quot;attack prevented by #{self.class}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          react_and_close(env, body) or [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>        else
      </code></li>
                      
                      <li class="post-context-line"><code>          [status, headers, body]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-25"
                        onclick="toggle(25);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        unless accepts? env
      </code></li>
                      
                      <li class="pre-context-line"><code>          instrument env
      </code></li>
                      
                      <li class="pre-context-line"><code>          result = react env
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="25"
                        onclick="toggle(25);">
                      <li class="context-line" id="context-25"><code>        result or app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-25" onclick="toggle(25);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def react(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result = send(options[:reaction], env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result if (Array === result) &amp;&amp; (result.size == 3)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-26"
                        onclick="toggle(26);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        unless accepts? env
      </code></li>
                      
                      <li class="pre-context-line"><code>          instrument env
      </code></li>
                      
                      <li class="pre-context-line"><code>          result = react env
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="26"
                        onclick="toggle(26);">
                      <li class="context-line" id="context-26"><code>        result or app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-26" onclick="toggle(26);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def react(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result = send(options[:reaction], env)
      </code></li>
                      
                      <li class="post-context-line"><code>        result if (Array === result) &amp;&amp; (result.size == 3)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-protection-3.0.6&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="26"
                        class="pre-context" id="pre-27"
                        onclick="toggle(27);">
                      
                      <li class="pre-context-line"><code>          frame_options = options[:frame_options]
      </code></li>
                      
                      <li class="pre-context-line"><code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str
      </code></li>
                      
                      <li class="pre-context-line"><code>          frame_options.to_str
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="33" class="context" id="27"
                        onclick="toggle(27);">
                      <li class="context-line" id="context-27"><code>        status, headers, body        = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="34" class="post-context"
                        id="post-27" onclick="toggle(27);">
                      
                      <li class="post-context-line"><code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers
      </code></li>
                      
                      <li class="post-context-line"><code>        [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;logger.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="10"
                        class="pre-context" id="pre-28"
                        onclick="toggle(28);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      logger = ::Logger.new(env[RACK_ERRORS])
      </code></li>
                      
                      <li class="pre-context-line"><code>      logger.level = @level
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      env[RACK_LOGGER] = logger
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="17" class="context" id="28"
                        onclick="toggle(28);">
                      <li class="context-line" id="context-28"><code>      @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="18" class="post-context"
                        id="post-28" onclick="toggle(28);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;common_logger.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="31"
                        class="pre-context" id="pre-29"
                        onclick="toggle(29);">
                      
                      <li class="pre-context-line"><code>    # will not be logged, so if exception handling middleware are used,
      </code></li>
                      
                      <li class="pre-context-line"><code>    # they should be loaded after this middleware.  Additionally, because
      </code></li>
                      
                      <li class="pre-context-line"><code>    # the logging happens after the request body has been fully sent, any
      </code></li>
                      
                      <li class="pre-context-line"><code>    # exceptions raised during the sending of the response body will
      </code></li>
                      
                      <li class="pre-context-line"><code>    # cause the request not to be logged.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>      began_at = Utils.clock_time
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="38" class="context" id="29"
                        onclick="toggle(29);">
                      <li class="context-line" id="context-29"><code>      status, headers, body = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="39" class="post-context"
                        id="post-29" onclick="toggle(29);">
                      
                      <li class="post-context-line"><code>      headers = Utils::HeaderHash[headers]
      </code></li>
                      
                      <li class="post-context-line"><code>      body = BodyProxy.new(body) { log(env, status, headers, began_at) }
      </code></li>
                      
                      <li class="post-context-line"><code>      [status, headers, body]
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="254"
                        class="pre-context" id="pre-30"
                        onclick="toggle(30);">
                      
                      <li class="pre-context-line"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    superclass.class_eval do
      </code></li>
                      
                      <li class="pre-context-line"><code>      alias_method :call_without_check, :call unless method_defined? :call_without_check
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="261" class="context" id="30"
                        onclick="toggle(30);">
                      <li class="context-line" id="context-30"><code>        call_without_check(env)</code></li>
                    </ol>
      
                    
                    <ol start="262" class="post-context"
                        id="post-30" onclick="toggle(30);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>  class Error &lt; StandardError # :nodoc:
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="247"
                        class="pre-context" id="pre-31"
                        onclick="toggle(31);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  # Behaves exactly like Rack::CommonLogger with the notable exception that it does nothing,
      </code></li>
                      
                      <li class="pre-context-line"><code>  # if another CommonLogger is already in the middleware chain.
      </code></li>
                      
                      <li class="pre-context-line"><code>  class CommonLogger &lt; Rack::CommonLogger
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="254" class="context" id="31"
                        onclick="toggle(31);">
                      <li class="context-line" id="context-31"><code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super</code></li>
                    </ol>
      
                    
                    <ol start="255" class="post-context"
                        id="post-31" onclick="toggle(31);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    superclass.class_eval do
      </code></li>
                      
                      <li class="post-context-line"><code>      alias_method :call_without_check, :call unless method_defined? :call_without_check
      </code></li>
                      
                      <li class="post-context-line"><code>      def call(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        env[&#x27;sinatra.commonlogger&#x27;] = true
      </code></li>
                      
                      <li class="post-context-line"><code>        call_without_check(env)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="5"
                        class="pre-context" id="pre-32"
                        onclick="toggle(32);">
                      
                      <li class="pre-context-line"><code>  # all other requests unchanged.
      </code></li>
                      
                      <li class="pre-context-line"><code>  class Head
      </code></li>
                      
                      <li class="pre-context-line"><code>    def initialize(app)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @app = app
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="12" class="context" id="32"
                        onclick="toggle(32);">
                      <li class="context-line" id="context-32"><code>      status, headers, body = @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="13" class="post-context"
                        id="post-32" onclick="toggle(32);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      if env[REQUEST_METHOD] == HEAD
      </code></li>
                      
                      <li class="post-context-line"><code>        [
      </code></li>
                      
                      <li class="post-context-line"><code>          status, headers, Rack::BodyProxy.new([]) do
      </code></li>
                      
                      <li class="post-context-line"><code>            body.close if body.respond_to? :close
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        ]
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-2.2.7&#x2F;lib&#x2F;rack&#x2F;method_override.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="17"
                        class="pre-context" id="pre-33"
                        onclick="toggle(33);">
                      
                      <li class="pre-context-line"><code>        method = method_override(env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        if HTTP_METHODS.include?(method)
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[RACK_METHODOVERRIDE_ORIGINAL_METHOD] = env[REQUEST_METHOD]
      </code></li>
                      
                      <li class="pre-context-line"><code>          env[REQUEST_METHOD] = method
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="24" class="context" id="33"
                        onclick="toggle(33);">
                      <li class="context-line" id="context-33"><code>      @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="25" class="post-context"
                        id="post-33" onclick="toggle(33);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def method_override(env)
      </code></li>
                      
                      <li class="post-context-line"><code>      req = Request.new(env)
      </code></li>
                      
                      <li class="post-context-line"><code>      method = method_override_param(req) ||
      </code></li>
                      
                      <li class="post-context-line"><code>        env[HTTP_METHOD_OVERRIDE_HEADER]
      </code></li>
                      
                      <li class="post-context-line"><code>      begin
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="16"
                        class="pre-context" id="pre-34"
                        onclick="toggle(34);">
                      
                      <li class="pre-context-line"><code>    def @@eats_errors.puts(*) end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def initialize(app)
      </code></li>
                      
                      <li class="pre-context-line"><code>      @app = app
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="34"
                        onclick="toggle(34);">
                      <li class="context-line" id="context-34"><code>      @app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-34" onclick="toggle(34);">
                      
                      <li class="post-context-line"><code>    rescue Exception =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>      errors = env[&#x27;rack.errors&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>      env[&#x27;rack.errors&#x27;] = @@eats_errors
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      if prefers_plain_text?(env)
      </code></li>
                      
                      <li class="post-context-line"><code>        content_type = &#x27;text&#x2F;plain&#x27;
      </code></li>
                      
                      <li class="post-context-line"><code>        body = dump_exception(e)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="212"
                        class="pre-context" id="pre-35"
                        onclick="toggle(35);">
                      
                      <li class="pre-context-line"><code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,
      </code></li>
                      
                      <li class="pre-context-line"><code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.
      </code></li>
                      
                      <li class="pre-context-line"><code>  # This middleware will detect an extended body object and will make sure it reaches the
      </code></li>
                      
                      <li class="pre-context-line"><code>  # handler directly. We do this here, so our middleware and middleware set up by the app will
      </code></li>
                      
                      <li class="pre-context-line"><code>  # still be able to run.
      </code></li>
                      
                      <li class="pre-context-line"><code>  class ExtendedRack &lt; Struct.new(:app)
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="219" class="context" id="35"
                        onclick="toggle(35);">
                      <li class="context-line" id="context-35"><code>      result = app.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="220" class="post-context"
                        id="post-35" onclick="toggle(35);">
                      
                      <li class="post-context-line"><code>      callback = env[&#x27;async.callback&#x27;]
      </code></li>
                      
                      <li class="post-context-line"><code>      return result unless callback &amp;&amp; async?(*result)
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      after_response { callback.call result }
      </code></li>
                      
                      <li class="post-context-line"><code>      setup_close(env, *result)
      </code></li>
                      
                      <li class="post-context-line"><code>      throw :async
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="2011"
                        class="pre-context" id="pre-36"
                        onclick="toggle(36);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def helpers
      </code></li>
                      
                      <li class="pre-context-line"><code>      @instance
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="2018" class="context" id="36"
                        onclick="toggle(36);">
                      <li class="context-line" id="context-36"><code>      @stack.call(env)</code></li>
                    </ol>
      
                    
                    <ol start="2019" class="post-context"
                        id="post-36" onclick="toggle(36);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def inspect
      </code></li>
                      
                      <li class="post-context-line"><code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>block in call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1569"
                        class="pre-context" id="pre-37"
                        onclick="toggle(37);">
                      
                      <li class="pre-context-line"><code>        setup_default_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        setup_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder.run app
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1576" class="context" id="37"
                        onclick="toggle(37);">
                      <li class="context-line" id="context-37"><code>        synchronize { prototype.call(env) }</code></li>
                    </ol>
      
                    
                    <ol start="1577" class="post-context"
                        id="post-37" onclick="toggle(37);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
      </code></li>
                      
                      <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
      </code></li>
                      
                      <li class="post-context-line"><code>      def caller_files
      </code></li>
                      
                      <li class="post-context-line"><code>        cleaned_caller(1).flatten
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>synchronize</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1785"
                        class="pre-context" id="pre-38"
                        onclick="toggle(38);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      @@mutex = Mutex.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      def synchronize(&amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        if lock?
      </code></li>
                      
                      <li class="pre-context-line"><code>          @@mutex.synchronize(&amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        else
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1792" class="context" id="38"
                        onclick="toggle(38);">
                      <li class="context-line" id="context-38"><code>          yield</code></li>
                    </ol>
      
                    
                    <ol start="1793" class="post-context"
                        id="post-38" onclick="toggle(38);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # used for deprecation warnings
      </code></li>
                      
                      <li class="post-context-line"><code>      def warn_for_deprecation(message)
      </code></li>
                      
                      <li class="post-context-line"><code>        warn message + &quot;\n\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info framework">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;sinatra-3.0.6&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in
                      <code><strong>call</strong></code>
                  </li>
      
                  <li class="code framework">
                    
                    <ol start="1569"
                        class="pre-context" id="pre-39"
                        onclick="toggle(39);">
                      
                      <li class="pre-context-line"><code>        setup_default_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        setup_middleware builder
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder.run app
      </code></li>
                      
                      <li class="pre-context-line"><code>        builder
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def call(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="1576" class="context" id="39"
                        onclick="toggle(39);">
                      <li class="context-line" id="context-39"><code>        synchronize { prototype.call(env) }</code></li>
                    </ol>
      
                    
                    <ol start="1577" class="post-context"
                        id="post-39" onclick="toggle(39);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Like Kernel#caller but excluding certain magic entries and without
      </code></li>
                      
                      <li class="post-context-line"><code>      # line &#x2F; method information; the resulting array contains filenames only.
      </code></li>
                      
                      <li class="post-context-line"><code>      def caller_files
      </code></li>
                      
                      <li class="post-context-line"><code>        cleaned_caller(1).flatten
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-test-2.1.0&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                      <code><strong>process_request</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="353"
                        class="pre-context" id="pre-40"
                        onclick="toggle(40);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      # Submit the request with the given URI and rack environment to
      </code></li>
                      
                      <li class="pre-context-line"><code>      # the mock session.  Returns and potentially yields the last response.
      </code></li>
                      
                      <li class="pre-context-line"><code>      def process_request(uri, env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        env[&#x27;HTTP_COOKIE&#x27;] ||= cookie_jar.for(uri)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @last_request = Rack::Request.new(env)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="360" class="context" id="40"
                        onclick="toggle(40);">
                      <li class="context-line" id="context-40"><code>        status, headers, body = @app.call(env).to_a</code></li>
                    </ol>
      
                    
                    <ol start="361" class="post-context"
                        id="post-40" onclick="toggle(40);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        @last_response = MockResponse.new(status, headers, body, env[&#x27;rack.errors&#x27;].flush)
      </code></li>
                      
                      <li class="post-context-line"><code>        close_body(body)
      </code></li>
                      
                      <li class="post-context-line"><code>        cookie_jar.merge(last_response.headers[&#x27;set-cookie&#x27;], uri)
      </code></li>
                      
                      <li class="post-context-line"><code>        @after_request.each(&amp;:call)
      </code></li>
                      
                      <li class="post-context-line"><code>        @last_response.finish
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-test-2.1.0&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                      <code><strong>custom_request</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="156"
                        class="pre-context" id="pre-41"
                        onclick="toggle(41);">
                      
                      <li class="pre-context-line"><code>      # Issue a request using the given HTTP verb for the given URI, with optional
      </code></li>
                      
                      <li class="pre-context-line"><code>      # params and rack environment.  Example:
      </code></li>
                      
                      <li class="pre-context-line"><code>      #
      </code></li>
                      
                      <li class="pre-context-line"><code>      #   custom_request &quot;LINK&quot;, &quot;&#x2F;&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>      def custom_request(verb, uri, params = {}, env = {}, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>        uri = parse_uri(uri, env)
      </code></li>
                      
                      <li class="pre-context-line"><code>        env = env_for(uri, env.merge(method: verb.to_s.upcase, params: params))
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="163" class="context" id="41"
                        onclick="toggle(41);">
                      <li class="context-line" id="context-41"><code>        process_request(uri, env, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="164" class="post-context"
                        id="post-41" onclick="toggle(41);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Set a header to be included on all subsequent requests through the
      </code></li>
                      
                      <li class="post-context-line"><code>      # session. Use a value of nil to remove a previously configured header.
      </code></li>
                      
                      <li class="post-context-line"><code>      #
      </code></li>
                      
                      <li class="post-context-line"><code>      # In accordance with the Rack spec, headers will be included in the Rack
      </code></li>
                      
                      <li class="post-context-line"><code>      # environment hash in HTTP_USER_AGENT form.  Example:
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;rack-test-2.1.0&#x2F;lib&#x2F;rack&#x2F;test.rb</code> in
                      <code><strong>get</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="105"
                        class="pre-context" id="pre-42"
                        onclick="toggle(42);">
                      
                      <li class="pre-context-line"><code>        @last_response = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>        clear_cookies
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      %w[get post put patch delete options head].each do |method_name|
      </code></li>
                      
                      <li class="pre-context-line"><code>        class_eval(&lt;&lt;-END, __FILE__, __LINE__+1)
      </code></li>
                      
                      <li class="pre-context-line"><code>          def #{method_name}(uri, params = {}, env = {}, &amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="112" class="context" id="42"
                        onclick="toggle(42);">
                      <li class="context-line" id="context-42"><code>            custom_request(&#x27;#{method_name.upcase}&#x27;, uri, params, env, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="113" class="post-context"
                        id="post-42" onclick="toggle(42);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        END
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # Run a block after the each request completes.
      </code></li>
                      
                      <li class="post-context-line"><code>      def after_request(&amp;block)
      </code></li>
                      
                      <li class="post-context-line"><code>        @after_request &lt;&lt; block
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info app">
                    <code>&#x2F;usr&#x2F;local&#x2F;lib&#x2F;ruby&#x2F;3.3.0&#x2F;forwardable.rb</code> in
                      <code><strong>get</strong></code>
                  </li>
      
                  <li class="code app">
                    
                    <ol start="233"
                        class="pre-context" id="pre-43"
                        onclick="toggle(43);">
                      
                      <li class="pre-context-line"><code>          begin
      </code></li>
                      
                      <li class="pre-context-line"><code>            #{accessor}
      </code></li>
                      
                      <li class="pre-context-line"><code>          end#{method_call}
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end;
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="240" class="context" id="43"
                        onclick="toggle(43);">
                      <li class="context-line" id="context-43"><code>end</code></li>
                    </ol>
      
                    
                    <ol start="241" class="post-context"
                        id="post-43" onclick="toggle(43);">
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code># SingleForwardable can be used to setup delegation at the object level as well.
      </code></li>
                      
                      <li class="post-context-line"><code>#
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer = String.new
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer.extend SingleForwardable        # prepare object for delegation
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer.def_delegator &quot;STDOUT&quot;, &quot;puts&quot;  # add delegation for STDOUT.puts()
      </code></li>
                      
                      <li class="post-context-line"><code>#    printer.puts &quot;Howdy!&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info app">
                    <code>&#x2F;app&#x2F;features&#x2F;step_definitions&#x2F;busqueda_por_titulo_step.rb</code> in
                      <code><strong>block in &lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code app">
                    
                    <ol start="1"
                        class="pre-context" id="pre-44"
                        onclick="toggle(44);">
                      
                      <li class="pre-context-line"><code># Dado
      </code></li>
                      
                      <li class="pre-context-line"><code># =========================================================
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code># Cuando
      </code></li>
                      
                      <li class="pre-context-line"><code># =========================================================
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>Cuando(&#x27;el usuario busca la pelicula {string}&#x27;) do |titulo|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="8" class="context" id="44"
                        onclick="toggle(44);">
                      <li class="context-line" id="context-44"><code>  @response = Faraday.get(&#x27;&#x2F;contenido&#x27;, titulo:, &#x27;Content-Type&#x27; =&gt; &#x27;application&#x2F;json&#x27;)</code></li>
                    </ol>
      
                    
                    <ol start="9" class="post-context"
                        id="post-44" onclick="toggle(44);">
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code># Entonces
      </code></li>
                      
                      <li class="post-context-line"><code># =========================================================
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>Entonces(&#x27;deber√≠a ver la pel√≠cula {string} listada entre las existentes&#x27;) do |titulo|
      </code></li>
                      
                      <li class="post-context-line"><code>  @contenidos = JSON.parse(@response.body)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>instance_exec</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="30"
                        class="pre-context" id="pre-45"
                        onclick="toggle(45);">
                      
                      <li class="pre-context-line"><code>              ari = block.arity
      </code></li>
                      
                      <li class="pre-context-line"><code>              ari = ari &lt; 0 ? &quot;#{ari.abs - 1}+&quot; : ari
      </code></li>
                      
                      <li class="pre-context-line"><code>              s1 = ari == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              s2 = args.length == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              raise ArityMismatchError, &quot;Your block takes #{ari} argument#{s1}, but the Regexp matched #{args.length} argument#{s2}.&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>            end
      </code></li>
                      
                      <li class="pre-context-line"><code>          else
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="37" class="context" id="45"
                        onclick="toggle(45);">
                      <li class="context-line" id="context-45"><code>            world.instance_exec(*args, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="38" class="post-context"
                        id="post-45" onclick="toggle(45);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def self.cucumber_compatible_arity?(args, block)
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity == args.length
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity.negative? &amp;&amp; args.length &gt;= (block.arity.abs - 1)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>block in cucumber_instance_exec_in</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="30"
                        class="pre-context" id="pre-46"
                        onclick="toggle(46);">
                      
                      <li class="pre-context-line"><code>              ari = block.arity
      </code></li>
                      
                      <li class="pre-context-line"><code>              ari = ari &lt; 0 ? &quot;#{ari.abs - 1}+&quot; : ari
      </code></li>
                      
                      <li class="pre-context-line"><code>              s1 = ari == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              s2 = args.length == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>              raise ArityMismatchError, &quot;Your block takes #{ari} argument#{s1}, but the Regexp matched #{args.length} argument#{s2}.&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>            end
      </code></li>
                      
                      <li class="pre-context-line"><code>          else
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="37" class="context" id="46"
                        onclick="toggle(46);">
                      <li class="context-line" id="context-46"><code>            world.instance_exec(*args, &amp;block)</code></li>
                    </ol>
      
                    
                    <ol start="38" class="post-context"
                        id="post-46" onclick="toggle(46);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def self.cucumber_compatible_arity?(args, block)
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity == args.length
      </code></li>
                      
                      <li class="post-context-line"><code>        return true if block.arity.negative? &amp;&amp; args.length &gt;= (block.arity.abs - 1)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>cucumber_run_with_backtrace_filtering</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="43"
                        class="pre-context" id="pre-47"
                        onclick="toggle(47);">
                      
                      <li class="pre-context-line"><code>        return true if block.arity == args.length
      </code></li>
                      
                      <li class="pre-context-line"><code>        return true if block.arity.negative? &amp;&amp; args.length &gt;= (block.arity.abs - 1)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        false
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def self.cucumber_run_with_backtrace_filtering(pseudo_method)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="50" class="context" id="47"
                        onclick="toggle(47);">
                      <li class="context-line" id="context-47"><code>        yield</code></li>
                    </ol>
      
                    
                    <ol start="51" class="post-context"
                        id="post-47" onclick="toggle(47);">
                      
                      <li class="post-context-line"><code>      rescue Exception =&gt; e # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>        instance_exec_invocation_line = &quot;#{__FILE__}:#{__LINE__ - 2}:in `cucumber_run_with_backtrace_filtering&#x27;&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>        replace_instance_exec_invocation_line!((e.backtrace || []), instance_exec_invocation_line, pseudo_method)
      </code></li>
                      
                      <li class="post-context-line"><code>        raise e
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      INSTANCE_EXEC_OFFSET = -3
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;invoke_in_world.rb</code> in
                      <code><strong>cucumber_instance_exec_in</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="20"
                        class="pre-context" id="pre-48"
                        onclick="toggle(48);">
                      
                      <li class="pre-context-line"><code>        end_pos = depth &gt; 1 ? instance_exec_pos : -1
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        backtrace[replacement_line + 1..end_pos] = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>        backtrace.compact!
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def self.cucumber_instance_exec_in(world, check_arity, pseudo_method, *args, &amp;block)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="27" class="context" id="48"
                        onclick="toggle(48);">
                      <li class="context-line" id="context-48"><code>        cucumber_run_with_backtrace_filtering(pseudo_method) do</code></li>
                    </ol>
      
                    
                    <ol start="28" class="post-context"
                        id="post-48" onclick="toggle(48);">
                      
                      <li class="post-context-line"><code>          if check_arity &amp;&amp; !cucumber_compatible_arity?(args, block)
      </code></li>
                      
                      <li class="post-context-line"><code>            world.instance_exec do
      </code></li>
                      
                      <li class="post-context-line"><code>              ari = block.arity
      </code></li>
                      
                      <li class="post-context-line"><code>              ari = ari &lt; 0 ? &quot;#{ari.abs - 1}+&quot; : ari
      </code></li>
                      
                      <li class="post-context-line"><code>              s1 = ari == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="post-context-line"><code>              s2 = args.length == 1 ? &#x27;&#x27; : &#x27;s&#x27;
      </code></li>
                      
                      <li class="post-context-line"><code>              raise ArityMismatchError, &quot;Your block takes #{ari} argument#{s1}, but the Regexp matched #{args.length} argument#{s2}.&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;glue&#x2F;step_definition.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="129"
                        class="pre-context" id="pre-49"
                        onclick="toggle(49);">
                      
                      <li class="pre-context-line"><code>      def arguments_from(step_name)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @expression.match(step_name)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      # @api private
      </code></li>
                      
                      <li class="pre-context-line"><code>      # TODO: inline this and step definition just be a value object
      </code></li>
                      
                      <li class="pre-context-line"><code>      def invoke(args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="136" class="context" id="49"
                        onclick="toggle(49);">
                      <li class="context-line" id="context-49"><code>        InvokeInWorld.cucumber_instance_exec_in(@registry.current_world, true, @expression.to_s, *args, &amp;@proc)</code></li>
                    </ol>
      
                    
                    <ol start="137" class="post-context"
                        id="post-49" onclick="toggle(49);">
                      
                      <li class="post-context-line"><code>      rescue ArityMismatchError =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>        e.backtrace.unshift(backtrace_line)
      </code></li>
                      
                      <li class="post-context-line"><code>        raise e
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      # @api private
      </code></li>
                      
                      <li class="post-context-line"><code>      def backtrace_line
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;step_match.rb</code> in
                      <code><strong>invoke</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="27"
                        class="pre-context" id="pre-50"
                        onclick="toggle(50);">
                      
                      <li class="pre-context-line"><code>        invoke(MultilineArgument.from_core(test_step.multiline_arg))
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke(multiline_arg)
      </code></li>
                      
                      <li class="pre-context-line"><code>      all_args = args
      </code></li>
                      
                      <li class="pre-context-line"><code>      multiline_arg.append_to(all_args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="34" class="context" id="50"
                        onclick="toggle(50);">
                      <li class="context-line" id="context-50"><code>      @step_definition.invoke(all_args)</code></li>
                    </ol>
      
                    
                    <ol start="35" class="post-context"
                        id="post-50" onclick="toggle(50);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # Formats the matched arguments of the associated Step. This method
      </code></li>
                      
                      <li class="post-context-line"><code>    # is usually called from visitors, which render output.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                      <li class="post-context-line"><code>    # The +format+ can either be a String or a Proc.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;step_match.rb</code> in
                      <code><strong>block in activate</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="20"
                        class="pre-context" id="pre-51"
                        onclick="toggle(51);">
                      
                      <li class="pre-context-line"><code>      @step_arguments.map do |arg|
      </code></li>
                      
                      <li class="pre-context-line"><code>        arg.value(current_world)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def activate(test_step)
      </code></li>
                      
                      <li class="pre-context-line"><code>      test_step.with_action(@step_definition.location) do
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="27" class="context" id="51"
                        onclick="toggle(51);">
                      <li class="context-line" id="context-51"><code>        invoke(MultilineArgument.from_core(test_step.multiline_arg))</code></li>
                    </ol>
      
                    
                    <ol start="28" class="post-context"
                        id="post-51" onclick="toggle(51);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def invoke(multiline_arg)
      </code></li>
                      
                      <li class="post-context-line"><code>      all_args = args
      </code></li>
                      
                      <li class="post-context-line"><code>      multiline_arg.append_to(all_args)
      </code></li>
                      
                      <li class="post-context-line"><code>      @step_definition.invoke(all_args)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;action.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-52"
                        onclick="toggle(52);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def skip(*)
      </code></li>
                      
                      <li class="pre-context-line"><code>          skipped
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def execute(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @timer.start
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="52"
                        onclick="toggle(52);">
                      <li class="context-line" id="context-52"><code>          @block.call(*args)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-52" onclick="toggle(52);">
                      
                      <li class="post-context-line"><code>          passed
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Result::Raisable =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          exception.with_duration(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Exception =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          failed(exception)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;step.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="28"
                        class="pre-context" id="pre-53"
                        onclick="toggle(53);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def skip(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @action.skip(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def execute(*args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="35" class="context" id="53"
                        onclick="toggle(53);">
                      <li class="context-line" id="context-53"><code>          @action.execute(*args)</code></li>
                    </ol>
      
                    
                    <ol start="36" class="post-context"
                        id="post-53" onclick="toggle(53);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def with_action(action_location = nil, &amp;block)
      </code></li>
                      
                      <li class="post-context-line"><code>          self.class.new(id, text, location, multiline_arg, Test::Action.new(action_location, &amp;block))
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def backtrace_line
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="99"
                        class="pre-context" id="pre-54"
                        onclick="toggle(54);">
                      
                      <li class="pre-context-line"><code>              private :step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def initialize(step_result)
      </code></li>
                      
                      <li class="pre-context-line"><code>                @step_result = step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>              end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def execute(test_step, monitor, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="106" class="context" id="54"
                        onclick="toggle(54);">
                      <li class="context-line" id="context-54"><code>                result = test_step.execute(monitor.result, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="107" class="post-context"
                        id="post-54" onclick="toggle(54);">
                      
                      <li class="post-context-line"><code>                result = result.with_message(%(Undefined step: &quot;#{test_step.text}&quot;)) if result.undefined?
      </code></li>
                      
                      <li class="post-context-line"><code>                result = result.with_appended_backtrace(test_step) unless test_step.hook?
      </code></li>
                      
                      <li class="post-context-line"><code>                result.describe_to(monitor, result)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>              def result
      </code></li>
                      
                      <li class="post-context-line"><code>                raise NoMethodError, &quot;Override me&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-55"
                        onclick="toggle(55);">
                      
                      <li class="pre-context-line"><code>        class RunningTestCase
      </code></li>
                      
                      <li class="pre-context-line"><code>          def initialize
      </code></li>
                      
                      <li class="pre-context-line"><code>            @timer = Timer.new.start
      </code></li>
                      
                      <li class="pre-context-line"><code>            @status = Status::Unknown.new(Result::Unknown.new)
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def execute(test_step, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="55"
                        onclick="toggle(55);">
                      <li class="context-line" id="context-55"><code>            status.execute(test_step, self, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-55" onclick="toggle(55);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def result
      </code></li>
                      
                      <li class="post-context-line"><code>            status.result(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def failed(step_result)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>test_step</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="22"
                        class="pre-context" id="pre-56"
                        onclick="toggle(56);">
                      
                      <li class="pre-context-line"><code>          event_bus.test_case_finished(test_case, result)
      </code></li>
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def test_step(test_step)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_step = test_step
      </code></li>
                      
                      <li class="pre-context-line"><code>          event_bus.test_step_started test_step
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="29" class="context" id="56"
                        onclick="toggle(56);">
                      <li class="context-line" id="context-56"><code>          step_result = running_test_case.execute(test_step)</code></li>
                    </ol>
      
                    
                    <ol start="30" class="post-context"
                        id="post-56" onclick="toggle(56);">
                      
                      <li class="post-context-line"><code>          event_bus.test_step_finished test_step, step_result
      </code></li>
                      
                      <li class="post-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def around_hook(hook, &amp;continue)
      </code></li>
                      
                      <li class="post-context-line"><code>          result = running_test_case.execute(hook, &amp;continue)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;step.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-57"
                        onclick="toggle(57);">
                      
                      <li class="pre-context-line"><code>          @text = text
      </code></li>
                      
                      <li class="pre-context-line"><code>          @location = location
      </code></li>
                      
                      <li class="pre-context-line"><code>          @multiline_arg = multiline_arg
      </code></li>
                      
                      <li class="pre-context-line"><code>          @action = action
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="57"
                        onclick="toggle(57);">
                      <li class="context-line" id="context-57"><code>          visitor.test_step(self, *args)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-57" onclick="toggle(57);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def hook?
      </code></li>
                      
                      <li class="post-context-line"><code>          false
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def skip(*args)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block (3 levels) in describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="24"
                        class="pre-context" id="pre-58"
                        onclick="toggle(58);">
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                      <li class="pre-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="pre-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="31" class="context" id="58"
                        onclick="toggle(58);">
                      <li class="context-line" id="context-58"><code>                test_step.describe_to(child_visitor, *args)</code></li>
                    </ol>
      
                    
                    <ol start="32" class="post-context"
                        id="post-58" onclick="toggle(58);">
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def with_steps(test_steps)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>each</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="23"
                        class="pre-context" id="pre-59"
                        onclick="toggle(59);">
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                      <li class="pre-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="30" class="context" id="59"
                        onclick="toggle(59);">
                      <li class="context-line" id="context-59"><code>              test_steps.each do |test_step|</code></li>
                    </ol>
      
                    
                    <ol start="31" class="post-context"
                        id="post-59" onclick="toggle(59);">
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block (2 levels) in describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="23"
                        class="pre-context" id="pre-60"
                        onclick="toggle(60);">
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                      <li class="pre-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="30" class="context" id="60"
                        onclick="toggle(60);">
                      <li class="context-line" id="context-60"><code>              test_steps.each do |test_step|</code></li>
                    </ol>
      
                    
                    <ol start="31" class="post-context"
                        id="post-60" onclick="toggle(60);">
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;prepare_world.rb</code> in
                      <code><strong>block in test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-61"
                        onclick="toggle(61);">
                      
                      <li class="pre-context-line"><code>          @runtime = runtime
      </code></li>
                      
                      <li class="pre-context-line"><code>          @original_test_case = original_test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>          init_scenario = Cucumber::Hooks.around_hook do |continue|
      </code></li>
                      
                      <li class="pre-context-line"><code>            @runtime.begin_scenario(scenario)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="61"
                        onclick="toggle(61);">
                      <li class="context-line" id="context-61"><code>            continue.call</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-61" onclick="toggle(61);">
                      
                      <li class="post-context-line"><code>            @runtime.end_scenario(scenario)
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          around_hooks = [init_scenario] + @original_test_case.around_hooks
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          @original_test_case.with_around_hooks(around_hooks).with_steps(@original_test_case.test_steps)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;around_hook.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="14"
                        class="pre-context" id="pre-62"
                        onclick="toggle(62);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def hook?
      </code></li>
                      
                      <li class="pre-context-line"><code>          true
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def execute(*args, &amp;continue)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @timer.start
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="21" class="context" id="62"
                        onclick="toggle(62);">
                      <li class="context-line" id="context-62"><code>          @block.call(continue)</code></li>
                    </ol>
      
                    
                    <ol start="22" class="post-context"
                        id="post-62" onclick="toggle(62);">
                      
                      <li class="post-context-line"><code>          Result::Unknown.new # Around hook does not know the result of the inner test steps
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Result::Raisable =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          exception.with_duration(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>        rescue Exception =&gt; exception
      </code></li>
                      
                      <li class="post-context-line"><code>          failed(exception)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="99"
                        class="pre-context" id="pre-63"
                        onclick="toggle(63);">
                      
                      <li class="pre-context-line"><code>              private :step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def initialize(step_result)
      </code></li>
                      
                      <li class="pre-context-line"><code>                @step_result = step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>              end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>              def execute(test_step, monitor, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="106" class="context" id="63"
                        onclick="toggle(63);">
                      <li class="context-line" id="context-63"><code>                result = test_step.execute(monitor.result, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="107" class="post-context"
                        id="post-63" onclick="toggle(63);">
                      
                      <li class="post-context-line"><code>                result = result.with_message(%(Undefined step: &quot;#{test_step.text}&quot;)) if result.undefined?
      </code></li>
                      
                      <li class="post-context-line"><code>                result = result.with_appended_backtrace(test_step) unless test_step.hook?
      </code></li>
                      
                      <li class="post-context-line"><code>                result.describe_to(monitor, result)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>              def result
      </code></li>
                      
                      <li class="post-context-line"><code>                raise NoMethodError, &quot;Override me&quot;
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>execute</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="46"
                        class="pre-context" id="pre-64"
                        onclick="toggle(64);">
                      
                      <li class="pre-context-line"><code>        class RunningTestCase
      </code></li>
                      
                      <li class="pre-context-line"><code>          def initialize
      </code></li>
                      
                      <li class="pre-context-line"><code>            @timer = Timer.new.start
      </code></li>
                      
                      <li class="pre-context-line"><code>            @status = Status::Unknown.new(Result::Unknown.new)
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def execute(test_step, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="53" class="context" id="64"
                        onclick="toggle(64);">
                      <li class="context-line" id="context-64"><code>            status.execute(test_step, self, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="54" class="post-context"
                        id="post-64" onclick="toggle(64);">
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def result
      </code></li>
                      
                      <li class="post-context-line"><code>            status.result(@timer.duration)
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def failed(step_result)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>around_hook</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="29"
                        class="pre-context" id="pre-65"
                        onclick="toggle(65);">
                      
                      <li class="pre-context-line"><code>          step_result = running_test_case.execute(test_step)
      </code></li>
                      
                      <li class="pre-context-line"><code>          event_bus.test_step_finished test_step, step_result
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def around_hook(hook, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="36" class="context" id="65"
                        onclick="toggle(65);">
                      <li class="context-line" id="context-65"><code>          result = running_test_case.execute(hook, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="37" class="post-context"
                        id="post-65" onclick="toggle(65);">
                      
                      <li class="post-context-line"><code>          event_bus.test_step_finished running_test_step, result if running_test_step
      </code></li>
                      
                      <li class="post-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def done
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;around_hook.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="5"
                        class="pre-context" id="pre-66"
                        onclick="toggle(66);">
                      
                      <li class="pre-context-line"><code>      class AroundHook
      </code></li>
                      
                      <li class="pre-context-line"><code>        def initialize(&amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @block = block
      </code></li>
                      
                      <li class="pre-context-line"><code>          @timer = Timer.new
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args, &amp;continue)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="12" class="context" id="66"
                        onclick="toggle(66);">
                      <li class="context-line" id="context-66"><code>          visitor.around_hook(self, *args, &amp;continue)</code></li>
                    </ol>
      
                    
                    <ol start="13" class="post-context"
                        id="post-66" onclick="toggle(66);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def hook?
      </code></li>
                      
                      <li class="post-context-line"><code>          true
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def execute(*args, &amp;continue)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block (2 levels) in compose_around_hooks</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="73"
                        class="pre-context" id="pre-67"
                        onclick="toggle(67);">
                      
                      <li class="pre-context-line"><code>          eql?(other)
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        private
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def compose_around_hooks(visitor, *args, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>          around_hooks.reverse.reduce(block) do |continue, hook|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="80" class="context" id="67"
                        onclick="toggle(67);">
                      <li class="context-line" id="context-67"><code>            -&gt; { hook.describe_to(visitor, *args, &amp;continue) }</code></li>
                    </ol>
      
                    
                    <ol start="81" class="post-context"
                        id="post-67" onclick="toggle(67);">
                      
                      <li class="post-context-line"><code>          end.call
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def match_single_tag_expression?(expression)
      </code></li>
                      
                      <li class="post-context-line"><code>          Cucumber::TagExpressions::Parser.new.parse(expression).evaluate(tags.map(&amp;:name))
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>compose_around_hooks</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="74"
                        class="pre-context" id="pre-68"
                        onclick="toggle(68);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        private
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def compose_around_hooks(visitor, *args, &amp;block)
      </code></li>
                      
                      <li class="pre-context-line"><code>          around_hooks.reverse.reduce(block) do |continue, hook|
      </code></li>
                      
                      <li class="pre-context-line"><code>            -&gt; { hook.describe_to(visitor, *args, &amp;continue) }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="81" class="context" id="68"
                        onclick="toggle(68);">
                      <li class="context-line" id="context-68"><code>          end.call</code></li>
                    </ol>
      
                    
                    <ol start="82" class="post-context"
                        id="post-68" onclick="toggle(68);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def match_single_tag_expression?(expression)
      </code></li>
                      
                      <li class="post-context-line"><code>          Cucumber::TagExpressions::Parser.new.parse(expression).evaluate(tags.map(&amp;:name))
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>block in describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="22"
                        class="pre-context" id="pre-69"
                        onclick="toggle(69);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>          visitor.test_case(self, *args) do |child_visitor|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="29" class="context" id="69"
                        onclick="toggle(69);">
                      <li class="context-line" id="context-69"><code>            compose_around_hooks(child_visitor, *args) do</code></li>
                    </ol>
      
                    
                    <ol start="30" class="post-context"
                        id="post-69" onclick="toggle(69);">
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;runner.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="12"
                        class="pre-context" id="pre-70"
                        onclick="toggle(70);">
                      
                      <li class="pre-context-line"><code>          @event_bus = event_bus
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def test_case(test_case, &amp;descend)
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_case = RunningTestCase.new
      </code></li>
                      
                      <li class="pre-context-line"><code>          @running_test_step = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>          event_bus.test_case_started(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="19" class="context" id="70"
                        onclick="toggle(70);">
                      <li class="context-line" id="context-70"><code>          descend.call(self)</code></li>
                    </ol>
      
                    
                    <ol start="20" class="post-context"
                        id="post-70" onclick="toggle(70);">
                      
                      <li class="post-context-line"><code>          result = running_test_case.result
      </code></li>
                      
                      <li class="post-context-line"><code>          result = Result::Undefined.new(&#x27;The test case has no steps&#x27;, Result::UnknownDuration.new, [&quot;#{test_case.location}:in `#{test_case.name}&#x27;&quot;]) if result.unknown?
      </code></li>
                      
                      <li class="post-context-line"><code>          event_bus.test_case_finished(test_case, result)
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def test_step(test_step)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-71"
                        onclick="toggle(71);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="71"
                        onclick="toggle(71);">
                      <li class="context-line" id="context-71"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-71" onclick="toggle(71);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;prepare_world.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="4"
                        class="pre-context" id="pre-72"
                        onclick="toggle(72);">
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;core&#x2F;test&#x2F;location&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;running_test_case&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>module Cucumber
      </code></li>
                      
                      <li class="pre-context-line"><code>  module Filters
      </code></li>
                      
                      <li class="pre-context-line"><code>    class PrepareWorld &lt; Core::Filter.new(:runtime)
      </code></li>
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="11" class="context" id="72"
                        onclick="toggle(72);">
                      <li class="context-line" id="context-72"><code>        CaseFilter.new(runtime, test_case).test_case.describe_to receiver</code></li>
                    </ol>
      
                    
                    <ol start="12" class="post-context"
                        id="post-72" onclick="toggle(72);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      class CaseFilter
      </code></li>
                      
                      <li class="post-context-line"><code>        def initialize(runtime, original_test_case)
      </code></li>
                      
                      <li class="post-context-line"><code>          @runtime = runtime
      </code></li>
                      
                      <li class="post-context-line"><code>          @original_test_case = original_test_case
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-73"
                        onclick="toggle(73);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="73"
                        onclick="toggle(73);">
                      <li class="context-line" id="context-73"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-73" onclick="toggle(73);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="50"
                        class="pre-context" id="pre-74"
                        onclick="toggle(74);">
                      
                      <li class="pre-context-line"><code>          define_method(:initialize) do |*args|
      </code></li>
                      
                      <li class="pre-context-line"><code>            attributes.zip(args) do |name, value|
      </code></li>
                      
                      <li class="pre-context-line"><code>              instance_variable_set(&quot;@#{name}&quot;.to_sym, value)
      </code></li>
                      
                      <li class="pre-context-line"><code>            end
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="57" class="context" id="74"
                        onclick="toggle(74);">
                      <li class="context-line" id="context-74"><code>            test_case.describe_to receiver</code></li>
                    </ol>
      
                    
                    <ol start="58" class="post-context"
                        id="post-74" onclick="toggle(74);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          def done
      </code></li>
                      
                      <li class="post-context-line"><code>            receiver.done
      </code></li>
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;retry.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="11"
                        class="pre-context" id="pre-75"
                        onclick="toggle(75);">
                      
                      <li class="pre-context-line"><code>        configuration.on_event(:test_case_finished) do |event|
      </code></li>
                      
                      <li class="pre-context-line"><code>          next unless retry_required?(test_case, event)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_case_counts[test_case] += 1
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_case.describe_to(receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="18" class="context" id="75"
                        onclick="toggle(75);">
                      <li class="context-line" id="context-75"><code>        super</code></li>
                    </ol>
      
                    
                    <ol start="19" class="post-context"
                        id="post-75" onclick="toggle(75);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def retry_required?(test_case, event)
      </code></li>
                      
                      <li class="post-context-line"><code>        event.test_case == test_case &amp;&amp; event.result.failed? &amp;&amp; test_case_counts[test_case] &lt; configuration.retry_attempts
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-76"
                        onclick="toggle(76);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="76"
                        onclick="toggle(76);">
                      <li class="context-line" id="context-76"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-76" onclick="toggle(76);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;quit.rb</code> in
                      <code><strong>test_case</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="4"
                        class="pre-context" id="pre-77"
                        onclick="toggle(77);">
                      
                      <li class="pre-context-line"><code>  module Filters
      </code></li>
                      
                      <li class="pre-context-line"><code>    class Quit
      </code></li>
                      
                      <li class="pre-context-line"><code>      def initialize(receiver = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @receiver = receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="11" class="context" id="77"
                        onclick="toggle(77);">
                      <li class="context-line" id="context-77"><code>        test_case.describe_to @receiver unless Cucumber.wants_to_quit</code></li>
                    </ol>
      
                    
                    <ol start="12" class="post-context"
                        id="post-77" onclick="toggle(77);">
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def done
      </code></li>
                      
                      <li class="post-context-line"><code>        @receiver.done
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;case.rb</code> in
                      <code><strong>describe_to</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-78"
                        onclick="toggle(78);">
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def step_count
      </code></li>
                      
                      <li class="pre-context-line"><code>          test_steps.count
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def describe_to(visitor, *args)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="78"
                        onclick="toggle(78);">
                      <li class="context-line" id="context-78"><code>          visitor.test_case(self, *args) do |child_visitor|</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-78" onclick="toggle(78);">
                      
                      <li class="post-context-line"><code>            compose_around_hooks(child_visitor, *args) do
      </code></li>
                      
                      <li class="post-context-line"><code>              test_steps.each do |test_step|
      </code></li>
                      
                      <li class="post-context-line"><code>                test_step.describe_to(child_visitor, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>              end
      </code></li>
                      
                      <li class="post-context-line"><code>            end
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;broadcast_test_run_started_event.rb</code> in
                      <code><strong>block in done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="14"
                        class="pre-context" id="pre-79"
                        onclick="toggle(79);">
                      
                      <li class="pre-context-line"><code>        @test_cases &lt;&lt; test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        self
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                      <li class="pre-context-line"><code>        config.notify :test_run_started, @test_cases
      </code></li>
                      
                      <li class="pre-context-line"><code>        @test_cases.map do |test_case|
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="21" class="context" id="79"
                        onclick="toggle(79);">
                      <li class="context-line" id="context-79"><code>          test_case.describe_to(@receiver)</code></li>
                    </ol>
      
                    
                    <ol start="22" class="post-context"
                        id="post-79" onclick="toggle(79);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        super
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;broadcast_test_run_started_event.rb</code> in
                      <code><strong>map</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-80"
                        onclick="toggle(80);">
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @test_cases &lt;&lt; test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        self
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                      <li class="pre-context-line"><code>        config.notify :test_run_started, @test_cases
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="80"
                        onclick="toggle(80);">
                      <li class="context-line" id="context-80"><code>        @test_cases.map do |test_case|</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-80" onclick="toggle(80);">
                      
                      <li class="post-context-line"><code>          test_case.describe_to(@receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        super
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;filters&#x2F;broadcast_test_run_started_event.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-81"
                        onclick="toggle(81);">
                      
                      <li class="pre-context-line"><code>      def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>        @test_cases &lt;&lt; test_case
      </code></li>
                      
                      <li class="pre-context-line"><code>        self
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                      <li class="pre-context-line"><code>        config.notify :test_run_started, @test_cases
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="81"
                        onclick="toggle(81);">
                      <li class="context-line" id="context-81"><code>        @test_cases.map do |test_case|</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-81" onclick="toggle(81);">
                      
                      <li class="post-context-line"><code>          test_case.describe_to(@receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        super
      </code></li>
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-82"
                        onclick="toggle(82);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="82"
                        onclick="toggle(82);">
                      <li class="context-line" id="context-82"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-82" onclick="toggle(82);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-83"
                        onclick="toggle(83);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="83"
                        onclick="toggle(83);">
                      <li class="context-line" id="context-83"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-83" onclick="toggle(83);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-84"
                        onclick="toggle(84);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="84"
                        onclick="toggle(84);">
                      <li class="context-line" id="context-84"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-84" onclick="toggle(84);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-85"
                        onclick="toggle(85);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="85"
                        onclick="toggle(85);">
                      <li class="context-line" id="context-85"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-85" onclick="toggle(85);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-86"
                        onclick="toggle(86);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="86"
                        onclick="toggle(86);">
                      <li class="context-line" id="context-86"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-86" onclick="toggle(86);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-87"
                        onclick="toggle(87);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="87"
                        onclick="toggle(87);">
                      <li class="context-line" id="context-87"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-87" onclick="toggle(87);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;filters&#x2F;locations_filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="13"
                        class="pre-context" id="pre-88"
                        onclick="toggle(88);">
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def done
      </code></li>
                      
                      <li class="pre-context-line"><code>          sorted_test_cases.each do |test_case|
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="20" class="context" id="88"
                        onclick="toggle(88);">
                      <li class="context-line" id="context-88"><code>          receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="21" class="post-context"
                        id="post-88" onclick="toggle(88);">
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def sorted_test_cases
      </code></li>
                      
                      <li class="post-context-line"><code>          filter_locations.map { |filter_location|
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="55"
                        class="pre-context" id="pre-89"
                        onclick="toggle(89);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def test_case(test_case)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to receiver
      </code></li>
                      
                      <li class="pre-context-line"><code>            self
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>          def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="62" class="context" id="89"
                        onclick="toggle(89);">
                      <li class="context-line" id="context-89"><code>            receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="63" class="post-context"
                        id="post-89" onclick="toggle(89);">
                      
                      <li class="post-context-line"><code>            self
      </code></li>
                      
                      <li class="post-context-line"><code>          end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>          define_method(:with_receiver) do |new_receiver|
      </code></li>
                      
                      <li class="post-context-line"><code>            args = attributes.map { |name|
      </code></li>
                      
                      <li class="post-context-line"><code>              instance_variable_get(&quot;@#{name}&quot;.to_sym)
      </code></li>
                      
                      <li class="post-context-line"><code>            }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;test&#x2F;filters&#x2F;tag_filter.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="11"
                        class="pre-context" id="pre-90"
                        onclick="toggle(90);">
                      
                      <li class="pre-context-line"><code>          if test_case.match_tags?(filter_expressions)
      </code></li>
                      
                      <li class="pre-context-line"><code>            test_case.describe_to(receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>          end
      </code></li>
                      
                      <li class="pre-context-line"><code>          self
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="18" class="context" id="90"
                        onclick="toggle(90);">
                      <li class="context-line" id="context-90"><code>          receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="19" class="post-context"
                        id="post-90" onclick="toggle(90);">
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>        def test_cases
      </code></li>
                      
                      <li class="post-context-line"><code>          @test_cases ||= TestCases.new
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;compiler.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="24"
                        class="pre-context" id="pre-91"
                        onclick="toggle(91);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def pickle(pickle)
      </code></li>
                      
                      <li class="pre-context-line"><code>        test_case = create_test_case(pickle)
      </code></li>
                      
                      <li class="pre-context-line"><code>        test_case.describe_to(receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="31" class="context" id="91"
                        onclick="toggle(91);">
                      <li class="context-line" id="context-91"><code>        receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="32" class="post-context"
                        id="post-91" onclick="toggle(91);">
                      
                      <li class="post-context-line"><code>        self
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      def create_test_case(pickle)
      </code></li>
                      
                      <li class="post-context-line"><code>        uri = pickle.uri
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core&#x2F;gherkin&#x2F;parser.rb</code> in
                      <code><strong>done</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="39"
                        class="pre-context" id="pre-92"
                        onclick="toggle(92);">
                      
                      <li class="pre-context-line"><code>            include_source: false,
      </code></li>
                      
                      <li class="pre-context-line"><code>            include_gherkin_document: true,
      </code></li>
                      
                      <li class="pre-context-line"><code>            include_pickles: true
      </code></li>
                      
                      <li class="pre-context-line"><code>          }
      </code></li>
                      
                      <li class="pre-context-line"><code>        end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        def done
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="46" class="context" id="92"
                        onclick="toggle(92);">
                      <li class="context-line" id="context-92"><code>          receiver.done</code></li>
                    </ol>
      
                    
                    <ol start="47" class="post-context"
                        id="post-92" onclick="toggle(92);">
                      
                      <li class="post-context-line"><code>          self
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core.rb</code> in
                      <code><strong>parse</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="28"
                        class="pre-context" id="pre-93"
                        onclick="toggle(93);">
                      
                      <li class="pre-context-line"><code>    private
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def parse(gherkin_documents, compiler, event_bus, gherkin_query)
      </code></li>
                      
                      <li class="pre-context-line"><code>      parser = Core::Gherkin::Parser.new(compiler, event_bus, gherkin_query)
      </code></li>
                      
                      <li class="pre-context-line"><code>      gherkin_documents.each do |document|
      </code></li>
                      
                      <li class="pre-context-line"><code>        parser.document document
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="35" class="context" id="93"
                        onclick="toggle(93);">
                      <li class="context-line" id="context-93"><code>      parser.done</code></li>
                    </ol>
      
                    
                    <ol start="36" class="post-context"
                        id="post-93" onclick="toggle(93);">
                      
                      <li class="post-context-line"><code>      self
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def compose(filters, last_receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>      filters.reverse.reduce(last_receiver) do |receiver, filter|
      </code></li>
                      
                      <li class="post-context-line"><code>        filter.with_receiver(receiver)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-core-11.0.0&#x2F;lib&#x2F;cucumber&#x2F;core.rb</code> in
                      <code><strong>compile</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="17"
                        class="pre-context" id="pre-94"
                        onclick="toggle(94);">
                      
                      <li class="pre-context-line"><code>      self
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def compile(gherkin_documents, last_receiver, filters = [], event_bus = EventBus.new)
      </code></li>
                      
                      <li class="pre-context-line"><code>      first_receiver = compose(filters, last_receiver)
      </code></li>
                      
                      <li class="pre-context-line"><code>      gherkin_query = ::Gherkin::Query.new
      </code></li>
                      
                      <li class="pre-context-line"><code>      compiler = Compiler.new(first_receiver, gherkin_query, event_bus)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="24" class="context" id="94"
                        onclick="toggle(94);">
                      <li class="context-line" id="context-94"><code>      parse gherkin_documents, compiler, event_bus, gherkin_query</code></li>
                    </ol>
      
                    
                    <ol start="25" class="post-context"
                        id="post-94" onclick="toggle(94);">
                      
                      <li class="post-context-line"><code>      self
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    private
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def parse(gherkin_documents, compiler, event_bus, gherkin_query)
      </code></li>
                      
                      <li class="post-context-line"><code>      parser = Core::Gherkin::Parser.new(compiler, event_bus, gherkin_query)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;runtime.rb</code> in
                      <code><strong>run!</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="74"
                        class="pre-context" id="pre-95"
                        onclick="toggle(95);">
                      
                      <li class="pre-context-line"><code>      load_step_definitions
      </code></li>
                      
                      <li class="pre-context-line"><code>      fire_install_plugin_hook
      </code></li>
                      
                      <li class="pre-context-line"><code>      fire_before_all_hook unless dry_run?
      </code></li>
                      
                      <li class="pre-context-line"><code>      # TODO: can we remove this state?
      </code></li>
                      
                      <li class="pre-context-line"><code>      self.visitor = report
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      receiver = Test::Runner.new(@configuration.event_bus)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="81" class="context" id="95"
                        onclick="toggle(95);">
                      <li class="context-line" id="context-95"><code>      compile features, receiver, filters, @configuration.event_bus</code></li>
                    </ol>
      
                    
                    <ol start="82" class="post-context"
                        id="post-95" onclick="toggle(95);">
                      
                      <li class="post-context-line"><code>      @configuration.notify :test_run_finished, !failure?
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>      fire_after_all_hook unless dry_run?
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def features_paths
      </code></li>
                      
                      <li class="post-context-line"><code>      @configuration.paths
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;lib&#x2F;cucumber&#x2F;cli&#x2F;main.rb</code> in
                      <code><strong>execute!</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="22"
                        class="pre-context" id="pre-96"
                        onclick="toggle(96);">
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      def execute!(existing_runtime = nil)
      </code></li>
                      
                      <li class="pre-context-line"><code>        trap_interrupt
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>        runtime = runtime(existing_runtime)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="29" class="context" id="96"
                        onclick="toggle(96);">
                      <li class="context-line" id="context-96"><code>        runtime.run!</code></li>
                    </ol>
      
                    
                    <ol start="30" class="post-context"
                        id="post-96" onclick="toggle(96);">
                      
                      <li class="post-context-line"><code>        if Cucumber.wants_to_quit
      </code></li>
                      
                      <li class="post-context-line"><code>          exit_unable_to_finish
      </code></li>
                      
                      <li class="post-context-line"><code>        elsif runtime.failure?
      </code></li>
                      
                      <li class="post-context-line"><code>          exit_tests_failed
      </code></li>
                      
                      <li class="post-context-line"><code>        else
      </code></li>
                      
                      <li class="post-context-line"><code>          exit_ok
      </code></li>
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;cucumber-8.0.0&#x2F;bin&#x2F;cucumber</code> in
                      <code><strong>&lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="2"
                        class="pre-context" id="pre-97"
                        onclick="toggle(97);">
                      
                      <li class="pre-context-line"><code>file_name = File.dirname(__FILE__) + &#x27;&#x2F;..&#x2F;lib&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>$LOAD_PATH.unshift(file_name) unless $LOAD_PATH.include?(file_name)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;simplecov_setup&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;rspec&#x2F;disable_option_parser&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code>require &#x27;cucumber&#x2F;cli&#x2F;main&#x27;
      </code></li>
                      
                      <li class="pre-context-line"><code># The dup is to keep ARGV intact, so that tools like ruby-debug can respawn.
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="9" class="context" id="97"
                        onclick="toggle(97);">
                      <li class="context-line" id="context-97"><code>Cucumber::Cli::Main.new(ARGV.dup).execute!</code></li>
                    </ol>
      
                    
                    <ol start="10" class="post-context"
                        id="post-97" onclick="toggle(97);">
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;cucumber</code> in
                      <code><strong>load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-98"
                        onclick="toggle(98);">
                      
                      <li class="pre-context-line"><code>  if str and Gem::Version.correct?(str)
      </code></li>
                      
                      <li class="pre-context-line"><code>    version = str
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="98"
                        onclick="toggle(98);">
                      <li class="context-line" id="context-98"><code>load Gem.activate_bin_path(&#x27;cucumber&#x27;, &#x27;cucumber&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-98" onclick="toggle(98);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;cucumber&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;cucumber&quot;, &quot;cucumber&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;cucumber</code> in
                      <code><strong>&lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-99"
                        onclick="toggle(99);">
                      
                      <li class="pre-context-line"><code>  if str and Gem::Version.correct?(str)
      </code></li>
                      
                      <li class="pre-context-line"><code>    version = str
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="99"
                        onclick="toggle(99);">
                      <li class="context-line" id="context-99"><code>load Gem.activate_bin_path(&#x27;cucumber&#x27;, &#x27;cucumber&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-99" onclick="toggle(99);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;cucumber&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;cucumber&quot;, &quot;cucumber&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli&#x2F;exec.rb</code> in
                      <code><strong>load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="51"
                        class="pre-context" id="pre-100"
                        onclick="toggle(100);">
                      
                      <li class="pre-context-line"><code>    def kernel_load(file, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      args.pop if args.last.is_a?(Hash)
      </code></li>
                      
                      <li class="pre-context-line"><code>      ARGV.replace(args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      $0 = file
      </code></li>
                      
                      <li class="pre-context-line"><code>      Process.setproctitle(process_title(file, args)) if Process.respond_to?(:setproctitle)
      </code></li>
                      
                      <li class="pre-context-line"><code>      require_relative &quot;..&#x2F;setup&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>      TRAPPED_SIGNALS.each {|s| trap(s, &quot;DEFAULT&quot;) }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="58" class="context" id="100"
                        onclick="toggle(100);">
                      <li class="context-line" id="context-100"><code>      Kernel.load(file)</code></li>
                    </ol>
      
                    
                    <ol start="59" class="post-context"
                        id="post-100" onclick="toggle(100);">
                      
                      <li class="post-context-line"><code>    rescue SystemExit, SignalException
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue Exception # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler.ui.error &quot;bundler: failed to load command: #{cmd} (#{file})&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler::FriendlyErrors.disable!
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli&#x2F;exec.rb</code> in
                      <code><strong>kernel_load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="51"
                        class="pre-context" id="pre-101"
                        onclick="toggle(101);">
                      
                      <li class="pre-context-line"><code>    def kernel_load(file, *args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      args.pop if args.last.is_a?(Hash)
      </code></li>
                      
                      <li class="pre-context-line"><code>      ARGV.replace(args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      $0 = file
      </code></li>
                      
                      <li class="pre-context-line"><code>      Process.setproctitle(process_title(file, args)) if Process.respond_to?(:setproctitle)
      </code></li>
                      
                      <li class="pre-context-line"><code>      require_relative &quot;..&#x2F;setup&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>      TRAPPED_SIGNALS.each {|s| trap(s, &quot;DEFAULT&quot;) }
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="58" class="context" id="101"
                        onclick="toggle(101);">
                      <li class="context-line" id="context-101"><code>      Kernel.load(file)</code></li>
                    </ol>
      
                    
                    <ol start="59" class="post-context"
                        id="post-101" onclick="toggle(101);">
                      
                      <li class="post-context-line"><code>    rescue SystemExit, SignalException
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue Exception # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler.ui.error &quot;bundler: failed to load command: #{cmd} (#{file})&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler::FriendlyErrors.disable!
      </code></li>
                      
                      <li class="post-context-line"><code>      raise
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli&#x2F;exec.rb</code> in
                      <code><strong>run</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="16"
                        class="pre-context" id="pre-102"
                        onclick="toggle(102);">
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def run
      </code></li>
                      
                      <li class="pre-context-line"><code>      validate_cmd!
      </code></li>
                      
                      <li class="pre-context-line"><code>      SharedHelpers.set_bundle_environment
      </code></li>
                      
                      <li class="pre-context-line"><code>      if bin_path = Bundler.which(cmd)
      </code></li>
                      
                      <li class="pre-context-line"><code>        if !Bundler.settings[:disable_exec_load] &amp;&amp; ruby_shebang?(bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="23" class="context" id="102"
                        onclick="toggle(102);">
                      <li class="context-line" id="context-102"><code>          return kernel_load(bin_path, *args)</code></li>
                    </ol>
      
                    
                    <ol start="24" class="post-context"
                        id="post-102" onclick="toggle(102);">
                      
                      <li class="post-context-line"><code>        end
      </code></li>
                      
                      <li class="post-context-line"><code>        kernel_exec(bin_path, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>      else
      </code></li>
                      
                      <li class="post-context-line"><code>        # exec using the given command
      </code></li>
                      
                      <li class="post-context-line"><code>        kernel_exec(cmd, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli.rb</code> in
                      <code><strong>exec</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="485"
                        class="pre-context" id="pre-103"
                        onclick="toggle(103);">
                      
                      <li class="pre-context-line"><code>    D
      </code></li>
                      
                      <li class="pre-context-line"><code>    def exec(*args)
      </code></li>
                      
                      <li class="pre-context-line"><code>      if ARGV.include?(&quot;--no-keep-file-descriptors&quot;)
      </code></li>
                      
                      <li class="pre-context-line"><code>        SharedHelpers.major_deprecation(2, &quot;The `--no-keep-file-descriptors` has been deprecated. `bundle exec` no longer mess with your file descriptors. Close them in the exec&#x27;d script if you need to&quot;)
      </code></li>
                      
                      <li class="pre-context-line"><code>      end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      require_relative &quot;cli&#x2F;exec&quot;
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="492" class="context" id="103"
                        onclick="toggle(103);">
                      <li class="context-line" id="context-103"><code>      Exec.new(options, args).run</code></li>
                    </ol>
      
                    
                    <ol start="493" class="post-context"
                        id="post-103" onclick="toggle(103);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    map aliases_for(&quot;exec&quot;)
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    desc &quot;config NAME [VALUE]&quot;, &quot;Retrieve or set a configuration value&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>    long_desc &lt;&lt;-D
      </code></li>
                      
                      <li class="post-context-line"><code>      Retrieves or sets a configuration value. If only one parameter is provided, retrieve the value. If two parameters are provided, replace the
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor&#x2F;command.rb</code> in
                      <code><strong>run</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="20"
                        class="pre-context" id="pre-104"
                        onclick="toggle(104);">
                      
                      <li class="pre-context-line"><code>    def run(instance, args = [])
      </code></li>
                      
                      <li class="pre-context-line"><code>      arity = nil
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      if private_method?(instance)
      </code></li>
                      
                      <li class="pre-context-line"><code>        instance.class.handle_no_command_error(name)
      </code></li>
                      
                      <li class="pre-context-line"><code>      elsif public_method?(instance)
      </code></li>
                      
                      <li class="pre-context-line"><code>        arity = instance.method(name).arity
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="27" class="context" id="104"
                        onclick="toggle(104);">
                      <li class="context-line" id="context-104"><code>        instance.__send__(name, *args)</code></li>
                    </ol>
      
                    
                    <ol start="28" class="post-context"
                        id="post-104" onclick="toggle(104);">
                      
                      <li class="post-context-line"><code>      elsif local_method?(instance, :method_missing)
      </code></li>
                      
                      <li class="post-context-line"><code>        instance.__send__(:method_missing, name.to_sym, *args)
      </code></li>
                      
                      <li class="post-context-line"><code>      else
      </code></li>
                      
                      <li class="post-context-line"><code>        instance.class.handle_no_command_error(name)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    rescue ArgumentError =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>      handle_argument_error?(instance, e, caller) ? instance.class.handle_argument_error(self, e, args, arity) : (raise e)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor&#x2F;invocation.rb</code> in
                      <code><strong>invoke_command</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="120"
                        class="pre-context" id="pre-105"
                        onclick="toggle(105);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    # Invoke the given command if the given args.
      </code></li>
                      
                      <li class="pre-context-line"><code>    def invoke_command(command, *args) #:nodoc:
      </code></li>
                      
                      <li class="pre-context-line"><code>      current = @_invocations[self.class]
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      unless current.include?(command.name)
      </code></li>
                      
                      <li class="pre-context-line"><code>        current &lt;&lt; command.name
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="127" class="context" id="105"
                        onclick="toggle(105);">
                      <li class="context-line" id="context-105"><code>        command.run(self, *args)</code></li>
                    </ol>
      
                    
                    <ol start="128" class="post-context"
                        id="post-105" onclick="toggle(105);">
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>    alias_method :invoke_task, :invoke_command
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # Invoke all commands for the current instance.
      </code></li>
                      
                      <li class="post-context-line"><code>    def invoke_all #:nodoc:
      </code></li>
                      
                      <li class="post-context-line"><code>      self.class.all_commands.map { |_, command| invoke_command(command) }
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor.rb</code> in
                      <code><strong>dispatch</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="385"
                        class="pre-context" id="pre-106"
                        onclick="toggle(106);">
                      
                      <li class="pre-context-line"><code>      config[:current_command] = command
      </code></li>
                      
                      <li class="pre-context-line"><code>      config[:command_options] = command.options
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      instance = new(args, opts, config)
      </code></li>
                      
                      <li class="pre-context-line"><code>      yield instance if block_given?
      </code></li>
                      
                      <li class="pre-context-line"><code>      args = instance.args
      </code></li>
                      
                      <li class="pre-context-line"><code>      trailing = args[Range.new(arguments.size, -1)]
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="392" class="context" id="106"
                        onclick="toggle(106);">
                      <li class="context-line" id="context-106"><code>      instance.invoke_command(command, trailing || [])</code></li>
                    </ol>
      
                    
                    <ol start="393" class="post-context"
                        id="post-106" onclick="toggle(106);">
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    # The banner for this class. You can customize it if you are invoking the
      </code></li>
                      
                      <li class="post-context-line"><code>    # thor class by another ways which is not the Bundler::Thor::Runner. It receives
      </code></li>
                      
                      <li class="post-context-line"><code>    # the command that is going to be invoked and a boolean which indicates if
      </code></li>
                      
                      <li class="post-context-line"><code>    # the namespace should be displayed as arguments.
      </code></li>
                      
                      <li class="post-context-line"><code>    #
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli.rb</code> in
                      <code><strong>dispatch</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="27"
                        class="pre-context" id="pre-107"
                        onclick="toggle(107);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>      super
      </code></li>
                      
                      <li class="pre-context-line"><code>    ensure
      </code></li>
                      
                      <li class="pre-context-line"><code>      Bundler::SharedHelpers.print_major_deprecations!
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def self.dispatch(*)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="34" class="context" id="107"
                        onclick="toggle(107);">
                      <li class="context-line" id="context-107"><code>      super do |i|</code></li>
                    </ol>
      
                    
                    <ol start="35" class="post-context"
                        id="post-107" onclick="toggle(107);">
                      
                      <li class="post-context-line"><code>        i.send(:print_command)
      </code></li>
                      
                      <li class="post-context-line"><code>        i.send(:warn_on_outdated_bundler)
      </code></li>
                      
                      <li class="post-context-line"><code>      end
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def self.all_aliases
      </code></li>
                      
                      <li class="post-context-line"><code>      @all_aliases ||= begin
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;vendor&#x2F;thor&#x2F;lib&#x2F;thor&#x2F;base.rb</code> in
                      <code><strong>start</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="478"
                        class="pre-context" id="pre-108"
                        onclick="toggle(108);">
                      
                      <li class="pre-context-line"><code>      # can simply initialize it:
      </code></li>
                      
                      <li class="pre-context-line"><code>      #
      </code></li>
                      
                      <li class="pre-context-line"><code>      #   script = MyScript.new(args, options, config)
      </code></li>
                      
                      <li class="pre-context-line"><code>      #   script.invoke(:command, first_arg, second_arg, third_arg)
      </code></li>
                      
                      <li class="pre-context-line"><code>      #
      </code></li>
                      
                      <li class="pre-context-line"><code>      def start(given_args = ARGV, config = {})
      </code></li>
                      
                      <li class="pre-context-line"><code>        config[:shell] ||= Bundler::Thor::Base.shell.new
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="485" class="context" id="108"
                        onclick="toggle(108);">
                      <li class="context-line" id="context-108"><code>        dispatch(nil, given_args.dup, nil, config)</code></li>
                    </ol>
      
                    
                    <ol start="486" class="post-context"
                        id="post-108" onclick="toggle(108);">
                      
                      <li class="post-context-line"><code>      rescue Bundler::Thor::Error =&gt; e
      </code></li>
                      
                      <li class="post-context-line"><code>        config[:debug] || ENV[&quot;THOR_DEBUG&quot;] == &quot;1&quot; ? (raise e) : config[:shell].error(e.message)
      </code></li>
                      
                      <li class="post-context-line"><code>        exit(false) if exit_on_failure?
      </code></li>
                      
                      <li class="post-context-line"><code>      rescue Errno::EPIPE
      </code></li>
                      
                      <li class="post-context-line"><code>        # This happens if a thor command is piped to something like `head`,
      </code></li>
                      
                      <li class="post-context-line"><code>        # which closes the pipe when it&#x27;s done reading. This will also
      </code></li>
                      
                      <li class="post-context-line"><code>        # mean that if the pipe is closed, further unnecessary
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;cli.rb</code> in
                      <code><strong>start</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="21"
                        class="pre-context" id="pre-109"
                        onclick="toggle(109);">
                      
                      <li class="pre-context-line"><code>      &quot;cache&quot; =&gt; [&quot;package&quot;, &quot;pack&quot;],
      </code></li>
                      
                      <li class="pre-context-line"><code>      &quot;version&quot; =&gt; [&quot;-v&quot;, &quot;--version&quot;],
      </code></li>
                      
                      <li class="pre-context-line"><code>    }.freeze
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    def self.start(*)
      </code></li>
                      
                      <li class="pre-context-line"><code>      check_deprecated_ext_option(ARGV) if ARGV.include?(&quot;--ext&quot;)
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="28" class="context" id="109"
                        onclick="toggle(109);">
                      <li class="context-line" id="context-109"><code>      super</code></li>
                    </ol>
      
                    
                    <ol start="29" class="post-context"
                        id="post-109" onclick="toggle(109);">
                      
                      <li class="post-context-line"><code>    ensure
      </code></li>
                      
                      <li class="post-context-line"><code>      Bundler::SharedHelpers.print_major_deprecations!
      </code></li>
                      
                      <li class="post-context-line"><code>    end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    def self.dispatch(*)
      </code></li>
                      
                      <li class="post-context-line"><code>      super do |i|
      </code></li>
                      
                      <li class="post-context-line"><code>        i.send(:print_command)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;exe&#x2F;bundle</code> in
                      <code><strong>block in &lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="38"
                        class="pre-context" id="pre-110"
                        onclick="toggle(110);">
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  # Allow any command to use --help flag to show help for that command
      </code></li>
                      
                      <li class="pre-context-line"><code>  help_flags = %w[--help -h]
      </code></li>
                      
                      <li class="pre-context-line"><code>  help_flag_used = ARGV.any? {|a| help_flags.include? a }
      </code></li>
                      
                      <li class="pre-context-line"><code>  args = help_flag_used ? Bundler::CLI.reformatted_help_args(ARGV) : ARGV
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="45" class="context" id="110"
                        onclick="toggle(110);">
                      <li class="context-line" id="context-110"><code>  Bundler::CLI.start(args, :debug =&gt; true)</code></li>
                    </ol>
      
                    
                    <ol start="46" class="post-context"
                        id="post-110" onclick="toggle(110);">
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;lib&#x2F;bundler&#x2F;friendly_errors.rb</code> in
                      <code><strong>with_friendly_errors</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="110"
                        class="pre-context" id="pre-111"
                        onclick="toggle(111);">
                      
                      <li class="pre-context-line"><code>    def new_issue_url
      </code></li>
                      
                      <li class="pre-context-line"><code>      &quot;https:&#x2F;&#x2F;github.com&#x2F;rubygems&#x2F;rubygems&#x2F;issues&#x2F;new?labels=Bundler&amp;template=bundler-related-issue.md&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>    end
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>  def self.with_friendly_errors
      </code></li>
                      
                      <li class="pre-context-line"><code>    FriendlyErrors.enable!
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="117" class="context" id="111"
                        onclick="toggle(111);">
                      <li class="context-line" id="context-111"><code>    yield</code></li>
                    </ol>
      
                    
                    <ol start="118" class="post-context"
                        id="post-111" onclick="toggle(111);">
                      
                      <li class="post-context-line"><code>  rescue SignalException
      </code></li>
                      
                      <li class="post-context-line"><code>    raise
      </code></li>
                      
                      <li class="post-context-line"><code>  rescue Exception =&gt; e # rubocop:disable Lint&#x2F;RescueException
      </code></li>
                      
                      <li class="post-context-line"><code>    raise if FriendlyErrors.disabled?
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>    FriendlyErrors.log_error(e)
      </code></li>
                      
                      <li class="post-context-line"><code>    exit FriendlyErrors.exit_status(e)
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;gems&#x2F;bundler-2.4.13&#x2F;exe&#x2F;bundle</code> in
                      <code><strong>&lt;top (required)&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="26"
                        class="pre-context" id="pre-112"
                        onclick="toggle(112);">
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if File.exist?(base_path)
      </code></li>
                      
                      <li class="pre-context-line"><code>  require_relative &quot;..&#x2F;lib&#x2F;bundler&#x2F;friendly_errors&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>else
      </code></li>
                      
                      <li class="pre-context-line"><code>  require &quot;bundler&#x2F;friendly_errors&quot;
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="33" class="context" id="112"
                        onclick="toggle(112);">
                      <li class="context-line" id="context-112"><code>Bundler.with_friendly_errors do</code></li>
                    </ol>
      
                    
                    <ol start="34" class="post-context"
                        id="post-112" onclick="toggle(112);">
                      
                      <li class="post-context-line"><code>  if File.exist?(base_path)
      </code></li>
                      
                      <li class="post-context-line"><code>    require_relative &quot;..&#x2F;lib&#x2F;bundler&#x2F;cli&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>  else
      </code></li>
                      
                      <li class="post-context-line"><code>    require &quot;bundler&#x2F;cli&quot;
      </code></li>
                      
                      <li class="post-context-line"><code>  end
      </code></li>
                      
                      <li class="post-context-line"><code>
      </code></li>
                      
                      <li class="post-context-line"><code>  # Allow any command to use --help flag to show help for that command
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;bundle</code> in
                      <code><strong>load</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-113"
                        onclick="toggle(113);">
                      
                      <li class="pre-context-line"><code>    ENV[&#x27;BUNDLER_VERSION&#x27;] = str
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="113"
                        onclick="toggle(113);">
                      <li class="context-line" id="context-113"><code>load Gem.activate_bin_path(&#x27;bundler&#x27;, &#x27;bundle&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-113" onclick="toggle(113);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;bundler&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;bundler&quot;, &quot;bundle&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
                
      
                  <li class="frame-info system">
                    <code>&#x2F;usr&#x2F;local&#x2F;bundle&#x2F;bin&#x2F;bundle</code> in
                      <code><strong>&lt;main&gt;</strong></code>
                  </li>
      
                  <li class="code system">
                    
                    <ol start="18"
                        class="pre-context" id="pre-114"
                        onclick="toggle(114);">
                      
                      <li class="pre-context-line"><code>    ENV[&#x27;BUNDLER_VERSION&#x27;] = str
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>    ARGV.shift
      </code></li>
                      
                      <li class="pre-context-line"><code>  end
      </code></li>
                      
                      <li class="pre-context-line"><code>end
      </code></li>
                      
                      <li class="pre-context-line"><code>
      </code></li>
                      
                      <li class="pre-context-line"><code>if Gem.respond_to?(:activate_bin_path)
      </code></li>
                      
                    </ol>
                    
      
                    <ol start="25" class="context" id="114"
                        onclick="toggle(114);">
                      <li class="context-line" id="context-114"><code>load Gem.activate_bin_path(&#x27;bundler&#x27;, &#x27;bundle&#x27;, version)</code></li>
                    </ol>
      
                    
                    <ol start="26" class="post-context"
                        id="post-114" onclick="toggle(114);">
                      
                      <li class="post-context-line"><code>else
      </code></li>
                      
                      <li class="post-context-line"><code>gem &quot;bundler&quot;, version
      </code></li>
                      
                      <li class="post-context-line"><code>load Gem.bin_path(&quot;bundler&quot;, &quot;bundle&quot;, version)
      </code></li>
                      
                      <li class="post-context-line"><code>end
      </code></li>
                      
                    </ol>
                    
                    <div class="clear"></div>
                  </li>
      
                
      
              
            
      
            </ul>
          </div> <!-- /BACKTRACE -->
      
          
            <div id="get">
              <h3 id="get-info">GET</h3>
              
                <table class="req">
                  <tr>
                    <th>Variable</th>
                    <th>Value</th>
                  </tr>
                   
                  <tr>
                    <td>Content-Type</td>
                    <td class="code"><div>&quot;application&#x2F;json&quot;</div></td>
                  </tr>
                  
                  <tr>
                    <td>titulo</td>
                    <td class="code"><div>&quot;Catch&quot;</div></td>
                  </tr>
                  
                </table>
              
              <div class="clear"></div>
            </div> <!-- /GET -->
      
            <div id="post">
              <h3 id="post-info">POST</h3>
              
                <p class="no-data">No POST data.</p>
              
              <div class="clear"></div>
            </div> <!-- /POST -->
          
      
          <div id="cookies">
            <h3 id="cookie-info">COOKIES</h3>
            
              <p class="no-data">No cookie data.</p>
            
            <div class="clear"></div>
          </div> <!-- /COOKIES -->
      
          <div id="rack">
            <h3 id="env-info">Rack ENV</h3>
            <table class="req">
              <tr>
                <th>Variable</th>
                <th>Value</th>
              </tr>
               
               <tr>
                 <td>CONTENT_LENGTH</td>
                 <td class="code"><div>0</div></td>
               </tr>
               
               <tr>
                 <td>HTTPS</td>
                 <td class="code"><div>off</div></td>
               </tr>
               
               <tr>
                 <td>HTTP_COOKIE</td>
                 <td class="code"><div></div></td>
               </tr>
               
               <tr>
                 <td>HTTP_HOST</td>
                 <td class="code"><div>example.org</div></td>
               </tr>
               
               <tr>
                 <td>HTTP_VERSION</td>
                 <td class="code"><div>HTTP&#x2F;1.0</div></td>
               </tr>
               
               <tr>
                 <td>PATH_INFO</td>
                 <td class="code"><div>&#x2F;contenido</div></td>
               </tr>
               
               <tr>
                 <td>QUERY_STRING</td>
                 <td class="code"><div>titulo=Catch&amp;Content-Type=application%2Fjson</div></td>
               </tr>
               
               <tr>
                 <td>REMOTE_ADDR</td>
                 <td class="code"><div>127.0.0.1</div></td>
               </tr>
               
               <tr>
                 <td>REQUEST_METHOD</td>
                 <td class="code"><div>GET</div></td>
               </tr>
               
               <tr>
                 <td>SCRIPT_NAME</td>
                 <td class="code"><div></div></td>
               </tr>
               
               <tr>
                 <td>SERVER_NAME</td>
                 <td class="code"><div>example.org</div></td>
               </tr>
               
               <tr>
                 <td>SERVER_PORT</td>
                 <td class="code"><div>80</div></td>
               </tr>
               
               <tr>
                 <td>SERVER_PROTOCOL</td>
                 <td class="code"><div>HTTP&#x2F;1.0</div></td>
               </tr>
               
               <tr>
                 <td>rack.errors</td>
                 <td class="code"><div>#&lt;Object:0x00007f0866eaad88&gt;</div></td>
               </tr>
               
               <tr>
                 <td>rack.input</td>
                 <td class="code"><div>#&lt;StringIO:0x00007f086474bdf0&gt;</div></td>
               </tr>
               
               <tr>
                 <td>rack.logger</td>
                 <td class="code"><div>#&lt;Logger:0x00007f086483e938 @level=1, @progname=nil, @default_formatter=#&lt;Logger::Formatter:0x00007f086474bd28 @datetime_format=nil&gt;, @formatter=nil, @logdev=#&lt;Logger::LogDevice:0x00007f086483e8e8 @shift_period_suffix=nil, @shift_size=nil, @shift_age=nil, @filename=nil, @dev=#&lt;StringIO:0x00007f086474be68&gt;, @binmode=false, @mon_data=#&lt;Monitor:0x00007f086474bd00&gt;, @mon_data_owner_object_id=60140&gt;, @level_override={}&gt;</div></td>
               </tr>
               
               <tr>
                 <td>rack.multiprocess</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>rack.multithread</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>rack.request.cookie_hash</td>
                 <td class="code"><div>{}</div></td>
               </tr>
               
               <tr>
                 <td>rack.request.cookie_string</td>
                 <td class="code"><div></div></td>
               </tr>
               
               <tr>
                 <td>rack.request.query_hash</td>
                 <td class="code"><div>{&quot;titulo&quot;=&gt;&quot;Catch&quot;, &quot;Content-Type&quot;=&gt;&quot;application&#x2F;json&quot;}</div></td>
               </tr>
               
               <tr>
                 <td>rack.request.query_string</td>
                 <td class="code"><div>titulo=Catch&amp;Content-Type=application%2Fjson</div></td>
               </tr>
               
               <tr>
                 <td>rack.run_once</td>
                 <td class="code"><div>false</div></td>
               </tr>
               
               <tr>
                 <td>rack.test</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>rack.url_scheme</td>
                 <td class="code"><div>http</div></td>
               </tr>
               
               <tr>
                 <td>rack.version</td>
                 <td class="code"><div>[1, 3]</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.accept</td>
                 <td class="code"><div>[#&lt;Sinatra::Request::AcceptEntry:0x00007f086494a480 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.commonlogger</td>
                 <td class="code"><div>true</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.error</td>
                 <td class="code"><div>#&lt;NoMethodError: undefined method `id&#x27; for an instance of Array&gt;</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.error.params</td>
                 <td class="code"><div>{&quot;titulo&quot;=&gt;&quot;Catch&quot;, &quot;Content-Type&quot;=&gt;&quot;application&#x2F;json&quot;}</div></td>
               </tr>
               
               <tr>
                 <td>sinatra.route</td>
                 <td class="code"><div>GET &#x2F;contenido</div></td>
               </tr>
               
            </table>
            <div class="clear"></div>
          </div> <!-- /RACK ENV -->
      
          <p id="explanation">You're seeing this error because you have
      enabled the <code>show_exceptions</code> setting.</p>
        </div> <!-- /WRAP -->
        </body>
      </html>
      ' (JSON::ParserError)
      ./features/step_definitions/busqueda_por_titulo_step.rb:15:in `"deber√≠a ver la pel√≠cula {string} listada entre las existentes"'
      features/busqueda_por_titulo.feature:16:in `deber√≠a ver la pel√≠cula "Catch me if you can" listada entre las existentes'
2024-06-10 22:18:36.607228 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Calificar contenido
2024-06-10 22:18:36.641804 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":393,"email":"pepito@gmail.com","id_telegram":123456789}

  Antecedentes:                                              # features/calificar_contenido.feature:4
2024-06-10 22:18:36.643008 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"juan@gmail.com", "id_telegram"=>123456789}
    Dado un usuario "juan@gmail.com" 123456789               # features/step_definitions/marcar_contenido_visto_steps.rb:4
2024-06-10 22:18:36.644101 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.644734 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Nahir", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.645624 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":710,"titulo":"Nahir","anio":2024,"genero":"drama"}
2024-06-10 22:18:36.646149 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"juan@gmail.com", "id_pelicula"=>710, "fecha"=>"2024-06-10T22:18:36+00:00"}
    Y que el usuario ya vio la pelicula "Nahir" 2024 "drama" # features/step_definitions/calificar_contenido_step.rb:4
2024-06-10 22:18:36.647865 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":958,"email":"juan@gmail.com","id_pelicula":710,"fecha":"2024-06-10T22:18:36+00:00"}

  Escenario: US15 - 01 Como cinefilo quiero poder calificar contenido ya visto # features/calificar_contenido.feature:8
2024-06-10 22:18:36.648531 I [2012:53020] restapi -- [POST] /calificacion - Iniciando creaci√≥n de una nueva calificion - Body: {"id_telegram"=>123456789, "id_pelicula"=>710, "calificacion"=>4}
    Cuando califica la pelicula con un 4                                       # features/step_definitions/calificar_contenido_step.rb:21
2024-06-10 22:18:36.650354 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":43,"id_telegram":123456789,"id_pelicula":710,"calificacion":4}
    Entonces ve un mensaje de exito                                            # features/step_definitions/calificar_contenido_step.rb:31
2024-06-10 22:18:36.651157 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Cargar peliculas via API
2024-06-10 22:18:36.652247 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}

  Escenario: US19 - 01 Como administrador quiero poder cargar una pelicula via API # features/cargar_contenido.feature:4
2024-06-10 22:18:36.653173 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Suerte", "anio"=>2022, "genero"=>"comedia"}
    Cuando cargo "Suerte" 2022 "comedia"                                           # features/step_definitions/cargar_contenido_steps.rb:17
2024-06-10 22:18:36.654115 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":711,"titulo":"Suerte","anio":2022,"genero":"comedia"}
    Entonces deberia devolver un resultado exitoso                                 # features/step_definitions/cargar_contenido_steps.rb:58
2024-06-10 22:18:36.654892 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  @failing
  Escenario: US19 - 02 Como administrador cargo una pelicula repetido via API                                           # features/cargar_contenido.feature:9
2024-06-10 22:18:36.655587 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.656383 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Atlas", "anio"=>2024, "genero"=>"accion"}
    Dado que ya esta cargada la pelicula "Atlas" 2024 "accion"                                                          # features/step_definitions/cargar_contenido_steps.rb:4
2024-06-10 22:18:36.657266 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":712,"titulo":"Atlas","anio":2024,"genero":"accion"}
2024-06-10 22:18:36.657810 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Atlas", "anio"=>2024, "genero"=>"drama"}
    Cuando cargo "Atlas" 2024 "drama" ya es un contenido existente                                                      # features/step_definitions/cargar_contenido_steps.rb:45
2024-06-10 22:18:36.658199 I [2012:53020] restapi -- [Status] : 409 - [Response] : {"error":"Conflicto","message":"Ya existe una pelicula con el mismo titulo y a√±o.","details":{"field":"titulo anio"}}
    Entonces deberia devolver conflicto (409) y un mensaje de error "Ya existe una pelicula con el mismo titulo y a√±o." # features/step_definitions/cargar_contenido_steps.rb:85
2024-06-10 22:18:36.658868 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US19 - 03 Como administrador cargo una pelicula sin a√±o                                                                  # features/cargar_contenido.feature:14
2024-06-10 22:18:36.659572 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}
    Cuando cargo "Nahir" "comedia"                                                                                                    # features/step_definitions/cargar_contenido_steps.rb:27
2024-06-10 22:18:36.660448 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Nahir", "genero"=>"comedia"}
2024-06-10 22:18:36.660550 I [2012:53020] restapi -- [Status] : 400 - [Response] : {"error":"Solicitud Incorrecta","message":"El parametro requerido anio debe ser un a√±o positivo","details":{"field":"anio"}}
    Entonces deberia devolver solicitud incorrecta (400) y un mensaje de error "El parametro requerido anio debe ser un a√±o positivo" # features/step_definitions/cargar_contenido_steps.rb:69
2024-06-10 22:18:36.661213 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US19 - 04 Como administrador cargo una pelicula sin titulo                                                           # features/cargar_contenido.feature:18
2024-06-10 22:18:36.661568 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}
    Cuando cargo 2024 "drama"                                                                                                     # features/step_definitions/cargar_contenido_steps.rb:36
2024-06-10 22:18:36.662389 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.662487 I [2012:53020] restapi -- [Status] : 400 - [Response] : {"error":"Solicitud Incorrecta","message":"El parametro requerido titulo debe ser un nombre","details":{"field":"titulo"}}
    Entonces deberia devolver solicitud incorrecta (400) y un mensaje de error "El parametro requerido titulo debe ser un nombre" # features/step_definitions/cargar_contenido_steps.rb:69
2024-06-10 22:18:36.663264 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US19 - 05 Como administrador cargo una pelicula con titulo vacio                                                     # features/cargar_contenido.feature:22
2024-06-10 22:18:36.663602 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}
    Cuando cargo "" 2024 "drama"                                                                                                  # features/step_definitions/cargar_contenido_steps.rb:17
2024-06-10 22:18:36.664384 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.664506 I [2012:53020] restapi -- [Status] : 400 - [Response] : {"error":"Solicitud Incorrecta","message":"El parametro requerido titulo debe ser un nombre","details":{"field":"titulo"}}
    Entonces deberia devolver solicitud incorrecta (400) y un mensaje de error "El parametro requerido titulo debe ser un nombre" # features/step_definitions/cargar_contenido_steps.rb:69
2024-06-10 22:18:36.665069 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US19 - 06 Como administrador cargo un dato invalido                                                                                # features/cargar_contenido.feature:26
2024-06-10 22:18:36.665327 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}
    Cuando cargo "Oppenheimer" 2024 "suspenso"                                                                                                  # features/step_definitions/cargar_contenido_steps.rb:17
2024-06-10 22:18:36.666047 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Oppenheimer", "anio"=>2024, "genero"=>"suspenso"}
2024-06-10 22:18:36.666194 I [2012:53020] restapi -- [Status] : 400 - [Response] : {"error":"Solicitud Incorrecta","message":"El parametro requerido genero debe ser drama, accion o comedia","details":{"field":"genero"}}
    Entonces deberia devolver solicitud incorrecta (400) y un mensaje de error "El parametro requerido genero debe ser drama, accion o comedia" # features/step_definitions/cargar_contenido_steps.rb:69
    Y en los detalles se debe especificar los generos permitidos                                                                                # features/step_definitions/cargar_contenido_steps.rb:78
2024-06-10 22:18:36.667131 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Consultar los contenidos m√°s vistos
2024-06-10 22:18:36.667518 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":394,"email":"juan@gmail.com","id_telegram":123456789}

  Antecedentes:                                                                  # features/consultar_contenido_mas_visto.feature:4
2024-06-10 22:18:36.668635 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"fer@gmail.com", "id_telegram"=>123456789}
    Dado que existe un usuario con email "fer@gmail.com" y id_telegram 123456789 # features/step_definitions/consultar_contenido_mas_visto_steps.rb:6
2024-06-10 22:18:36.669864 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":395,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.670687 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Nahir", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.671749 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":713,"titulo":"Nahir","anio":2024,"genero":"drama"}
2024-06-10 22:18:36.672181 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Amor", "anio"=>2001, "genero"=>"comedia"}
2024-06-10 22:18:36.673079 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":714,"titulo":"Amor","anio":2001,"genero":"comedia"}
2024-06-10 22:18:36.673418 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Batman", "anio"=>1998, "genero"=>"accion"}
    Dado que existen 3 contenidos en la plataforma                               # features/step_definitions/consultar_contenido_mas_visto_steps.rb:11
2024-06-10 22:18:36.674160 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":715,"titulo":"Batman","anio":1998,"genero":"accion"}

  Escenario: US14 - 01 Como cinefilo quiero consultar lista de contenidos mas vistos # features/consultar_contenido_mas_visto.feature:8
2024-06-10 22:18:36.674941 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>713, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.676402 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":959,"email":"fer@gmail.com","id_pelicula":713,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.676799 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>713, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.677966 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":960,"email":"fer@gmail.com","id_pelicula":713,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.678322 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>713, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.679656 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":961,"email":"fer@gmail.com","id_pelicula":713,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.680032 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>714, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.681250 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":962,"email":"fer@gmail.com","id_pelicula":714,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.681747 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>714, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.683144 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":963,"email":"fer@gmail.com","id_pelicula":714,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.683527 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>715, "fecha"=>"2024-06-10T22:18:36+00:00"}
    Dado que hay 3 contenidos vistos en la plataforma                                # features/step_definitions/consultar_contenido_mas_visto_steps.rb:22
2024-06-10 22:18:36.684897 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":964,"email":"fer@gmail.com","id_pelicula":715,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.685532 I [2012:53020] restapi -- [GET] /visualizacion/top - Consultando las visualizaciones existentes
    Cuando se consulta por la lista de contenidos mas vistos                         # features/step_definitions/consultar_contenido_mas_visto_steps.rb:132
2024-06-10 22:18:36.690892 I [2012:53020] restapi -- [Status] : 200 - [Response] : [{"id":713,"pelicula":{"titulo":"Nahir","anio":2024,"genero":"drama"},"vistas":3},{"id":714,"pelicula":{"titulo":"Amor","anio":2001,"genero":"comedia"},"vistas":2},{"id":715,"pelicula":{"titulo":"Batman","anio":1998,"genero":"accion"},"vistas":1}]
    Entonces se ve una lista de los 3 contenidos mas vistos                          # features/step_definitions/consultar_contenido_mas_visto_steps.rb:139
2024-06-10 22:18:36.692272 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US14 - 02 Mas de 3 contenidos tuvieron la misma cantidad de visualizaciones maximas se resuelve alfabeticamente # features/consultar_contenido_mas_visto.feature:13
2024-06-10 22:18:36.693447 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":395,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.694513 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"fer@gmail.com", "id_telegram"=>123456789}
2024-06-10 22:18:36.695865 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":396,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.696356 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Nahir", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.697182 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":716,"titulo":"Nahir","anio":2024,"genero":"drama"}
2024-06-10 22:18:36.697526 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Amor", "anio"=>2001, "genero"=>"comedia"}
2024-06-10 22:18:36.698243 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":717,"titulo":"Amor","anio":2001,"genero":"comedia"}
2024-06-10 22:18:36.698568 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Batman", "anio"=>1998, "genero"=>"accion"}
2024-06-10 22:18:36.699503 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":718,"titulo":"Batman","anio":1998,"genero":"accion"}
2024-06-10 22:18:36.700157 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Alfa", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.701204 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":719,"titulo":"Alfa","anio":2024,"genero":"drama"}
2024-06-10 22:18:36.701543 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Beta", "anio"=>2001, "genero"=>"comedia"}
2024-06-10 22:18:36.702401 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":720,"titulo":"Beta","anio":2001,"genero":"comedia"}
2024-06-10 22:18:36.702717 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Gamma", "anio"=>1998, "genero"=>"accion"}
2024-06-10 22:18:36.703429 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":721,"titulo":"Gamma","anio":1998,"genero":"accion"}
2024-06-10 22:18:36.703685 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Delta", "anio"=>1998, "genero"=>"accion"}
    Dado que hay 4 contenidos: "Alfa", "Beta", "Gamma", "Delta"                                                              # features/step_definitions/consultar_contenido_mas_visto_steps.rb:57
2024-06-10 22:18:36.704367 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":722,"titulo":"Delta","anio":1998,"genero":"accion"}
2024-06-10 22:18:36.705102 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>719, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.706438 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":965,"email":"fer@gmail.com","id_pelicula":719,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.706794 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>720, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.707914 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":966,"email":"fer@gmail.com","id_pelicula":720,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.708232 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>721, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.709228 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":967,"email":"fer@gmail.com","id_pelicula":721,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.709488 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>722, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.710710 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":968,"email":"fer@gmail.com","id_pelicula":722,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.711041 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>719, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.712059 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":969,"email":"fer@gmail.com","id_pelicula":719,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.712327 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>720, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.713304 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":970,"email":"fer@gmail.com","id_pelicula":720,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.713552 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>721, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.714573 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":971,"email":"fer@gmail.com","id_pelicula":721,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.714825 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>722, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.715831 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":972,"email":"fer@gmail.com","id_pelicula":722,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.716116 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>719, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.717126 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":973,"email":"fer@gmail.com","id_pelicula":719,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.717389 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>720, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.718419 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":974,"email":"fer@gmail.com","id_pelicula":720,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.718673 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>721, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.719656 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":975,"email":"fer@gmail.com","id_pelicula":721,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.719923 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>722, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.721074 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":976,"email":"fer@gmail.com","id_pelicula":722,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.721397 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>719, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.722473 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":977,"email":"fer@gmail.com","id_pelicula":719,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.722743 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>720, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.723730 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":978,"email":"fer@gmail.com","id_pelicula":720,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.723984 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>721, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.724972 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":979,"email":"fer@gmail.com","id_pelicula":721,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.725250 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>722, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.726239 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":980,"email":"fer@gmail.com","id_pelicula":722,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.726503 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>719, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.727469 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":981,"email":"fer@gmail.com","id_pelicula":719,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.727715 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>720, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.728658 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":982,"email":"fer@gmail.com","id_pelicula":720,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.728900 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>721, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.729853 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":983,"email":"fer@gmail.com","id_pelicula":721,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.733050 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>722, "fecha"=>"2024-06-10T22:18:36+00:00"}
    Y que los 4 contenidos son los mas vistos en la plataforma con la misma cantidad de vistas                               # features/step_definitions/consultar_contenido_mas_visto_steps.rb:71
2024-06-10 22:18:36.734492 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":984,"email":"fer@gmail.com","id_pelicula":722,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.735248 I [2012:53020] restapi -- [GET] /visualizacion/top - Consultando las visualizaciones existentes
    Cuando se consulta por la lista de contenidos mas vistos                                                                 # features/step_definitions/consultar_contenido_mas_visto_steps.rb:132
2024-06-10 22:18:36.746499 I [2012:53020] restapi -- [Status] : 200 - [Response] : [{"id":719,"pelicula":{"titulo":"Alfa","anio":2024,"genero":"drama"},"vistas":5},{"id":720,"pelicula":{"titulo":"Beta","anio":2001,"genero":"comedia"},"vistas":5},{"id":722,"pelicula":{"titulo":"Delta","anio":1998,"genero":"accion"},"vistas":5}]
    Entonces se ve una lista de los 3 contenidos m√°s vistos, seleccionados alfab√©ticamente: "Alfa", "Beta", "Delta"          # features/step_definitions/consultar_contenido_mas_visto_steps.rb:155
2024-06-10 22:18:36.747445 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US14 - 03 Hay menos de 3 contenidos visualizados     # features/consultar_contenido_mas_visto.feature:19
2024-06-10 22:18:36.748471 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":396,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.749806 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"fer@gmail.com", "id_telegram"=>123456789}
2024-06-10 22:18:36.750902 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":397,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.751324 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Nahir", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.752118 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":723,"titulo":"Nahir","anio":2024,"genero":"drama"}
2024-06-10 22:18:36.752414 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Amor", "anio"=>2001, "genero"=>"comedia"}
2024-06-10 22:18:36.753100 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":724,"titulo":"Amor","anio":2001,"genero":"comedia"}
2024-06-10 22:18:36.753353 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Batman", "anio"=>1998, "genero"=>"accion"}
2024-06-10 22:18:36.754036 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":725,"titulo":"Batman","anio":1998,"genero":"accion"}
2024-06-10 22:18:36.754392 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>723, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.755464 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":985,"email":"fer@gmail.com","id_pelicula":723,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.755739 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>723, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.756935 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":986,"email":"fer@gmail.com","id_pelicula":723,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.757221 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>723, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.758197 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":987,"email":"fer@gmail.com","id_pelicula":723,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.758462 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>724, "fecha"=>"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.759507 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":988,"email":"fer@gmail.com","id_pelicula":724,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.759800 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"fer@gmail.com", "id_pelicula"=>724, "fecha"=>"2024-06-10T22:18:36+00:00"}
    Dado que solo hay 2 contenidos que obtuvieron visualizaciones # features/step_definitions/consultar_contenido_mas_visto_steps.rb:104
2024-06-10 22:18:36.760789 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":989,"email":"fer@gmail.com","id_pelicula":724,"fecha":"2024-06-10T22:18:36+00:00"}
2024-06-10 22:18:36.761317 I [2012:53020] restapi -- [GET] /visualizacion/top - Consultando las visualizaciones existentes
    Cuando se consulta por la lista de contenidos mas vistos      # features/step_definitions/consultar_contenido_mas_visto_steps.rb:132
2024-06-10 22:18:36.764578 I [2012:53020] restapi -- [Status] : 200 - [Response] : [{"id":723,"pelicula":{"titulo":"Nahir","anio":2024,"genero":"drama"},"vistas":3},{"id":724,"pelicula":{"titulo":"Amor","anio":2001,"genero":"comedia"},"vistas":2}]
    Entonces se ve una lista de 2 contenidos                      # features/step_definitions/consultar_contenido_mas_visto_steps.rb:174
2024-06-10 22:18:36.765447 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US14 - 04 No hubo ninguna visualizacion         # features/consultar_contenido_mas_visto.feature:24
2024-06-10 22:18:36.766488 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":397,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.767456 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"fer@gmail.com", "id_telegram"=>123456789}
2024-06-10 22:18:36.768470 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":398,"email":"fer@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.768886 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Nahir", "anio"=>2024, "genero"=>"drama"}
2024-06-10 22:18:36.769735 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":726,"titulo":"Nahir","anio":2024,"genero":"drama"}
2024-06-10 22:18:36.770054 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Amor", "anio"=>2001, "genero"=>"comedia"}
2024-06-10 22:18:36.770775 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":727,"titulo":"Amor","anio":2001,"genero":"comedia"}
2024-06-10 22:18:36.771051 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Batman", "anio"=>1998, "genero"=>"accion"}
2024-06-10 22:18:36.771720 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":728,"titulo":"Batman","anio":1998,"genero":"accion"}
2024-06-10 22:18:36.772196 I [2012:53020] restapi -- [GET] /visualizacion/top - Consultando las visualizaciones existentes
    Cuando se consulta por la lista de contenidos mas vistos # features/step_definitions/consultar_contenido_mas_visto_steps.rb:132
2024-06-10 22:18:36.772346 I [2012:53020] restapi -- [Status] : 200 - [Response] : []
    Entonces tengo un listado de vistos vacio                # features/step_definitions/consultar_contenido_mas_visto_steps.rb:187
2024-06-10 22:18:36.772895 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Infraestructura
2024-06-10 22:18:36.773851 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":398,"email":"fer@gmail.com","id_telegram":123456789}

  Escenario: version                # features/infra.feature:4
    Cuando pido /version            # features/step_definitions/infra_steps.rb:1
2024-06-10 22:18:36.774793 I [2012:53020] restapi -- [GET] /version - Consultando la version de la API Rest
2024-06-10 22:18:36.774822 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"version":"0.9.11"}
    Entonces obtengo la version app # features/step_definitions/infra_steps.rb:5
2024-06-10 22:18:36.775525 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Marcar contenido como visto
2024-06-10 22:18:36.775855 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":398,"email":"fer@gmail.com","id_telegram":123456789}

  Antecedentes:                                        # features/marcar_contenido_visto.feature:4
2024-06-10 22:18:36.776726 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"juan@gmail.com", "id_telegram"=>123456789}
    Dado un usuario "juan@gmail.com" 123456789         # features/step_definitions/marcar_contenido_visto_steps.rb:4
2024-06-10 22:18:36.777907 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":399,"email":"juan@gmail.com","id_telegram":123456789}
2024-06-10 22:18:36.778776 I [2012:53020] restapi -- [POST] /contenido - Iniciando creaci√≥n de un nuevo contenido - Body: {"titulo"=>"Iron Man", "anio"=>2008, "genero"=>"accion"}
    Y que existe el contenido "Iron Man" 2008 "accion" # features/step_definitions/marcar_contenido_visto_steps.rb:9
2024-06-10 22:18:36.779761 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":729,"titulo":"Iron Man","anio":2008,"genero":"accion"}

  Escenario: US06 - 01 Como administrador quiero marcar el contenido visto de un usuario    # features/marcar_contenido_visto.feature:8
    Cuando el usuario lo visualiza                                                          # features/step_definitions/marcar_contenido_visto_steps.rb:17
2024-06-10 22:18:36.780645 I [2012:53020] restapi -- [POST] /visualizacion - Iniciando creaci√≥n de una nueva visualizacion - Body: {"email"=>"juan@gmail.com", "id_pelicula"=>729, "fecha"=>"2024-06-10T22:18:36+00:00"}
    Entonces el administrador deber√≠a poder marcar el contenido como visto para ese usuario # features/step_definitions/marcar_contenido_visto_steps.rb:24
2024-06-10 22:18:36.782083 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":990,"email":"juan@gmail.com","id_pelicula":729,"fecha":"2024-06-10T22:18:36+00:00"}
    Y deberia ver un mensaje de la visualizacion cargada exitosamente                       # features/step_definitions/marcar_contenido_visto_steps.rb:38
2024-06-10 22:18:36.782792 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

# language: es
Caracter√≠stica: Registrar usuario
2024-06-10 22:18:36.783711 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":399,"email":"juan@gmail.com","id_telegram":123456789}

  Escenario: US01 - 01 Un usuario sin registrar se puede registrar correctamente    # features/registrar_usuario.feature:4
    Dado que no estoy registrado                                                    # features/step_definitions/registrar_usuario_steps.rb:4
2024-06-10 22:18:36.784955 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"emilio@gmail.com", "id_telegram"=>5030671568}
    Cuando creo un usuario con el email "emilio@gmail.com" y telegram ID 5030671568 # features/step_definitions/registrar_usuario_steps.rb:19
2024-06-10 22:18:36.786127 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":400,"email":"emilio@gmail.com","id_telegram":5030671568}
    Entonces deber√≠a ver un mensaje de bienvenida                                   # features/step_definitions/registrar_usuario_steps.rb:40
    Y quedo registrado                                                              # features/step_definitions/registrar_usuario_steps.rb:44
2024-06-10 22:18:36.787065 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US01 - 02 Registrarse con un email inv√°lido da error            # features/registrar_usuario.feature:10
2024-06-10 22:18:36.787781 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"id":400,"email":"emilio@gmail.com","id_telegram":5030671568}
    Cuando creo un usuario con el email "gmail.com" y telegram ID 5030671568 # features/step_definitions/registrar_usuario_steps.rb:19
2024-06-10 22:18:36.788626 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"gmail.com", "id_telegram"=>5030671568}
2024-06-10 22:18:36.788734 I [2012:53020] restapi -- [Status] : 422 - [Response] : {"error":"Entidad no procesable","message":"La solicitud no pudo completarse debido a un error sem√°ntico en email","details":{"field":"email"}}
    Entonces deber√≠a ver un mensaje de email inv√°lido                        # features/step_definitions/registrar_usuario_steps.rb:52
2024-06-10 22:18:36.789639 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US01 - 03 Registrarse con un telegram ID ya registrado da error                          # features/registrar_usuario.feature:14
2024-06-10 22:18:36.790098 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"error":"Entidad no procesable","message":"La solicitud no pudo completarse debido a un error sem√°ntico en email","details":{"field":"email"}}
2024-06-10 22:18:36.790967 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"emilio@gmail.com", "id_telegram"=>5030671568}
    Dado que creo un usuario con email "emilio@gmail.com" y telegram ID 5030671568                    # features/step_definitions/registrar_usuario_steps.rb:8
2024-06-10 22:18:36.792205 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":401,"email":"emilio@gmail.com","id_telegram":5030671568}
2024-06-10 22:18:36.792836 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"pablo@gmail.com", "id_telegram"=>5030671568}
    Cuando creo un usuario con el email "pablo@gmail.com" y mismo telegram ID que el usuario anterior # features/step_definitions/registrar_usuario_steps.rb:27
2024-06-10 22:18:36.793176 I [2012:53020] restapi -- [Status] : 409 - [Response] : {"error":"Conflicto","message":"Usuario ya existente","details":{"field":"id_telegram"}}
    Entonces deber√≠a ver un mensaje de usuario de telegram ya registrado                              # features/step_definitions/registrar_usuario_steps.rb:60
2024-06-10 22:18:36.793808 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

  Escenario: US01 - 04 Un registro a un mail ya registrado da error                            # features/registrar_usuario.feature:19
2024-06-10 22:18:36.794492 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"error":"Conflicto","message":"Usuario ya existente","details":{"field":"id_telegram"}}
2024-06-10 22:18:36.795343 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"emilio@gmail.com", "id_telegram"=>1234567899}
    Dado que creo un usuario con email "emilio@gmail.com" y telegram ID 1234567899             # features/step_definitions/registrar_usuario_steps.rb:8
2024-06-10 22:18:36.796336 I [2012:53020] restapi -- [Status] : 201 - [Response] : {"id":402,"email":"emilio@gmail.com","id_telegram":1234567899}
2024-06-10 22:18:36.796824 I [2012:53020] restapi -- [POST] /usuarios - Iniciando creaci√≥n de un nuevo usuario - Body: {"email"=>"emilio@gmail.com", "id_telegram"=>5030671568}
    Cuando creo un usuario con el mismo email que el usuario anterior y telegram ID 5030671568 # features/step_definitions/registrar_usuario_steps.rb:32
2024-06-10 22:18:36.797257 I [2012:53020] restapi -- [Status] : 409 - [Response] : {"error":"Conflicto","message":"Usuario ya existente","details":{"field":"email"}}
    Entonces deber√≠a ver un mensaje de email ya registrado                                     # features/step_definitions/registrar_usuario_steps.rb:68
2024-06-10 22:18:36.797911 I [2012:53020] restapi -- [POST] /reset - Reinicia la base de datos

Failing Scenarios:
cucumber features/busqueda_por_titulo.feature:8 # Escenario: US08 - 01 Como cinefilo quiero buscar una pelicula por su nombre completo
cucumber features/busqueda_por_titulo.feature:13 # Escenario: US08 - 02 Como cinefilo quiero buscar una pelicula por su nombre parcial

22 scenarios (2 failed, 20 passed)
75 steps (2 failed, 73 passed)
0m4.449s
2024-06-10 22:18:36.798523 I [2012:53020] restapi -- [Status] : 200 - [Response] : {"error":"Conflicto","message":"Usuario ya existente","details":{"field":"email"}}
